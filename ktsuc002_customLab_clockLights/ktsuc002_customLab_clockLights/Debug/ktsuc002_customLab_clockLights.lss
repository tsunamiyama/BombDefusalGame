
ktsuc002_customLab_clockLights.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  0000092e  000009c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000092e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000036  0080010a  0080010a  000009cc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009cc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000a3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c9b  00000000  00000000  00000ac4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009e2  00000000  00000000  0000175f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006e2  00000000  00000000  00002141  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000188  00000000  00000000  00002824  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000573  00000000  00000000  000029ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000581  00000000  00000000  00002f1f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000034a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4f c0       	rjmp	.+158    	; 0xa0 <__ctors_end>
   2:	00 00       	nop
   4:	6a c0       	rjmp	.+212    	; 0xda <__bad_interrupt>
   6:	00 00       	nop
   8:	68 c0       	rjmp	.+208    	; 0xda <__bad_interrupt>
   a:	00 00       	nop
   c:	66 c0       	rjmp	.+204    	; 0xda <__bad_interrupt>
   e:	00 00       	nop
  10:	64 c0       	rjmp	.+200    	; 0xda <__bad_interrupt>
  12:	00 00       	nop
  14:	62 c0       	rjmp	.+196    	; 0xda <__bad_interrupt>
  16:	00 00       	nop
  18:	60 c0       	rjmp	.+192    	; 0xda <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5e c0       	rjmp	.+188    	; 0xda <__bad_interrupt>
  1e:	00 00       	nop
  20:	5c c0       	rjmp	.+184    	; 0xda <__bad_interrupt>
  22:	00 00       	nop
  24:	5a c0       	rjmp	.+180    	; 0xda <__bad_interrupt>
  26:	00 00       	nop
  28:	58 c0       	rjmp	.+176    	; 0xda <__bad_interrupt>
  2a:	00 00       	nop
  2c:	56 c0       	rjmp	.+172    	; 0xda <__bad_interrupt>
  2e:	00 00       	nop
  30:	54 c0       	rjmp	.+168    	; 0xda <__bad_interrupt>
  32:	00 00       	nop
  34:	d4 c0       	rjmp	.+424    	; 0x1de <__vector_13>
  36:	00 00       	nop
  38:	50 c0       	rjmp	.+160    	; 0xda <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4e c0       	rjmp	.+156    	; 0xda <__bad_interrupt>
  3e:	00 00       	nop
  40:	4c c0       	rjmp	.+152    	; 0xda <__bad_interrupt>
  42:	00 00       	nop
  44:	4a c0       	rjmp	.+148    	; 0xda <__bad_interrupt>
  46:	00 00       	nop
  48:	48 c0       	rjmp	.+144    	; 0xda <__bad_interrupt>
  4a:	00 00       	nop
  4c:	46 c0       	rjmp	.+140    	; 0xda <__bad_interrupt>
  4e:	00 00       	nop
  50:	44 c0       	rjmp	.+136    	; 0xda <__bad_interrupt>
  52:	00 00       	nop
  54:	42 c0       	rjmp	.+132    	; 0xda <__bad_interrupt>
  56:	00 00       	nop
  58:	40 c0       	rjmp	.+128    	; 0xda <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3e c0       	rjmp	.+124    	; 0xda <__bad_interrupt>
  5e:	00 00       	nop
  60:	3c c0       	rjmp	.+120    	; 0xda <__bad_interrupt>
  62:	00 00       	nop
  64:	3a c0       	rjmp	.+116    	; 0xda <__bad_interrupt>
  66:	00 00       	nop
  68:	38 c0       	rjmp	.+112    	; 0xda <__bad_interrupt>
  6a:	00 00       	nop
  6c:	36 c0       	rjmp	.+108    	; 0xda <__bad_interrupt>
  6e:	00 00       	nop
  70:	34 c0       	rjmp	.+104    	; 0xda <__bad_interrupt>
  72:	00 00       	nop
  74:	32 c0       	rjmp	.+100    	; 0xda <__bad_interrupt>
  76:	00 00       	nop
  78:	30 c0       	rjmp	.+96     	; 0xda <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2e c0       	rjmp	.+92     	; 0xda <__bad_interrupt>
  7e:	00 00       	nop
  80:	2c c0       	rjmp	.+88     	; 0xda <__bad_interrupt>
  82:	00 00       	nop
  84:	2a c0       	rjmp	.+84     	; 0xda <__bad_interrupt>
  86:	00 00       	nop
  88:	28 c0       	rjmp	.+80     	; 0xda <__bad_interrupt>
  8a:	00 00       	nop
  8c:	9f 00       	.word	0x009f	; ????
  8e:	9b 00       	.word	0x009b	; ????
  90:	97 00       	.word	0x0097	; ????
  92:	93 00       	.word	0x0093	; ????
  94:	8f 00       	.word	0x008f	; ????
  96:	8b 00       	.word	0x008b	; ????
  98:	87 00       	.word	0x0087	; ????
  9a:	82 00       	.word	0x0082	; ????
  9c:	7c 00       	.word	0x007c	; ????
  9e:	77 00       	.word	0x0077	; ????

000000a0 <__ctors_end>:
  a0:	11 24       	eor	r1, r1
  a2:	1f be       	out	0x3f, r1	; 63
  a4:	cf ef       	ldi	r28, 0xFF	; 255
  a6:	d0 e4       	ldi	r29, 0x40	; 64
  a8:	de bf       	out	0x3e, r29	; 62
  aa:	cd bf       	out	0x3d, r28	; 61

000000ac <__do_copy_data>:
  ac:	11 e0       	ldi	r17, 0x01	; 1
  ae:	a0 e0       	ldi	r26, 0x00	; 0
  b0:	b1 e0       	ldi	r27, 0x01	; 1
  b2:	ee e2       	ldi	r30, 0x2E	; 46
  b4:	f9 e0       	ldi	r31, 0x09	; 9
  b6:	00 e0       	ldi	r16, 0x00	; 0
  b8:	0b bf       	out	0x3b, r16	; 59
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <__do_copy_data+0x14>
  bc:	07 90       	elpm	r0, Z+
  be:	0d 92       	st	X+, r0
  c0:	aa 30       	cpi	r26, 0x0A	; 10
  c2:	b1 07       	cpc	r27, r17
  c4:	d9 f7       	brne	.-10     	; 0xbc <__do_copy_data+0x10>

000000c6 <__do_clear_bss>:
  c6:	21 e0       	ldi	r18, 0x01	; 1
  c8:	aa e0       	ldi	r26, 0x0A	; 10
  ca:	b1 e0       	ldi	r27, 0x01	; 1
  cc:	01 c0       	rjmp	.+2      	; 0xd0 <.do_clear_bss_start>

000000ce <.do_clear_bss_loop>:
  ce:	1d 92       	st	X+, r1

000000d0 <.do_clear_bss_start>:
  d0:	a0 34       	cpi	r26, 0x40	; 64
  d2:	b2 07       	cpc	r27, r18
  d4:	e1 f7       	brne	.-8      	; 0xce <.do_clear_bss_loop>
  d6:	4f d1       	rcall	.+670    	; 0x376 <main>
  d8:	28 c4       	rjmp	.+2128   	; 0x92a <_exit>

000000da <__bad_interrupt>:
  da:	92 cf       	rjmp	.-220    	; 0x0 <__vectors>

000000dc <ClockLightBar>:
	// CS01 & CS30: Set a prescaler of 64
	set_PWM(0); 
}
void PWM_off() {
	TCCR0A = 0x00;
	TCCR0B = 0x00;
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	fc 01       	movw	r30, r24
  e0:	31 97       	sbiw	r30, 0x01	; 1
  e2:	ea 30       	cpi	r30, 0x0A	; 10
  e4:	f1 05       	cpc	r31, r1
  e6:	78 f5       	brcc	.+94     	; 0x146 <ClockLightBar+0x6a>
  e8:	ea 5b       	subi	r30, 0xBA	; 186
  ea:	ff 4f       	sbci	r31, 0xFF	; 255
  ec:	15 c4       	rjmp	.+2090   	; 0x918 <__tablejump2__>
  ee:	8f ef       	ldi	r24, 0xFF	; 255
  f0:	88 b9       	out	0x08, r24	; 8
  f2:	8b b9       	out	0x0b, r24	; 11
  f4:	89 e0       	ldi	r24, 0x09	; 9
  f6:	08 95       	ret
  f8:	8f ef       	ldi	r24, 0xFF	; 255
  fa:	88 b9       	out	0x08, r24	; 8
  fc:	80 e8       	ldi	r24, 0x80	; 128
  fe:	8b b9       	out	0x0b, r24	; 11
 100:	88 e0       	ldi	r24, 0x08	; 8
 102:	08 95       	ret
 104:	8f ef       	ldi	r24, 0xFF	; 255
 106:	88 b9       	out	0x08, r24	; 8
 108:	1b b8       	out	0x0b, r1	; 11
 10a:	87 e0       	ldi	r24, 0x07	; 7
 10c:	08 95       	ret
 10e:	8e ef       	ldi	r24, 0xFE	; 254
 110:	88 b9       	out	0x08, r24	; 8
 112:	86 e0       	ldi	r24, 0x06	; 6
 114:	08 95       	ret
 116:	8c ef       	ldi	r24, 0xFC	; 252
 118:	88 b9       	out	0x08, r24	; 8
 11a:	85 e0       	ldi	r24, 0x05	; 5
 11c:	08 95       	ret
 11e:	88 ef       	ldi	r24, 0xF8	; 248
 120:	88 b9       	out	0x08, r24	; 8
 122:	84 e0       	ldi	r24, 0x04	; 4
 124:	08 95       	ret
 126:	80 ef       	ldi	r24, 0xF0	; 240
 128:	88 b9       	out	0x08, r24	; 8
 12a:	83 e0       	ldi	r24, 0x03	; 3
 12c:	08 95       	ret
 12e:	80 ee       	ldi	r24, 0xE0	; 224
 130:	88 b9       	out	0x08, r24	; 8
 132:	82 e0       	ldi	r24, 0x02	; 2
 134:	08 95       	ret
 136:	80 ec       	ldi	r24, 0xC0	; 192
 138:	88 b9       	out	0x08, r24	; 8
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	08 95       	ret
 13e:	80 e8       	ldi	r24, 0x80	; 128
 140:	88 b9       	out	0x08, r24	; 8
 142:	8a e0       	ldi	r24, 0x0A	; 10
 144:	08 95       	ret
 146:	8a e0       	ldi	r24, 0x0A	; 10
 148:	08 95       	ret

0000014a <ClockLightNum>:
 14a:	82 30       	cpi	r24, 0x02	; 2
 14c:	41 f0       	breq	.+16     	; 0x15e <ClockLightNum+0x14>
 14e:	83 30       	cpi	r24, 0x03	; 3
 150:	19 f0       	breq	.+6      	; 0x158 <ClockLightNum+0xe>
 152:	81 30       	cpi	r24, 0x01	; 1
 154:	51 f4       	brne	.+20     	; 0x16a <ClockLightNum+0x20>
 156:	06 c0       	rjmp	.+12     	; 0x164 <ClockLightNum+0x1a>
 158:	94 ea       	ldi	r25, 0xA4	; 164
 15a:	92 b9       	out	0x02, r25	; 2
 15c:	09 c0       	rjmp	.+18     	; 0x170 <ClockLightNum+0x26>
 15e:	90 eb       	ldi	r25, 0xB0	; 176
 160:	92 b9       	out	0x02, r25	; 2
 162:	06 c0       	rjmp	.+12     	; 0x170 <ClockLightNum+0x26>
 164:	9d ee       	ldi	r25, 0xED	; 237
 166:	92 b9       	out	0x02, r25	; 2
 168:	03 c0       	rjmp	.+6      	; 0x170 <ClockLightNum+0x26>
 16a:	9f e3       	ldi	r25, 0x3F	; 63
 16c:	92 b9       	out	0x02, r25	; 2
 16e:	81 11       	cpse	r24, r1
 170:	81 50       	subi	r24, 0x01	; 1
 172:	08 95       	ret

00000174 <TimerSet>:
 174:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 178:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 17c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 180:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 184:	60 93 3b 01 	sts	0x013B, r22	; 0x80013b <_avr_timer_cntcurr>
 188:	70 93 3c 01 	sts	0x013C, r23	; 0x80013c <_avr_timer_cntcurr+0x1>
 18c:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <_avr_timer_cntcurr+0x2>
 190:	90 93 3e 01 	sts	0x013E, r25	; 0x80013e <_avr_timer_cntcurr+0x3>
 194:	08 95       	ret

00000196 <TimerOn>:
 196:	8b e0       	ldi	r24, 0x0B	; 11
 198:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 19c:	8d e7       	ldi	r24, 0x7D	; 125
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1a4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 1a8:	82 e0       	ldi	r24, 0x02	; 2
 1aa:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 1ae:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 1b2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 1b6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1ba:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1be:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 1c2:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 1c6:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <_avr_timer_cntcurr>
 1ca:	90 93 3c 01 	sts	0x013C, r25	; 0x80013c <_avr_timer_cntcurr+0x1>
 1ce:	a0 93 3d 01 	sts	0x013D, r26	; 0x80013d <_avr_timer_cntcurr+0x2>
 1d2:	b0 93 3e 01 	sts	0x013E, r27	; 0x80013e <_avr_timer_cntcurr+0x3>
 1d6:	8f b7       	in	r24, 0x3f	; 63
 1d8:	80 68       	ori	r24, 0x80	; 128
 1da:	8f bf       	out	0x3f, r24	; 63
 1dc:	08 95       	ret

000001de <__vector_13>:
 1de:	1f 92       	push	r1
 1e0:	0f 92       	push	r0
 1e2:	0f b6       	in	r0, 0x3f	; 63
 1e4:	0f 92       	push	r0
 1e6:	11 24       	eor	r1, r1
 1e8:	8f 93       	push	r24
 1ea:	9f 93       	push	r25
 1ec:	af 93       	push	r26
 1ee:	bf 93       	push	r27
 1f0:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <_avr_timer_cntcurr>
 1f4:	90 91 3c 01 	lds	r25, 0x013C	; 0x80013c <_avr_timer_cntcurr+0x1>
 1f8:	a0 91 3d 01 	lds	r26, 0x013D	; 0x80013d <_avr_timer_cntcurr+0x2>
 1fc:	b0 91 3e 01 	lds	r27, 0x013E	; 0x80013e <_avr_timer_cntcurr+0x3>
 200:	01 97       	sbiw	r24, 0x01	; 1
 202:	a1 09       	sbc	r26, r1
 204:	b1 09       	sbc	r27, r1
 206:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <_avr_timer_cntcurr>
 20a:	90 93 3c 01 	sts	0x013C, r25	; 0x80013c <_avr_timer_cntcurr+0x1>
 20e:	a0 93 3d 01 	sts	0x013D, r26	; 0x80013d <_avr_timer_cntcurr+0x2>
 212:	b0 93 3e 01 	sts	0x013E, r27	; 0x80013e <_avr_timer_cntcurr+0x3>
 216:	89 2b       	or	r24, r25
 218:	8a 2b       	or	r24, r26
 21a:	8b 2b       	or	r24, r27
 21c:	99 f4       	brne	.+38     	; 0x244 <__vector_13+0x66>
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <TimerFlag>
 224:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 228:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 22c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 230:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 234:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <_avr_timer_cntcurr>
 238:	90 93 3c 01 	sts	0x013C, r25	; 0x80013c <_avr_timer_cntcurr+0x1>
 23c:	a0 93 3d 01 	sts	0x013D, r26	; 0x80013d <_avr_timer_cntcurr+0x2>
 240:	b0 93 3e 01 	sts	0x013E, r27	; 0x80013e <_avr_timer_cntcurr+0x3>
 244:	bf 91       	pop	r27
 246:	af 91       	pop	r26
 248:	9f 91       	pop	r25
 24a:	8f 91       	pop	r24
 24c:	0f 90       	pop	r0
 24e:	0f be       	out	0x3f, r0	; 63
 250:	0f 90       	pop	r0
 252:	1f 90       	pop	r1
 254:	18 95       	reti

00000256 <set_PWM>:
 256:	cf 92       	push	r12
 258:	df 92       	push	r13
 25a:	ef 92       	push	r14
 25c:	ff 92       	push	r15
 25e:	6b 01       	movw	r12, r22
 260:	7c 01       	movw	r14, r24
 262:	9b 01       	movw	r18, r22
 264:	ac 01       	movw	r20, r24
 266:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <current_frequency.1638>
 26a:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <current_frequency.1638+0x1>
 26e:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <current_frequency.1638+0x2>
 272:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <current_frequency.1638+0x3>
 276:	d7 d1       	rcall	.+942    	; 0x626 <__cmpsf2>
 278:	88 23       	and	r24, r24
 27a:	09 f4       	brne	.+2      	; 0x27e <set_PWM+0x28>
 27c:	40 c0       	rjmp	.+128    	; 0x2fe <set_PWM+0xa8>
 27e:	20 e0       	ldi	r18, 0x00	; 0
 280:	30 e0       	ldi	r19, 0x00	; 0
 282:	a9 01       	movw	r20, r18
 284:	c7 01       	movw	r24, r14
 286:	b6 01       	movw	r22, r12
 288:	ce d1       	rcall	.+924    	; 0x626 <__cmpsf2>
 28a:	81 11       	cpse	r24, r1
 28c:	04 c0       	rjmp	.+8      	; 0x296 <set_PWM+0x40>
 28e:	85 b5       	in	r24, 0x25	; 37
 290:	88 70       	andi	r24, 0x08	; 8
 292:	85 bd       	out	0x25, r24	; 37
 294:	03 c0       	rjmp	.+6      	; 0x29c <set_PWM+0x46>
 296:	85 b5       	in	r24, 0x25	; 37
 298:	83 60       	ori	r24, 0x03	; 3
 29a:	85 bd       	out	0x25, r24	; 37
 29c:	28 e5       	ldi	r18, 0x58	; 88
 29e:	39 e3       	ldi	r19, 0x39	; 57
 2a0:	44 e7       	ldi	r20, 0x74	; 116
 2a2:	5f e3       	ldi	r21, 0x3F	; 63
 2a4:	c7 01       	movw	r24, r14
 2a6:	b6 01       	movw	r22, r12
 2a8:	be d1       	rcall	.+892    	; 0x626 <__cmpsf2>
 2aa:	88 23       	and	r24, r24
 2ac:	1c f4       	brge	.+6      	; 0x2b4 <set_PWM+0x5e>
 2ae:	8f ef       	ldi	r24, 0xFF	; 255
 2b0:	87 bd       	out	0x27, r24	; 39
 2b2:	1c c0       	rjmp	.+56     	; 0x2ec <set_PWM+0x96>
 2b4:	20 e0       	ldi	r18, 0x00	; 0
 2b6:	34 e2       	ldi	r19, 0x24	; 36
 2b8:	44 ef       	ldi	r20, 0xF4	; 244
 2ba:	56 e4       	ldi	r21, 0x46	; 70
 2bc:	c7 01       	movw	r24, r14
 2be:	b6 01       	movw	r22, r12
 2c0:	c4 d2       	rcall	.+1416   	; 0x84a <__gesf2>
 2c2:	18 16       	cp	r1, r24
 2c4:	14 f4       	brge	.+4      	; 0x2ca <set_PWM+0x74>
 2c6:	17 bc       	out	0x27, r1	; 39
 2c8:	11 c0       	rjmp	.+34     	; 0x2ec <set_PWM+0x96>
 2ca:	20 e0       	ldi	r18, 0x00	; 0
 2cc:	30 e0       	ldi	r19, 0x00	; 0
 2ce:	40 e0       	ldi	r20, 0x00	; 0
 2d0:	53 e4       	ldi	r21, 0x43	; 67
 2d2:	c7 01       	movw	r24, r14
 2d4:	b6 01       	movw	r22, r12
 2d6:	bd d2       	rcall	.+1402   	; 0x852 <__mulsf3>
 2d8:	9b 01       	movw	r18, r22
 2da:	ac 01       	movw	r20, r24
 2dc:	60 e0       	ldi	r22, 0x00	; 0
 2de:	74 e2       	ldi	r23, 0x24	; 36
 2e0:	84 ef       	ldi	r24, 0xF4	; 244
 2e2:	9a e4       	ldi	r25, 0x4A	; 74
 2e4:	a4 d1       	rcall	.+840    	; 0x62e <__divsf3>
 2e6:	0b d2       	rcall	.+1046   	; 0x6fe <__fixsfsi>
 2e8:	61 50       	subi	r22, 0x01	; 1
 2ea:	67 bd       	out	0x27, r22	; 39
 2ec:	16 bc       	out	0x26, r1	; 38
 2ee:	c0 92 37 01 	sts	0x0137, r12	; 0x800137 <current_frequency.1638>
 2f2:	d0 92 38 01 	sts	0x0138, r13	; 0x800138 <current_frequency.1638+0x1>
 2f6:	e0 92 39 01 	sts	0x0139, r14	; 0x800139 <current_frequency.1638+0x2>
 2fa:	f0 92 3a 01 	sts	0x013A, r15	; 0x80013a <current_frequency.1638+0x3>
 2fe:	ff 90       	pop	r15
 300:	ef 90       	pop	r14
 302:	df 90       	pop	r13
 304:	cf 90       	pop	r12
 306:	08 95       	ret

00000308 <makeSound>:
 308:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <TimerFlag>
 30c:	81 11       	cpse	r24, r1
 30e:	09 c0       	rjmp	.+18     	; 0x322 <makeSound+0x1a>
 310:	60 e0       	ldi	r22, 0x00	; 0
 312:	70 e0       	ldi	r23, 0x00	; 0
 314:	8c e5       	ldi	r24, 0x5C	; 92
 316:	95 e4       	ldi	r25, 0x45	; 69
 318:	9e df       	rcall	.-196    	; 0x256 <set_PWM>
 31a:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <TimerFlag>
 31e:	88 23       	and	r24, r24
 320:	b9 f3       	breq	.-18     	; 0x310 <makeSound+0x8>
 322:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <TimerFlag>
 326:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <TimerFlag>
 32a:	81 11       	cpse	r24, r1
 32c:	09 c0       	rjmp	.+18     	; 0x340 <makeSound+0x38>
 32e:	60 e0       	ldi	r22, 0x00	; 0
 330:	70 e9       	ldi	r23, 0x90	; 144
 332:	8a e0       	ldi	r24, 0x0A	; 10
 334:	95 e4       	ldi	r25, 0x45	; 69
 336:	8f df       	rcall	.-226    	; 0x256 <set_PWM>
 338:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <TimerFlag>
 33c:	88 23       	and	r24, r24
 33e:	b9 f3       	breq	.-18     	; 0x32e <makeSound+0x26>
 340:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <TimerFlag>
 344:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <TimerFlag>
 348:	81 11       	cpse	r24, r1
 34a:	08 c0       	rjmp	.+16     	; 0x35c <makeSound+0x54>
 34c:	60 e0       	ldi	r22, 0x00	; 0
 34e:	70 e0       	ldi	r23, 0x00	; 0
 350:	cb 01       	movw	r24, r22
 352:	81 df       	rcall	.-254    	; 0x256 <set_PWM>
 354:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <TimerFlag>
 358:	88 23       	and	r24, r24
 35a:	c1 f3       	breq	.-16     	; 0x34c <makeSound+0x44>
 35c:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <TimerFlag>
 360:	81 e0       	ldi	r24, 0x01	; 1
 362:	08 95       	ret

00000364 <PWM_on>:
 364:	89 e4       	ldi	r24, 0x49	; 73
 366:	84 bd       	out	0x24, r24	; 36
 368:	8b e0       	ldi	r24, 0x0B	; 11
 36a:	85 bd       	out	0x25, r24	; 37
 36c:	60 e0       	ldi	r22, 0x00	; 0
 36e:	70 e0       	ldi	r23, 0x00	; 0
 370:	cb 01       	movw	r24, r22
 372:	71 cf       	rjmp	.-286    	; 0x256 <set_PWM>
 374:	08 95       	ret

00000376 <main>:
	}
	TimerFlag = 0;
	return 1;
}
int main(void)
{
 376:	2f 92       	push	r2
 378:	3f 92       	push	r3
 37a:	4f 92       	push	r4
 37c:	5f 92       	push	r5
 37e:	6f 92       	push	r6
 380:	7f 92       	push	r7
 382:	8f 92       	push	r8
 384:	9f 92       	push	r9
 386:	af 92       	push	r10
 388:	bf 92       	push	r11
 38a:	cf 92       	push	r12
 38c:	df 92       	push	r13
 38e:	ef 92       	push	r14
 390:	ff 92       	push	r15
 392:	0f 93       	push	r16
 394:	1f 93       	push	r17
 396:	cf 93       	push	r28
 398:	df 93       	push	r29
 39a:	00 d0       	rcall	.+0      	; 0x39c <main+0x26>
 39c:	00 d0       	rcall	.+0      	; 0x39e <main+0x28>
 39e:	00 d0       	rcall	.+0      	; 0x3a0 <main+0x2a>
 3a0:	cd b7       	in	r28, 0x3d	; 61
 3a2:	de b7       	in	r29, 0x3e	; 62
	static task taskSound;
	static task taskMin; 
	static task taskBar;
	task *tasks[] = {&taskMin, &taskBar, &taskSound};
 3a4:	86 e0       	ldi	r24, 0x06	; 6
 3a6:	e4 e0       	ldi	r30, 0x04	; 4
 3a8:	f1 e0       	ldi	r31, 0x01	; 1
 3aa:	de 01       	movw	r26, r28
 3ac:	11 96       	adiw	r26, 0x01	; 1
 3ae:	01 90       	ld	r0, Z+
 3b0:	0d 92       	st	X+, r0
 3b2:	8a 95       	dec	r24
 3b4:	e1 f7       	brne	.-8      	; 0x3ae <main+0x38>
	unsigned char listSize = 3;
    DDRA = 0xFF; PORTA = 0x00;
 3b6:	8f ef       	ldi	r24, 0xFF	; 255
 3b8:	81 b9       	out	0x01, r24	; 1
 3ba:	12 b8       	out	0x02, r1	; 2
	DDRB = 0xFD; PORTB = 0x02;
 3bc:	9d ef       	ldi	r25, 0xFD	; 253
 3be:	94 b9       	out	0x04, r25	; 4
 3c0:	92 e0       	ldi	r25, 0x02	; 2
 3c2:	95 b9       	out	0x05, r25	; 5
	DDRC = 0xFF; PORTC = 0x00;
 3c4:	87 b9       	out	0x07, r24	; 7
 3c6:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00;
 3c8:	8a b9       	out	0x0a, r24	; 10
 3ca:	1b b8       	out	0x0b, r1	; 11
	unsigned long count = 0;
	unsigned char stopSignal = PINB & 0x04;
 3cc:	13 b1       	in	r17, 0x03	; 3
 3ce:	14 70       	andi	r17, 0x04	; 4
	PWM_on();
 3d0:	c9 df       	rcall	.-110    	; 0x364 <PWM_on>
	TimerOn();
 3d2:	e1 de       	rcall	.-574    	; 0x196 <TimerOn>
 3d4:	68 ec       	ldi	r22, 0xC8	; 200
	TimerSet(200);
 3d6:	70 e0       	ldi	r23, 0x00	; 0
 3d8:	80 e0       	ldi	r24, 0x00	; 0
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	cb de       	rcall	.-618    	; 0x174 <TimerSet>
 3de:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <TimerFlag>
	while(!TimerFlag){}
 3e2:	88 23       	and	r24, r24
 3e4:	e1 f3       	breq	.-8      	; 0x3de <main+0x68>
 3e6:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <TimerFlag>
	TimerFlag = 0;
 3ea:	19 99       	sbic	0x03, 1	; 3
	while(1){
		unsigned char startButton = ~PINB & 0x02;
		if(startButton){
 3ec:	fe cf       	rjmp	.-4      	; 0x3ea <main+0x74>
 3ee:	e8 e2       	ldi	r30, 0x28	; 40
			break;
		}
	}
	//Set Up Tasks
		taskSound.state = 0;
 3f0:	f1 e0       	ldi	r31, 0x01	; 1
 3f2:	10 82       	st	Z, r1
 3f4:	8f e0       	ldi	r24, 0x0F	; 15
		taskSound.period = 15;
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	a0 e0       	ldi	r26, 0x00	; 0
 3fa:	b0 e0       	ldi	r27, 0x00	; 0
 3fc:	81 83       	std	Z+1, r24	; 0x01
 3fe:	92 83       	std	Z+2, r25	; 0x02
 400:	a3 83       	std	Z+3, r26	; 0x03
 402:	b4 83       	std	Z+4, r27	; 0x04
 404:	85 83       	std	Z+5, r24	; 0x05
		taskSound.elapsedTime = 15;
 406:	96 83       	std	Z+6, r25	; 0x06
 408:	a7 83       	std	Z+7, r26	; 0x07
 40a:	b0 87       	std	Z+8, r27	; 0x08
 40c:	84 e8       	ldi	r24, 0x84	; 132
		taskSound.TickFct = &makeSound;
 40e:	91 e0       	ldi	r25, 0x01	; 1
 410:	92 87       	std	Z+10, r25	; 0x0a
 412:	81 87       	std	Z+9, r24	; 0x09
 414:	13 86       	std	Z+11, r1	; 0x0b
		taskSound.times = 0;
 416:	14 86       	std	Z+12, r1	; 0x0c
 418:	15 86       	std	Z+13, r1	; 0x0d
 41a:	16 86       	std	Z+14, r1	; 0x0e
 41c:	e9 e1       	ldi	r30, 0x19	; 25
		
		taskMin.state = 3;
 41e:	f1 e0       	ldi	r31, 0x01	; 1
 420:	83 e0       	ldi	r24, 0x03	; 3
 422:	80 83       	st	Z, r24
 424:	8c e2       	ldi	r24, 0x2C	; 44
		taskMin.period = 300;
 426:	91 e0       	ldi	r25, 0x01	; 1
 428:	a0 e0       	ldi	r26, 0x00	; 0
 42a:	b0 e0       	ldi	r27, 0x00	; 0
 42c:	81 83       	std	Z+1, r24	; 0x01
 42e:	92 83       	std	Z+2, r25	; 0x02
 430:	a3 83       	std	Z+3, r26	; 0x03
 432:	b4 83       	std	Z+4, r27	; 0x04
 434:	85 83       	std	Z+5, r24	; 0x05
		taskMin.elapsedTime = 300;
 436:	96 83       	std	Z+6, r25	; 0x06
 438:	a7 83       	std	Z+7, r26	; 0x07
 43a:	b0 87       	std	Z+8, r27	; 0x08
 43c:	85 ea       	ldi	r24, 0xA5	; 165
		taskMin.TickFct = &ClockLightNum;
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	92 87       	std	Z+10, r25	; 0x0a
 442:	81 87       	std	Z+9, r24	; 0x09
 444:	13 86       	std	Z+11, r1	; 0x0b
		taskMin.times = 0;
 446:	14 86       	std	Z+12, r1	; 0x0c
 448:	15 86       	std	Z+13, r1	; 0x0d
 44a:	16 86       	std	Z+14, r1	; 0x0e
 44c:	ea e0       	ldi	r30, 0x0A	; 10
	
		taskBar.state = 10;
 44e:	f1 e0       	ldi	r31, 0x01	; 1
 450:	8a e0       	ldi	r24, 0x0A	; 10
 452:	80 83       	st	Z, r24
 454:	8e e1       	ldi	r24, 0x1E	; 30
		taskBar.period = 30;
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	a0 e0       	ldi	r26, 0x00	; 0
 45a:	b0 e0       	ldi	r27, 0x00	; 0
 45c:	81 83       	std	Z+1, r24	; 0x01
 45e:	92 83       	std	Z+2, r25	; 0x02
 460:	a3 83       	std	Z+3, r26	; 0x03
 462:	b4 83       	std	Z+4, r27	; 0x04
 464:	85 83       	std	Z+5, r24	; 0x05
		taskBar.elapsedTime = 30;
 466:	96 83       	std	Z+6, r25	; 0x06
 468:	a7 83       	std	Z+7, r26	; 0x07
 46a:	b0 87       	std	Z+8, r27	; 0x08
 46c:	8e e6       	ldi	r24, 0x6E	; 110
		taskBar.TickFct = &ClockLightBar;
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	92 87       	std	Z+10, r25	; 0x0a
 472:	81 87       	std	Z+9, r24	; 0x09
 474:	13 86       	std	Z+11, r1	; 0x0b
		taskBar.times = 0;
 476:	14 86       	std	Z+12, r1	; 0x0c
 478:	15 86       	std	Z+13, r1	; 0x0d
 47a:	16 86       	std	Z+14, r1	; 0x0e
 47c:	11 11       	cpse	r17, r1
		
    while(!stopSignal) 
 47e:	b8 c0       	rjmp	.+368    	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 480:	41 2c       	mov	r4, r1
 482:	51 2c       	mov	r5, r1
 484:	32 01       	movw	r6, r4
 486:	0f 2e       	mov	r0, r31
		if(count == 520){
			taskSound.period = 5;
			taskSound.elapsedTime = 5;
		}
		if(count == 630){
			taskSound.period = 1;
 488:	f8 e2       	ldi	r31, 0x28	; 40
 48a:	8f 2e       	mov	r8, r31
 48c:	f1 e0       	ldi	r31, 0x01	; 1
 48e:	9f 2e       	mov	r9, r31
 490:	f0 2d       	mov	r31, r0
 492:	5e 01       	movw	r10, r28
 494:	23 e0       	ldi	r18, 0x03	; 3
 496:	a2 0e       	add	r10, r18
 498:	b1 1c       	adc	r11, r1
 49a:	1f 01       	movw	r2, r30
			tasks[i]->elapsedTime += 1;
		}
		while(!TimerFlag){	}
		TimerFlag = 0;		
		++count;
		if(taskBar.times == 31){
 49c:	88 e0       	ldi	r24, 0x08	; 8
		taskBar.TickFct = &ClockLightBar;
		taskBar.times = 0;
		
    while(!stopSignal) 
    {
		if(count == 520){
 49e:	48 16       	cp	r4, r24
 4a0:	82 e0       	ldi	r24, 0x02	; 2
 4a2:	58 06       	cpc	r5, r24
 4a4:	61 04       	cpc	r6, r1
 4a6:	71 04       	cpc	r7, r1
 4a8:	71 f4       	brne	.+28     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4aa:	85 e0       	ldi	r24, 0x05	; 5
			taskSound.period = 5;
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	a0 e0       	ldi	r26, 0x00	; 0
 4b0:	b0 e0       	ldi	r27, 0x00	; 0
 4b2:	f4 01       	movw	r30, r8
 4b4:	81 83       	std	Z+1, r24	; 0x01
 4b6:	92 83       	std	Z+2, r25	; 0x02
 4b8:	a3 83       	std	Z+3, r26	; 0x03
 4ba:	b4 83       	std	Z+4, r27	; 0x04
 4bc:	85 83       	std	Z+5, r24	; 0x05
			taskSound.elapsedTime = 5;
 4be:	96 83       	std	Z+6, r25	; 0x06
 4c0:	a7 83       	std	Z+7, r26	; 0x07
 4c2:	b0 87       	std	Z+8, r27	; 0x08
 4c4:	14 c0       	rjmp	.+40     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4c6:	f6 e7       	ldi	r31, 0x76	; 118
		}
		if(count == 630){
 4c8:	4f 16       	cp	r4, r31
 4ca:	f2 e0       	ldi	r31, 0x02	; 2
 4cc:	5f 06       	cpc	r5, r31
 4ce:	61 04       	cpc	r6, r1
 4d0:	71 04       	cpc	r7, r1
 4d2:	69 f4       	brne	.+26     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4d4:	81 e0       	ldi	r24, 0x01	; 1
			taskSound.period = 1;
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	a0 e0       	ldi	r26, 0x00	; 0
 4da:	b0 e0       	ldi	r27, 0x00	; 0
 4dc:	f4 01       	movw	r30, r8
 4de:	81 83       	std	Z+1, r24	; 0x01
 4e0:	92 83       	std	Z+2, r25	; 0x02
 4e2:	a3 83       	std	Z+3, r26	; 0x03
 4e4:	b4 83       	std	Z+4, r27	; 0x04
 4e6:	85 83       	std	Z+5, r24	; 0x05
			taskSound.elapsedTime = 1;
 4e8:	96 83       	std	Z+6, r25	; 0x06
 4ea:	a7 83       	std	Z+7, r26	; 0x07
 4ec:	b0 87       	std	Z+8, r27	; 0x08
 4ee:	7e 01       	movw	r14, r28
 4f0:	f3 e0       	ldi	r31, 0x03	; 3
 4f2:	ef 1a       	sub	r14, r31
 4f4:	f1 08       	sbc	r15, r1
 4f6:	d7 01       	movw	r26, r14
		}
		for(unsigned char i = 0; i < listSize; ++i){
			if(tasks[i]->elapsedTime >= tasks[i]->period){
 4f8:	14 96       	adiw	r26, 0x04	; 4
 4fa:	0d 91       	ld	r16, X+
 4fc:	1c 91       	ld	r17, X
 4fe:	15 97       	sbiw	r26, 0x05	; 5
 500:	f8 01       	movw	r30, r16
 502:	45 81       	ldd	r20, Z+5	; 0x05
 504:	56 81       	ldd	r21, Z+6	; 0x06
 506:	67 81       	ldd	r22, Z+7	; 0x07
 508:	70 85       	ldd	r23, Z+8	; 0x08
 50a:	81 81       	ldd	r24, Z+1	; 0x01
 50c:	92 81       	ldd	r25, Z+2	; 0x02
 50e:	a3 81       	ldd	r26, Z+3	; 0x03
 510:	b4 81       	ldd	r27, Z+4	; 0x04
 512:	48 17       	cp	r20, r24
 514:	59 07       	cpc	r21, r25
 516:	6a 07       	cpc	r22, r26
 518:	7b 07       	cpc	r23, r27
 51a:	e0 f1       	brcs	.+120    	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 51c:	80 81       	ld	r24, Z
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 51e:	01 84       	ldd	r0, Z+9	; 0x09
 520:	f2 85       	ldd	r31, Z+10	; 0x0a
 522:	e0 2d       	mov	r30, r0
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	09 95       	icall
 528:	d8 01       	movw	r26, r16
 52a:	8c 93       	st	X, r24
 52c:	f8 01       	movw	r30, r16
				tasks[i]->elapsedTime = 0;
 52e:	15 82       	std	Z+5, r1	; 0x05
 530:	16 82       	std	Z+6, r1	; 0x06
 532:	17 82       	std	Z+7, r1	; 0x07
 534:	10 86       	std	Z+8, r1	; 0x08
 536:	81 85       	ldd	r24, Z+9	; 0x09
				if(tasks[i]->TickFct == &makeSound){
 538:	92 85       	ldd	r25, Z+10	; 0x0a
 53a:	84 58       	subi	r24, 0x84	; 132
 53c:	91 40       	sbci	r25, 0x01	; 1
 53e:	f1 f4       	brne	.+60     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 540:	d7 01       	movw	r26, r14
					tasks[i-1]->elapsedTime += 3;
 542:	12 96       	adiw	r26, 0x02	; 2
 544:	ed 91       	ld	r30, X+
 546:	fc 91       	ld	r31, X
 548:	13 97       	sbiw	r26, 0x03	; 3
 54a:	85 81       	ldd	r24, Z+5	; 0x05
 54c:	96 81       	ldd	r25, Z+6	; 0x06
 54e:	a7 81       	ldd	r26, Z+7	; 0x07
 550:	b0 85       	ldd	r27, Z+8	; 0x08
 552:	03 96       	adiw	r24, 0x03	; 3
 554:	a1 1d       	adc	r26, r1
 556:	b1 1d       	adc	r27, r1
 558:	85 83       	std	Z+5, r24	; 0x05
 55a:	96 83       	std	Z+6, r25	; 0x06
 55c:	a7 83       	std	Z+7, r26	; 0x07
 55e:	b0 87       	std	Z+8, r27	; 0x08
 560:	d7 01       	movw	r26, r14
					tasks[i-2]->elapsedTime += 3;
 562:	ed 91       	ld	r30, X+
 564:	fc 91       	ld	r31, X
 566:	85 81       	ldd	r24, Z+5	; 0x05
 568:	96 81       	ldd	r25, Z+6	; 0x06
 56a:	a7 81       	ldd	r26, Z+7	; 0x07
 56c:	b0 85       	ldd	r27, Z+8	; 0x08
 56e:	03 96       	adiw	r24, 0x03	; 3
 570:	a1 1d       	adc	r26, r1
 572:	b1 1d       	adc	r27, r1
 574:	85 83       	std	Z+5, r24	; 0x05
 576:	96 83       	std	Z+6, r25	; 0x06
 578:	a7 83       	std	Z+7, r26	; 0x07
 57a:	b0 87       	std	Z+8, r27	; 0x08
 57c:	f8 01       	movw	r30, r16
				} 
				tasks[i]->times += 1;
 57e:	83 85       	ldd	r24, Z+11	; 0x0b
 580:	94 85       	ldd	r25, Z+12	; 0x0c
 582:	a5 85       	ldd	r26, Z+13	; 0x0d
 584:	b6 85       	ldd	r27, Z+14	; 0x0e
 586:	01 96       	adiw	r24, 0x01	; 1
 588:	a1 1d       	adc	r26, r1
 58a:	b1 1d       	adc	r27, r1
 58c:	83 87       	std	Z+11, r24	; 0x0b
 58e:	94 87       	std	Z+12, r25	; 0x0c
 590:	a5 87       	std	Z+13, r26	; 0x0d
 592:	b6 87       	std	Z+14, r27	; 0x0e
 594:	f8 01       	movw	r30, r16
			}
			tasks[i]->elapsedTime += 1;
 596:	85 81       	ldd	r24, Z+5	; 0x05
 598:	96 81       	ldd	r25, Z+6	; 0x06
 59a:	a7 81       	ldd	r26, Z+7	; 0x07
 59c:	b0 85       	ldd	r27, Z+8	; 0x08
 59e:	01 96       	adiw	r24, 0x01	; 1
 5a0:	a1 1d       	adc	r26, r1
 5a2:	b1 1d       	adc	r27, r1
 5a4:	85 83       	std	Z+5, r24	; 0x05
 5a6:	96 83       	std	Z+6, r25	; 0x06
 5a8:	a7 83       	std	Z+7, r26	; 0x07
 5aa:	b0 87       	std	Z+8, r27	; 0x08
 5ac:	f2 e0       	ldi	r31, 0x02	; 2
 5ae:	ef 0e       	add	r14, r31
 5b0:	f1 1c       	adc	r15, r1
 5b2:	ea 14       	cp	r14, r10
		}
		if(count == 630){
			taskSound.period = 1;
			taskSound.elapsedTime = 1;
		}
		for(unsigned char i = 0; i < listSize; ++i){
 5b4:	fb 04       	cpc	r15, r11
 5b6:	09 f0       	breq	.+2      	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5b8:	9e cf       	rjmp	.-196    	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 5ba:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <TimerFlag>
				} 
				tasks[i]->times += 1;
			}
			tasks[i]->elapsedTime += 1;
		}
		while(!TimerFlag){	}
 5be:	88 23       	and	r24, r24
 5c0:	e1 f3       	breq	.-8      	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5c2:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <TimerFlag>
		TimerFlag = 0;		
 5c6:	2f ef       	ldi	r18, 0xFF	; 255
		++count;
 5c8:	42 1a       	sub	r4, r18
 5ca:	52 0a       	sbc	r5, r18
 5cc:	62 0a       	sbc	r6, r18
 5ce:	72 0a       	sbc	r7, r18
 5d0:	f1 01       	movw	r30, r2
		if(taskBar.times == 31){
 5d2:	83 85       	ldd	r24, Z+11	; 0x0b
 5d4:	94 85       	ldd	r25, Z+12	; 0x0c
 5d6:	a5 85       	ldd	r26, Z+13	; 0x0d
 5d8:	b6 85       	ldd	r27, Z+14	; 0x0e
 5da:	4f 97       	sbiw	r24, 0x1f	; 31
 5dc:	a1 05       	cpc	r26, r1
 5de:	b1 05       	cpc	r27, r1
 5e0:	29 f4       	brne	.+10     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5e2:	83 e0       	ldi	r24, 0x03	; 3
			PORTB = SetBit(2,0,1);
 5e4:	85 b9       	out	0x05, r24	; 5
 5e6:	18 b8       	out	0x08, r1	; 8
			PORTC = 0x00;
 5e8:	1b b8       	out	0x0b, r1	; 11
			PORTD = 0x00;
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
			break;
 5ec:	1a 9b       	sbis	0x03, 2	; 3
		taskBar.period = 30;
		taskBar.elapsedTime = 30;
		taskBar.TickFct = &ClockLightBar;
		taskBar.times = 0;
		
    while(!stopSignal) 
 5ee:	56 cf       	rjmp	.-340    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 5f0:	80 e0       	ldi	r24, 0x00	; 0
			PORTD = 0x00;
			break;
		}
		stopSignal = PINB & 0x04;
    }
}
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	26 96       	adiw	r28, 0x06	; 6
 5f6:	0f b6       	in	r0, 0x3f	; 63
 5f8:	f8 94       	cli
 5fa:	de bf       	out	0x3e, r29	; 62
 5fc:	0f be       	out	0x3f, r0	; 63
 5fe:	cd bf       	out	0x3d, r28	; 61
 600:	df 91       	pop	r29
 602:	cf 91       	pop	r28
 604:	1f 91       	pop	r17
 606:	0f 91       	pop	r16
 608:	ff 90       	pop	r15
 60a:	ef 90       	pop	r14
 60c:	df 90       	pop	r13
 60e:	cf 90       	pop	r12
 610:	bf 90       	pop	r11
 612:	af 90       	pop	r10
 614:	9f 90       	pop	r9
 616:	8f 90       	pop	r8
 618:	7f 90       	pop	r7
 61a:	6f 90       	pop	r6
 61c:	5f 90       	pop	r5
 61e:	4f 90       	pop	r4
 620:	3f 90       	pop	r3
 622:	2f 90       	pop	r2
 624:	08 95       	ret

00000626 <__cmpsf2>:
 626:	9c d0       	rcall	.+312    	; 0x760 <__fp_cmp>
 628:	08 f4       	brcc	.+2      	; 0x62c <__cmpsf2+0x6>
 62a:	81 e0       	ldi	r24, 0x01	; 1
 62c:	08 95       	ret

0000062e <__divsf3>:
 62e:	0c d0       	rcall	.+24     	; 0x648 <__divsf3x>
 630:	d2 c0       	rjmp	.+420    	; 0x7d6 <__fp_round>
 632:	ca d0       	rcall	.+404    	; 0x7c8 <__fp_pscB>
 634:	40 f0       	brcs	.+16     	; 0x646 <__divsf3+0x18>
 636:	c1 d0       	rcall	.+386    	; 0x7ba <__fp_pscA>
 638:	30 f0       	brcs	.+12     	; 0x646 <__divsf3+0x18>
 63a:	21 f4       	brne	.+8      	; 0x644 <__divsf3+0x16>
 63c:	5f 3f       	cpi	r21, 0xFF	; 255
 63e:	19 f0       	breq	.+6      	; 0x646 <__divsf3+0x18>
 640:	b3 c0       	rjmp	.+358    	; 0x7a8 <__fp_inf>
 642:	51 11       	cpse	r21, r1
 644:	fc c0       	rjmp	.+504    	; 0x83e <__fp_szero>
 646:	b6 c0       	rjmp	.+364    	; 0x7b4 <__fp_nan>

00000648 <__divsf3x>:
 648:	d7 d0       	rcall	.+430    	; 0x7f8 <__fp_split3>
 64a:	98 f3       	brcs	.-26     	; 0x632 <__divsf3+0x4>

0000064c <__divsf3_pse>:
 64c:	99 23       	and	r25, r25
 64e:	c9 f3       	breq	.-14     	; 0x642 <__divsf3+0x14>
 650:	55 23       	and	r21, r21
 652:	b1 f3       	breq	.-20     	; 0x640 <__divsf3+0x12>
 654:	95 1b       	sub	r25, r21
 656:	55 0b       	sbc	r21, r21
 658:	bb 27       	eor	r27, r27
 65a:	aa 27       	eor	r26, r26
 65c:	62 17       	cp	r22, r18
 65e:	73 07       	cpc	r23, r19
 660:	84 07       	cpc	r24, r20
 662:	38 f0       	brcs	.+14     	; 0x672 <__divsf3_pse+0x26>
 664:	9f 5f       	subi	r25, 0xFF	; 255
 666:	5f 4f       	sbci	r21, 0xFF	; 255
 668:	22 0f       	add	r18, r18
 66a:	33 1f       	adc	r19, r19
 66c:	44 1f       	adc	r20, r20
 66e:	aa 1f       	adc	r26, r26
 670:	a9 f3       	breq	.-22     	; 0x65c <__divsf3_pse+0x10>
 672:	33 d0       	rcall	.+102    	; 0x6da <__divsf3_pse+0x8e>
 674:	0e 2e       	mov	r0, r30
 676:	3a f0       	brmi	.+14     	; 0x686 <__divsf3_pse+0x3a>
 678:	e0 e8       	ldi	r30, 0x80	; 128
 67a:	30 d0       	rcall	.+96     	; 0x6dc <__divsf3_pse+0x90>
 67c:	91 50       	subi	r25, 0x01	; 1
 67e:	50 40       	sbci	r21, 0x00	; 0
 680:	e6 95       	lsr	r30
 682:	00 1c       	adc	r0, r0
 684:	ca f7       	brpl	.-14     	; 0x678 <__divsf3_pse+0x2c>
 686:	29 d0       	rcall	.+82     	; 0x6da <__divsf3_pse+0x8e>
 688:	fe 2f       	mov	r31, r30
 68a:	27 d0       	rcall	.+78     	; 0x6da <__divsf3_pse+0x8e>
 68c:	66 0f       	add	r22, r22
 68e:	77 1f       	adc	r23, r23
 690:	88 1f       	adc	r24, r24
 692:	bb 1f       	adc	r27, r27
 694:	26 17       	cp	r18, r22
 696:	37 07       	cpc	r19, r23
 698:	48 07       	cpc	r20, r24
 69a:	ab 07       	cpc	r26, r27
 69c:	b0 e8       	ldi	r27, 0x80	; 128
 69e:	09 f0       	breq	.+2      	; 0x6a2 <__divsf3_pse+0x56>
 6a0:	bb 0b       	sbc	r27, r27
 6a2:	80 2d       	mov	r24, r0
 6a4:	bf 01       	movw	r22, r30
 6a6:	ff 27       	eor	r31, r31
 6a8:	93 58       	subi	r25, 0x83	; 131
 6aa:	5f 4f       	sbci	r21, 0xFF	; 255
 6ac:	2a f0       	brmi	.+10     	; 0x6b8 <__divsf3_pse+0x6c>
 6ae:	9e 3f       	cpi	r25, 0xFE	; 254
 6b0:	51 05       	cpc	r21, r1
 6b2:	68 f0       	brcs	.+26     	; 0x6ce <__divsf3_pse+0x82>
 6b4:	79 c0       	rjmp	.+242    	; 0x7a8 <__fp_inf>
 6b6:	c3 c0       	rjmp	.+390    	; 0x83e <__fp_szero>
 6b8:	5f 3f       	cpi	r21, 0xFF	; 255
 6ba:	ec f3       	brlt	.-6      	; 0x6b6 <__divsf3_pse+0x6a>
 6bc:	98 3e       	cpi	r25, 0xE8	; 232
 6be:	dc f3       	brlt	.-10     	; 0x6b6 <__divsf3_pse+0x6a>
 6c0:	86 95       	lsr	r24
 6c2:	77 95       	ror	r23
 6c4:	67 95       	ror	r22
 6c6:	b7 95       	ror	r27
 6c8:	f7 95       	ror	r31
 6ca:	9f 5f       	subi	r25, 0xFF	; 255
 6cc:	c9 f7       	brne	.-14     	; 0x6c0 <__divsf3_pse+0x74>
 6ce:	88 0f       	add	r24, r24
 6d0:	91 1d       	adc	r25, r1
 6d2:	96 95       	lsr	r25
 6d4:	87 95       	ror	r24
 6d6:	97 f9       	bld	r25, 7
 6d8:	08 95       	ret
 6da:	e1 e0       	ldi	r30, 0x01	; 1
 6dc:	66 0f       	add	r22, r22
 6de:	77 1f       	adc	r23, r23
 6e0:	88 1f       	adc	r24, r24
 6e2:	bb 1f       	adc	r27, r27
 6e4:	62 17       	cp	r22, r18
 6e6:	73 07       	cpc	r23, r19
 6e8:	84 07       	cpc	r24, r20
 6ea:	ba 07       	cpc	r27, r26
 6ec:	20 f0       	brcs	.+8      	; 0x6f6 <__divsf3_pse+0xaa>
 6ee:	62 1b       	sub	r22, r18
 6f0:	73 0b       	sbc	r23, r19
 6f2:	84 0b       	sbc	r24, r20
 6f4:	ba 0b       	sbc	r27, r26
 6f6:	ee 1f       	adc	r30, r30
 6f8:	88 f7       	brcc	.-30     	; 0x6dc <__divsf3_pse+0x90>
 6fa:	e0 95       	com	r30
 6fc:	08 95       	ret

000006fe <__fixsfsi>:
 6fe:	04 d0       	rcall	.+8      	; 0x708 <__fixunssfsi>
 700:	68 94       	set
 702:	b1 11       	cpse	r27, r1
 704:	9c c0       	rjmp	.+312    	; 0x83e <__fp_szero>
 706:	08 95       	ret

00000708 <__fixunssfsi>:
 708:	7f d0       	rcall	.+254    	; 0x808 <__fp_splitA>
 70a:	88 f0       	brcs	.+34     	; 0x72e <__fixunssfsi+0x26>
 70c:	9f 57       	subi	r25, 0x7F	; 127
 70e:	90 f0       	brcs	.+36     	; 0x734 <__fixunssfsi+0x2c>
 710:	b9 2f       	mov	r27, r25
 712:	99 27       	eor	r25, r25
 714:	b7 51       	subi	r27, 0x17	; 23
 716:	a0 f0       	brcs	.+40     	; 0x740 <__fixunssfsi+0x38>
 718:	d1 f0       	breq	.+52     	; 0x74e <__fixunssfsi+0x46>
 71a:	66 0f       	add	r22, r22
 71c:	77 1f       	adc	r23, r23
 71e:	88 1f       	adc	r24, r24
 720:	99 1f       	adc	r25, r25
 722:	1a f0       	brmi	.+6      	; 0x72a <__fixunssfsi+0x22>
 724:	ba 95       	dec	r27
 726:	c9 f7       	brne	.-14     	; 0x71a <__fixunssfsi+0x12>
 728:	12 c0       	rjmp	.+36     	; 0x74e <__fixunssfsi+0x46>
 72a:	b1 30       	cpi	r27, 0x01	; 1
 72c:	81 f0       	breq	.+32     	; 0x74e <__fixunssfsi+0x46>
 72e:	86 d0       	rcall	.+268    	; 0x83c <__fp_zero>
 730:	b1 e0       	ldi	r27, 0x01	; 1
 732:	08 95       	ret
 734:	83 c0       	rjmp	.+262    	; 0x83c <__fp_zero>
 736:	67 2f       	mov	r22, r23
 738:	78 2f       	mov	r23, r24
 73a:	88 27       	eor	r24, r24
 73c:	b8 5f       	subi	r27, 0xF8	; 248
 73e:	39 f0       	breq	.+14     	; 0x74e <__fixunssfsi+0x46>
 740:	b9 3f       	cpi	r27, 0xF9	; 249
 742:	cc f3       	brlt	.-14     	; 0x736 <__fixunssfsi+0x2e>
 744:	86 95       	lsr	r24
 746:	77 95       	ror	r23
 748:	67 95       	ror	r22
 74a:	b3 95       	inc	r27
 74c:	d9 f7       	brne	.-10     	; 0x744 <__fixunssfsi+0x3c>
 74e:	3e f4       	brtc	.+14     	; 0x75e <__fixunssfsi+0x56>
 750:	90 95       	com	r25
 752:	80 95       	com	r24
 754:	70 95       	com	r23
 756:	61 95       	neg	r22
 758:	7f 4f       	sbci	r23, 0xFF	; 255
 75a:	8f 4f       	sbci	r24, 0xFF	; 255
 75c:	9f 4f       	sbci	r25, 0xFF	; 255
 75e:	08 95       	ret

00000760 <__fp_cmp>:
 760:	99 0f       	add	r25, r25
 762:	00 08       	sbc	r0, r0
 764:	55 0f       	add	r21, r21
 766:	aa 0b       	sbc	r26, r26
 768:	e0 e8       	ldi	r30, 0x80	; 128
 76a:	fe ef       	ldi	r31, 0xFE	; 254
 76c:	16 16       	cp	r1, r22
 76e:	17 06       	cpc	r1, r23
 770:	e8 07       	cpc	r30, r24
 772:	f9 07       	cpc	r31, r25
 774:	c0 f0       	brcs	.+48     	; 0x7a6 <__fp_cmp+0x46>
 776:	12 16       	cp	r1, r18
 778:	13 06       	cpc	r1, r19
 77a:	e4 07       	cpc	r30, r20
 77c:	f5 07       	cpc	r31, r21
 77e:	98 f0       	brcs	.+38     	; 0x7a6 <__fp_cmp+0x46>
 780:	62 1b       	sub	r22, r18
 782:	73 0b       	sbc	r23, r19
 784:	84 0b       	sbc	r24, r20
 786:	95 0b       	sbc	r25, r21
 788:	39 f4       	brne	.+14     	; 0x798 <__fp_cmp+0x38>
 78a:	0a 26       	eor	r0, r26
 78c:	61 f0       	breq	.+24     	; 0x7a6 <__fp_cmp+0x46>
 78e:	23 2b       	or	r18, r19
 790:	24 2b       	or	r18, r20
 792:	25 2b       	or	r18, r21
 794:	21 f4       	brne	.+8      	; 0x79e <__fp_cmp+0x3e>
 796:	08 95       	ret
 798:	0a 26       	eor	r0, r26
 79a:	09 f4       	brne	.+2      	; 0x79e <__fp_cmp+0x3e>
 79c:	a1 40       	sbci	r26, 0x01	; 1
 79e:	a6 95       	lsr	r26
 7a0:	8f ef       	ldi	r24, 0xFF	; 255
 7a2:	81 1d       	adc	r24, r1
 7a4:	81 1d       	adc	r24, r1
 7a6:	08 95       	ret

000007a8 <__fp_inf>:
 7a8:	97 f9       	bld	r25, 7
 7aa:	9f 67       	ori	r25, 0x7F	; 127
 7ac:	80 e8       	ldi	r24, 0x80	; 128
 7ae:	70 e0       	ldi	r23, 0x00	; 0
 7b0:	60 e0       	ldi	r22, 0x00	; 0
 7b2:	08 95       	ret

000007b4 <__fp_nan>:
 7b4:	9f ef       	ldi	r25, 0xFF	; 255
 7b6:	80 ec       	ldi	r24, 0xC0	; 192
 7b8:	08 95       	ret

000007ba <__fp_pscA>:
 7ba:	00 24       	eor	r0, r0
 7bc:	0a 94       	dec	r0
 7be:	16 16       	cp	r1, r22
 7c0:	17 06       	cpc	r1, r23
 7c2:	18 06       	cpc	r1, r24
 7c4:	09 06       	cpc	r0, r25
 7c6:	08 95       	ret

000007c8 <__fp_pscB>:
 7c8:	00 24       	eor	r0, r0
 7ca:	0a 94       	dec	r0
 7cc:	12 16       	cp	r1, r18
 7ce:	13 06       	cpc	r1, r19
 7d0:	14 06       	cpc	r1, r20
 7d2:	05 06       	cpc	r0, r21
 7d4:	08 95       	ret

000007d6 <__fp_round>:
 7d6:	09 2e       	mov	r0, r25
 7d8:	03 94       	inc	r0
 7da:	00 0c       	add	r0, r0
 7dc:	11 f4       	brne	.+4      	; 0x7e2 <__fp_round+0xc>
 7de:	88 23       	and	r24, r24
 7e0:	52 f0       	brmi	.+20     	; 0x7f6 <__fp_round+0x20>
 7e2:	bb 0f       	add	r27, r27
 7e4:	40 f4       	brcc	.+16     	; 0x7f6 <__fp_round+0x20>
 7e6:	bf 2b       	or	r27, r31
 7e8:	11 f4       	brne	.+4      	; 0x7ee <__fp_round+0x18>
 7ea:	60 ff       	sbrs	r22, 0
 7ec:	04 c0       	rjmp	.+8      	; 0x7f6 <__fp_round+0x20>
 7ee:	6f 5f       	subi	r22, 0xFF	; 255
 7f0:	7f 4f       	sbci	r23, 0xFF	; 255
 7f2:	8f 4f       	sbci	r24, 0xFF	; 255
 7f4:	9f 4f       	sbci	r25, 0xFF	; 255
 7f6:	08 95       	ret

000007f8 <__fp_split3>:
 7f8:	57 fd       	sbrc	r21, 7
 7fa:	90 58       	subi	r25, 0x80	; 128
 7fc:	44 0f       	add	r20, r20
 7fe:	55 1f       	adc	r21, r21
 800:	59 f0       	breq	.+22     	; 0x818 <__fp_splitA+0x10>
 802:	5f 3f       	cpi	r21, 0xFF	; 255
 804:	71 f0       	breq	.+28     	; 0x822 <__fp_splitA+0x1a>
 806:	47 95       	ror	r20

00000808 <__fp_splitA>:
 808:	88 0f       	add	r24, r24
 80a:	97 fb       	bst	r25, 7
 80c:	99 1f       	adc	r25, r25
 80e:	61 f0       	breq	.+24     	; 0x828 <__fp_splitA+0x20>
 810:	9f 3f       	cpi	r25, 0xFF	; 255
 812:	79 f0       	breq	.+30     	; 0x832 <__fp_splitA+0x2a>
 814:	87 95       	ror	r24
 816:	08 95       	ret
 818:	12 16       	cp	r1, r18
 81a:	13 06       	cpc	r1, r19
 81c:	14 06       	cpc	r1, r20
 81e:	55 1f       	adc	r21, r21
 820:	f2 cf       	rjmp	.-28     	; 0x806 <__fp_split3+0xe>
 822:	46 95       	lsr	r20
 824:	f1 df       	rcall	.-30     	; 0x808 <__fp_splitA>
 826:	08 c0       	rjmp	.+16     	; 0x838 <__fp_splitA+0x30>
 828:	16 16       	cp	r1, r22
 82a:	17 06       	cpc	r1, r23
 82c:	18 06       	cpc	r1, r24
 82e:	99 1f       	adc	r25, r25
 830:	f1 cf       	rjmp	.-30     	; 0x814 <__fp_splitA+0xc>
 832:	86 95       	lsr	r24
 834:	71 05       	cpc	r23, r1
 836:	61 05       	cpc	r22, r1
 838:	08 94       	sec
 83a:	08 95       	ret

0000083c <__fp_zero>:
 83c:	e8 94       	clt

0000083e <__fp_szero>:
 83e:	bb 27       	eor	r27, r27
 840:	66 27       	eor	r22, r22
 842:	77 27       	eor	r23, r23
 844:	cb 01       	movw	r24, r22
 846:	97 f9       	bld	r25, 7
 848:	08 95       	ret

0000084a <__gesf2>:
 84a:	8a df       	rcall	.-236    	; 0x760 <__fp_cmp>
 84c:	08 f4       	brcc	.+2      	; 0x850 <__gesf2+0x6>
 84e:	8f ef       	ldi	r24, 0xFF	; 255
 850:	08 95       	ret

00000852 <__mulsf3>:
 852:	0b d0       	rcall	.+22     	; 0x86a <__mulsf3x>
 854:	c0 cf       	rjmp	.-128    	; 0x7d6 <__fp_round>
 856:	b1 df       	rcall	.-158    	; 0x7ba <__fp_pscA>
 858:	28 f0       	brcs	.+10     	; 0x864 <__mulsf3+0x12>
 85a:	b6 df       	rcall	.-148    	; 0x7c8 <__fp_pscB>
 85c:	18 f0       	brcs	.+6      	; 0x864 <__mulsf3+0x12>
 85e:	95 23       	and	r25, r21
 860:	09 f0       	breq	.+2      	; 0x864 <__mulsf3+0x12>
 862:	a2 cf       	rjmp	.-188    	; 0x7a8 <__fp_inf>
 864:	a7 cf       	rjmp	.-178    	; 0x7b4 <__fp_nan>
 866:	11 24       	eor	r1, r1
 868:	ea cf       	rjmp	.-44     	; 0x83e <__fp_szero>

0000086a <__mulsf3x>:
 86a:	c6 df       	rcall	.-116    	; 0x7f8 <__fp_split3>
 86c:	a0 f3       	brcs	.-24     	; 0x856 <__mulsf3+0x4>

0000086e <__mulsf3_pse>:
 86e:	95 9f       	mul	r25, r21
 870:	d1 f3       	breq	.-12     	; 0x866 <__mulsf3+0x14>
 872:	95 0f       	add	r25, r21
 874:	50 e0       	ldi	r21, 0x00	; 0
 876:	55 1f       	adc	r21, r21
 878:	62 9f       	mul	r22, r18
 87a:	f0 01       	movw	r30, r0
 87c:	72 9f       	mul	r23, r18
 87e:	bb 27       	eor	r27, r27
 880:	f0 0d       	add	r31, r0
 882:	b1 1d       	adc	r27, r1
 884:	63 9f       	mul	r22, r19
 886:	aa 27       	eor	r26, r26
 888:	f0 0d       	add	r31, r0
 88a:	b1 1d       	adc	r27, r1
 88c:	aa 1f       	adc	r26, r26
 88e:	64 9f       	mul	r22, r20
 890:	66 27       	eor	r22, r22
 892:	b0 0d       	add	r27, r0
 894:	a1 1d       	adc	r26, r1
 896:	66 1f       	adc	r22, r22
 898:	82 9f       	mul	r24, r18
 89a:	22 27       	eor	r18, r18
 89c:	b0 0d       	add	r27, r0
 89e:	a1 1d       	adc	r26, r1
 8a0:	62 1f       	adc	r22, r18
 8a2:	73 9f       	mul	r23, r19
 8a4:	b0 0d       	add	r27, r0
 8a6:	a1 1d       	adc	r26, r1
 8a8:	62 1f       	adc	r22, r18
 8aa:	83 9f       	mul	r24, r19
 8ac:	a0 0d       	add	r26, r0
 8ae:	61 1d       	adc	r22, r1
 8b0:	22 1f       	adc	r18, r18
 8b2:	74 9f       	mul	r23, r20
 8b4:	33 27       	eor	r19, r19
 8b6:	a0 0d       	add	r26, r0
 8b8:	61 1d       	adc	r22, r1
 8ba:	23 1f       	adc	r18, r19
 8bc:	84 9f       	mul	r24, r20
 8be:	60 0d       	add	r22, r0
 8c0:	21 1d       	adc	r18, r1
 8c2:	82 2f       	mov	r24, r18
 8c4:	76 2f       	mov	r23, r22
 8c6:	6a 2f       	mov	r22, r26
 8c8:	11 24       	eor	r1, r1
 8ca:	9f 57       	subi	r25, 0x7F	; 127
 8cc:	50 40       	sbci	r21, 0x00	; 0
 8ce:	8a f0       	brmi	.+34     	; 0x8f2 <__mulsf3_pse+0x84>
 8d0:	e1 f0       	breq	.+56     	; 0x90a <__mulsf3_pse+0x9c>
 8d2:	88 23       	and	r24, r24
 8d4:	4a f0       	brmi	.+18     	; 0x8e8 <__mulsf3_pse+0x7a>
 8d6:	ee 0f       	add	r30, r30
 8d8:	ff 1f       	adc	r31, r31
 8da:	bb 1f       	adc	r27, r27
 8dc:	66 1f       	adc	r22, r22
 8de:	77 1f       	adc	r23, r23
 8e0:	88 1f       	adc	r24, r24
 8e2:	91 50       	subi	r25, 0x01	; 1
 8e4:	50 40       	sbci	r21, 0x00	; 0
 8e6:	a9 f7       	brne	.-22     	; 0x8d2 <__mulsf3_pse+0x64>
 8e8:	9e 3f       	cpi	r25, 0xFE	; 254
 8ea:	51 05       	cpc	r21, r1
 8ec:	70 f0       	brcs	.+28     	; 0x90a <__mulsf3_pse+0x9c>
 8ee:	5c cf       	rjmp	.-328    	; 0x7a8 <__fp_inf>
 8f0:	a6 cf       	rjmp	.-180    	; 0x83e <__fp_szero>
 8f2:	5f 3f       	cpi	r21, 0xFF	; 255
 8f4:	ec f3       	brlt	.-6      	; 0x8f0 <__mulsf3_pse+0x82>
 8f6:	98 3e       	cpi	r25, 0xE8	; 232
 8f8:	dc f3       	brlt	.-10     	; 0x8f0 <__mulsf3_pse+0x82>
 8fa:	86 95       	lsr	r24
 8fc:	77 95       	ror	r23
 8fe:	67 95       	ror	r22
 900:	b7 95       	ror	r27
 902:	f7 95       	ror	r31
 904:	e7 95       	ror	r30
 906:	9f 5f       	subi	r25, 0xFF	; 255
 908:	c1 f7       	brne	.-16     	; 0x8fa <__mulsf3_pse+0x8c>
 90a:	fe 2b       	or	r31, r30
 90c:	88 0f       	add	r24, r24
 90e:	91 1d       	adc	r25, r1
 910:	96 95       	lsr	r25
 912:	87 95       	ror	r24
 914:	97 f9       	bld	r25, 7
 916:	08 95       	ret

00000918 <__tablejump2__>:
 918:	ee 0f       	add	r30, r30
 91a:	ff 1f       	adc	r31, r31
 91c:	00 24       	eor	r0, r0
 91e:	00 1c       	adc	r0, r0
 920:	0b be       	out	0x3b, r0	; 59
 922:	07 90       	elpm	r0, Z+
 924:	f6 91       	elpm	r31, Z
 926:	e0 2d       	mov	r30, r0
 928:	09 94       	ijmp

0000092a <_exit>:
 92a:	f8 94       	cli

0000092c <__stop_program>:
 92c:	ff cf       	rjmp	.-2      	; 0x92c <__stop_program>
