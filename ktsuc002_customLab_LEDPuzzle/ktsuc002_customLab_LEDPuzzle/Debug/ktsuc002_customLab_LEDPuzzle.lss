
ktsuc002_customLab_LEDPuzzle.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001da  00800100  0000134e  000013e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000134e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008002da  008002da  000015bc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000015bc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000168  00000000  00000000  00001630  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002eb7  00000000  00000000  00001798  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a55  00000000  00000000  0000464f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017ef  00000000  00000000  000050a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000314  00000000  00000000  00006894  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000087a  00000000  00000000  00006ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e78  00000000  00000000  00007422  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  0000829a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	5a c0       	rjmp	.+180    	; 0xb6 <__ctors_end>
       2:	00 00       	nop
       4:	77 c0       	rjmp	.+238    	; 0xf4 <__bad_interrupt>
       6:	00 00       	nop
       8:	75 c0       	rjmp	.+234    	; 0xf4 <__bad_interrupt>
       a:	00 00       	nop
       c:	73 c0       	rjmp	.+230    	; 0xf4 <__bad_interrupt>
       e:	00 00       	nop
      10:	71 c0       	rjmp	.+226    	; 0xf4 <__bad_interrupt>
      12:	00 00       	nop
      14:	6f c0       	rjmp	.+222    	; 0xf4 <__bad_interrupt>
      16:	00 00       	nop
      18:	6d c0       	rjmp	.+218    	; 0xf4 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	6b c0       	rjmp	.+214    	; 0xf4 <__bad_interrupt>
      1e:	00 00       	nop
      20:	69 c0       	rjmp	.+210    	; 0xf4 <__bad_interrupt>
      22:	00 00       	nop
      24:	67 c0       	rjmp	.+206    	; 0xf4 <__bad_interrupt>
      26:	00 00       	nop
      28:	65 c0       	rjmp	.+202    	; 0xf4 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	63 c0       	rjmp	.+198    	; 0xf4 <__bad_interrupt>
      2e:	00 00       	nop
      30:	61 c0       	rjmp	.+194    	; 0xf4 <__bad_interrupt>
      32:	00 00       	nop
      34:	95 c0       	rjmp	.+298    	; 0x160 <__vector_13>
      36:	00 00       	nop
      38:	5d c0       	rjmp	.+186    	; 0xf4 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	5b c0       	rjmp	.+182    	; 0xf4 <__bad_interrupt>
      3e:	00 00       	nop
      40:	59 c0       	rjmp	.+178    	; 0xf4 <__bad_interrupt>
      42:	00 00       	nop
      44:	57 c0       	rjmp	.+174    	; 0xf4 <__bad_interrupt>
      46:	00 00       	nop
      48:	55 c0       	rjmp	.+170    	; 0xf4 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	53 c0       	rjmp	.+166    	; 0xf4 <__bad_interrupt>
      4e:	00 00       	nop
      50:	51 c0       	rjmp	.+162    	; 0xf4 <__bad_interrupt>
      52:	00 00       	nop
      54:	4f c0       	rjmp	.+158    	; 0xf4 <__bad_interrupt>
      56:	00 00       	nop
      58:	4d c0       	rjmp	.+154    	; 0xf4 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	4b c0       	rjmp	.+150    	; 0xf4 <__bad_interrupt>
      5e:	00 00       	nop
      60:	49 c0       	rjmp	.+146    	; 0xf4 <__bad_interrupt>
      62:	00 00       	nop
      64:	47 c0       	rjmp	.+142    	; 0xf4 <__bad_interrupt>
      66:	00 00       	nop
      68:	45 c0       	rjmp	.+138    	; 0xf4 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	43 c0       	rjmp	.+134    	; 0xf4 <__bad_interrupt>
      6e:	00 00       	nop
      70:	41 c0       	rjmp	.+130    	; 0xf4 <__bad_interrupt>
      72:	00 00       	nop
      74:	3f c0       	rjmp	.+126    	; 0xf4 <__bad_interrupt>
      76:	00 00       	nop
      78:	3d c0       	rjmp	.+122    	; 0xf4 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	3b c0       	rjmp	.+118    	; 0xf4 <__bad_interrupt>
      7e:	00 00       	nop
      80:	39 c0       	rjmp	.+114    	; 0xf4 <__bad_interrupt>
      82:	00 00       	nop
      84:	37 c0       	rjmp	.+110    	; 0xf4 <__bad_interrupt>
      86:	00 00       	nop
      88:	35 c0       	rjmp	.+106    	; 0xf4 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	67 08       	sbc	r6, r7
      8e:	6c 08       	sbc	r6, r12
      90:	71 08       	sbc	r7, r1
      92:	76 08       	sbc	r7, r6
      94:	7b 08       	sbc	r7, r11
      96:	80 08       	sbc	r8, r0
      98:	85 08       	sbc	r8, r5
      9a:	8a 08       	sbc	r8, r10
      9c:	8f 08       	sbc	r8, r15
      9e:	94 08       	sbc	r9, r4
      a0:	99 08       	sbc	r9, r9
      a2:	9e 08       	sbc	r9, r14
      a4:	a3 08       	sbc	r10, r3
      a6:	a8 08       	sbc	r10, r8
      a8:	ad 08       	sbc	r10, r13
      aa:	b2 08       	sbc	r11, r2
      ac:	b7 08       	sbc	r11, r7
      ae:	bc 08       	sbc	r11, r12
      b0:	c1 08       	sbc	r12, r1
      b2:	c6 08       	sbc	r12, r6
      b4:	cb 08       	sbc	r12, r11

000000b6 <__ctors_end>:
      b6:	11 24       	eor	r1, r1
      b8:	1f be       	out	0x3f, r1	; 63
      ba:	cf ef       	ldi	r28, 0xFF	; 255
      bc:	d0 e4       	ldi	r29, 0x40	; 64
      be:	de bf       	out	0x3e, r29	; 62
      c0:	cd bf       	out	0x3d, r28	; 61

000000c2 <__do_copy_data>:
      c2:	12 e0       	ldi	r17, 0x02	; 2
      c4:	a0 e0       	ldi	r26, 0x00	; 0
      c6:	b1 e0       	ldi	r27, 0x01	; 1
      c8:	ee e4       	ldi	r30, 0x4E	; 78
      ca:	f3 e1       	ldi	r31, 0x13	; 19
      cc:	00 e0       	ldi	r16, 0x00	; 0
      ce:	0b bf       	out	0x3b, r16	; 59
      d0:	02 c0       	rjmp	.+4      	; 0xd6 <__do_copy_data+0x14>
      d2:	07 90       	elpm	r0, Z+
      d4:	0d 92       	st	X+, r0
      d6:	aa 3d       	cpi	r26, 0xDA	; 218
      d8:	b1 07       	cpc	r27, r17
      da:	d9 f7       	brne	.-10     	; 0xd2 <__do_copy_data+0x10>

000000dc <__do_clear_bss>:
      dc:	22 e0       	ldi	r18, 0x02	; 2
      de:	aa ed       	ldi	r26, 0xDA	; 218
      e0:	b2 e0       	ldi	r27, 0x02	; 2
      e2:	01 c0       	rjmp	.+2      	; 0xe6 <.do_clear_bss_start>

000000e4 <.do_clear_bss_loop>:
      e4:	1d 92       	st	X+, r1

000000e6 <.do_clear_bss_start>:
      e6:	a4 3e       	cpi	r26, 0xE4	; 228
      e8:	b2 07       	cpc	r27, r18
      ea:	e1 f7       	brne	.-8      	; 0xe4 <.do_clear_bss_loop>
      ec:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <main>
      f0:	0c 94 a5 09 	jmp	0x134a	; 0x134a <_exit>

000000f4 <__bad_interrupt>:
      f4:	85 cf       	rjmp	.-246    	; 0x0 <__vectors>

000000f6 <TimerSet>:
	}
	return 0;
}
void resetEEPROM(){
	uint8_t zero = 0;
	eeprom_update_byte(0,zero);
      f6:	60 93 24 01 	sts	0x0124, r22	; 0x800124 <_avr_timer_M>
      fa:	70 93 25 01 	sts	0x0125, r23	; 0x800125 <_avr_timer_M+0x1>
      fe:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <_avr_timer_M+0x2>
     102:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <_avr_timer_M+0x3>
     106:	60 93 df 02 	sts	0x02DF, r22	; 0x8002df <_avr_timer_cntcurr>
     10a:	70 93 e0 02 	sts	0x02E0, r23	; 0x8002e0 <_avr_timer_cntcurr+0x1>
     10e:	80 93 e1 02 	sts	0x02E1, r24	; 0x8002e1 <_avr_timer_cntcurr+0x2>
     112:	90 93 e2 02 	sts	0x02E2, r25	; 0x8002e2 <_avr_timer_cntcurr+0x3>
     116:	08 95       	ret

00000118 <TimerOn>:
     118:	8b e0       	ldi	r24, 0x0B	; 11
     11a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     11e:	8d e7       	ldi	r24, 0x7D	; 125
     120:	90 e0       	ldi	r25, 0x00	; 0
     122:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     126:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     12a:	82 e0       	ldi	r24, 0x02	; 2
     12c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     130:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     134:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     138:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <_avr_timer_M>
     13c:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <_avr_timer_M+0x1>
     140:	a0 91 26 01 	lds	r26, 0x0126	; 0x800126 <_avr_timer_M+0x2>
     144:	b0 91 27 01 	lds	r27, 0x0127	; 0x800127 <_avr_timer_M+0x3>
     148:	80 93 df 02 	sts	0x02DF, r24	; 0x8002df <_avr_timer_cntcurr>
     14c:	90 93 e0 02 	sts	0x02E0, r25	; 0x8002e0 <_avr_timer_cntcurr+0x1>
     150:	a0 93 e1 02 	sts	0x02E1, r26	; 0x8002e1 <_avr_timer_cntcurr+0x2>
     154:	b0 93 e2 02 	sts	0x02E2, r27	; 0x8002e2 <_avr_timer_cntcurr+0x3>
     158:	8f b7       	in	r24, 0x3f	; 63
     15a:	80 68       	ori	r24, 0x80	; 128
     15c:	8f bf       	out	0x3f, r24	; 63
     15e:	08 95       	ret

00000160 <__vector_13>:
     160:	1f 92       	push	r1
     162:	0f 92       	push	r0
     164:	0f b6       	in	r0, 0x3f	; 63
     166:	0f 92       	push	r0
     168:	11 24       	eor	r1, r1
     16a:	8f 93       	push	r24
     16c:	9f 93       	push	r25
     16e:	af 93       	push	r26
     170:	bf 93       	push	r27
     172:	80 91 df 02 	lds	r24, 0x02DF	; 0x8002df <_avr_timer_cntcurr>
     176:	90 91 e0 02 	lds	r25, 0x02E0	; 0x8002e0 <_avr_timer_cntcurr+0x1>
     17a:	a0 91 e1 02 	lds	r26, 0x02E1	; 0x8002e1 <_avr_timer_cntcurr+0x2>
     17e:	b0 91 e2 02 	lds	r27, 0x02E2	; 0x8002e2 <_avr_timer_cntcurr+0x3>
     182:	01 97       	sbiw	r24, 0x01	; 1
     184:	a1 09       	sbc	r26, r1
     186:	b1 09       	sbc	r27, r1
     188:	80 93 df 02 	sts	0x02DF, r24	; 0x8002df <_avr_timer_cntcurr>
     18c:	90 93 e0 02 	sts	0x02E0, r25	; 0x8002e0 <_avr_timer_cntcurr+0x1>
     190:	a0 93 e1 02 	sts	0x02E1, r26	; 0x8002e1 <_avr_timer_cntcurr+0x2>
     194:	b0 93 e2 02 	sts	0x02E2, r27	; 0x8002e2 <_avr_timer_cntcurr+0x3>
     198:	89 2b       	or	r24, r25
     19a:	8a 2b       	or	r24, r26
     19c:	8b 2b       	or	r24, r27
     19e:	99 f4       	brne	.+38     	; 0x1c6 <__vector_13+0x66>
     1a0:	81 e0       	ldi	r24, 0x01	; 1
     1a2:	80 93 e3 02 	sts	0x02E3, r24	; 0x8002e3 <TimerFlag>
     1a6:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <_avr_timer_M>
     1aa:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <_avr_timer_M+0x1>
     1ae:	a0 91 26 01 	lds	r26, 0x0126	; 0x800126 <_avr_timer_M+0x2>
     1b2:	b0 91 27 01 	lds	r27, 0x0127	; 0x800127 <_avr_timer_M+0x3>
     1b6:	80 93 df 02 	sts	0x02DF, r24	; 0x8002df <_avr_timer_cntcurr>
     1ba:	90 93 e0 02 	sts	0x02E0, r25	; 0x8002e0 <_avr_timer_cntcurr+0x1>
     1be:	a0 93 e1 02 	sts	0x02E1, r26	; 0x8002e1 <_avr_timer_cntcurr+0x2>
     1c2:	b0 93 e2 02 	sts	0x02E2, r27	; 0x8002e2 <_avr_timer_cntcurr+0x3>
     1c6:	bf 91       	pop	r27
     1c8:	af 91       	pop	r26
     1ca:	9f 91       	pop	r25
     1cc:	8f 91       	pop	r24
     1ce:	0f 90       	pop	r0
     1d0:	0f be       	out	0x3f, r0	; 63
     1d2:	0f 90       	pop	r0
     1d4:	1f 90       	pop	r1
     1d6:	18 95       	reti

000001d8 <delay_ms>:
     1d8:	18 16       	cp	r1, r24
     1da:	19 06       	cpc	r1, r25
     1dc:	5c f0       	brlt	.+22     	; 0x1f4 <delay_ms+0x1c>
     1de:	08 95       	ret
     1e0:	00 00       	nop
     1e2:	21 50       	subi	r18, 0x01	; 1
     1e4:	31 09       	sbc	r19, r1
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <delay_ms+0x8>
     1e8:	4f 5f       	subi	r20, 0xFF	; 255
     1ea:	5f 4f       	sbci	r21, 0xFF	; 255
     1ec:	84 17       	cp	r24, r20
     1ee:	95 07       	cpc	r25, r21
     1f0:	19 f4       	brne	.+6      	; 0x1f8 <delay_ms+0x20>
     1f2:	08 95       	ret
     1f4:	40 e0       	ldi	r20, 0x00	; 0
     1f6:	50 e0       	ldi	r21, 0x00	; 0
     1f8:	27 e0       	ldi	r18, 0x07	; 7
     1fa:	33 e0       	ldi	r19, 0x03	; 3
     1fc:	f1 cf       	rjmp	.-30     	; 0x1e0 <delay_ms+0x8>

000001fe <LCD_WriteCommand>:
     1fe:	2a 98       	cbi	0x05, 2	; 5
     200:	8b b9       	out	0x0b, r24	; 11
     202:	2b 9a       	sbi	0x05, 3	; 5
     204:	00 00       	nop
     206:	2b 98       	cbi	0x05, 3	; 5
     208:	82 e0       	ldi	r24, 0x02	; 2
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	e5 cf       	rjmp	.-54     	; 0x1d8 <delay_ms>
     20e:	08 95       	ret

00000210 <LCD_ClearScreen>:
     210:	81 e0       	ldi	r24, 0x01	; 1
     212:	f5 cf       	rjmp	.-22     	; 0x1fe <LCD_WriteCommand>
     214:	08 95       	ret

00000216 <LCD_Cursor>:
     216:	81 31       	cpi	r24, 0x11	; 17
     218:	18 f4       	brcc	.+6      	; 0x220 <LCD_Cursor+0xa>
     21a:	81 58       	subi	r24, 0x81	; 129
     21c:	f0 cf       	rjmp	.-32     	; 0x1fe <LCD_WriteCommand>
     21e:	08 95       	ret
     220:	81 55       	subi	r24, 0x51	; 81
     222:	ed cf       	rjmp	.-38     	; 0x1fe <LCD_WriteCommand>
     224:	08 95       	ret

00000226 <LCD_init>:
     226:	84 e6       	ldi	r24, 0x64	; 100
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	d6 df       	rcall	.-84     	; 0x1d8 <delay_ms>
     22c:	88 e3       	ldi	r24, 0x38	; 56
     22e:	e7 df       	rcall	.-50     	; 0x1fe <LCD_WriteCommand>
     230:	86 e0       	ldi	r24, 0x06	; 6
     232:	e5 df       	rcall	.-54     	; 0x1fe <LCD_WriteCommand>
     234:	8f e0       	ldi	r24, 0x0F	; 15
     236:	e3 df       	rcall	.-58     	; 0x1fe <LCD_WriteCommand>
     238:	81 e0       	ldi	r24, 0x01	; 1
     23a:	e1 df       	rcall	.-62     	; 0x1fe <LCD_WriteCommand>
     23c:	8a e0       	ldi	r24, 0x0A	; 10
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	cb cf       	rjmp	.-106    	; 0x1d8 <delay_ms>
     242:	08 95       	ret

00000244 <LCD_WriteData>:
     244:	2a 9a       	sbi	0x05, 2	; 5
     246:	8b b9       	out	0x0b, r24	; 11
     248:	2b 9a       	sbi	0x05, 3	; 5
     24a:	00 00       	nop
     24c:	2b 98       	cbi	0x05, 3	; 5
     24e:	81 e0       	ldi	r24, 0x01	; 1
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	c2 cf       	rjmp	.-124    	; 0x1d8 <delay_ms>
     254:	08 95       	ret

00000256 <LCD_DisplayString>:
     256:	0f 93       	push	r16
     258:	1f 93       	push	r17
     25a:	cf 93       	push	r28
     25c:	df 93       	push	r29
     25e:	18 2f       	mov	r17, r24
     260:	eb 01       	movw	r28, r22
     262:	d6 df       	rcall	.-84     	; 0x210 <LCD_ClearScreen>
     264:	88 81       	ld	r24, Y
     266:	88 23       	and	r24, r24
     268:	51 f0       	breq	.+20     	; 0x27e <LCD_DisplayString+0x28>
     26a:	01 e0       	ldi	r16, 0x01	; 1
     26c:	01 0f       	add	r16, r17
     26e:	81 2f       	mov	r24, r17
     270:	d2 df       	rcall	.-92     	; 0x216 <LCD_Cursor>
     272:	89 91       	ld	r24, Y+
     274:	e7 df       	rcall	.-50     	; 0x244 <LCD_WriteData>
     276:	10 2f       	mov	r17, r16
     278:	88 81       	ld	r24, Y
     27a:	81 11       	cpse	r24, r1
     27c:	f6 cf       	rjmp	.-20     	; 0x26a <LCD_DisplayString+0x14>
     27e:	df 91       	pop	r29
     280:	cf 91       	pop	r28
     282:	1f 91       	pop	r17
     284:	0f 91       	pop	r16
     286:	08 95       	ret

00000288 <LCD_BuildChar>:
     288:	0f 93       	push	r16
     28a:	1f 93       	push	r17
     28c:	cf 93       	push	r28
     28e:	df 93       	push	r29
     290:	88 30       	cpi	r24, 0x08	; 8
     292:	70 f4       	brcc	.+28     	; 0x2b0 <LCD_BuildChar+0x28>
     294:	8b 01       	movw	r16, r22
     296:	88 0f       	add	r24, r24
     298:	88 0f       	add	r24, r24
     29a:	88 0f       	add	r24, r24
     29c:	80 5c       	subi	r24, 0xC0	; 192
     29e:	af df       	rcall	.-162    	; 0x1fe <LCD_WriteCommand>
     2a0:	e8 01       	movw	r28, r16
     2a2:	08 5f       	subi	r16, 0xF8	; 248
     2a4:	1f 4f       	sbci	r17, 0xFF	; 255
     2a6:	89 91       	ld	r24, Y+
     2a8:	cd df       	rcall	.-102    	; 0x244 <LCD_WriteData>
     2aa:	c0 17       	cp	r28, r16
     2ac:	d1 07       	cpc	r29, r17
     2ae:	d9 f7       	brne	.-10     	; 0x2a6 <LCD_BuildChar+0x1e>
     2b0:	df 91       	pop	r29
     2b2:	cf 91       	pop	r28
     2b4:	1f 91       	pop	r17
     2b6:	0f 91       	pop	r16
     2b8:	08 95       	ret

000002ba <GetKeypadKey>:
     2ba:	8f e7       	ldi	r24, 0x7F	; 127
     2bc:	88 b9       	out	0x08, r24	; 8
     2be:	00 00       	nop
     2c0:	33 9b       	sbis	0x06, 3	; 6
     2c2:	29 c0       	rjmp	.+82     	; 0x316 <GetKeypadKey+0x5c>
     2c4:	32 9b       	sbis	0x06, 2	; 6
     2c6:	29 c0       	rjmp	.+82     	; 0x31a <GetKeypadKey+0x60>
     2c8:	31 9b       	sbis	0x06, 1	; 6
     2ca:	29 c0       	rjmp	.+82     	; 0x31e <GetKeypadKey+0x64>
     2cc:	30 9b       	sbis	0x06, 0	; 6
     2ce:	29 c0       	rjmp	.+82     	; 0x322 <GetKeypadKey+0x68>
     2d0:	8f eb       	ldi	r24, 0xBF	; 191
     2d2:	88 b9       	out	0x08, r24	; 8
     2d4:	00 00       	nop
     2d6:	33 9b       	sbis	0x06, 3	; 6
     2d8:	26 c0       	rjmp	.+76     	; 0x326 <GetKeypadKey+0x6c>
     2da:	32 9b       	sbis	0x06, 2	; 6
     2dc:	26 c0       	rjmp	.+76     	; 0x32a <GetKeypadKey+0x70>
     2de:	31 9b       	sbis	0x06, 1	; 6
     2e0:	26 c0       	rjmp	.+76     	; 0x32e <GetKeypadKey+0x74>
     2e2:	30 9b       	sbis	0x06, 0	; 6
     2e4:	26 c0       	rjmp	.+76     	; 0x332 <GetKeypadKey+0x78>
     2e6:	8f ed       	ldi	r24, 0xDF	; 223
     2e8:	88 b9       	out	0x08, r24	; 8
     2ea:	00 00       	nop
     2ec:	33 9b       	sbis	0x06, 3	; 6
     2ee:	23 c0       	rjmp	.+70     	; 0x336 <GetKeypadKey+0x7c>
     2f0:	32 9b       	sbis	0x06, 2	; 6
     2f2:	23 c0       	rjmp	.+70     	; 0x33a <GetKeypadKey+0x80>
     2f4:	31 9b       	sbis	0x06, 1	; 6
     2f6:	23 c0       	rjmp	.+70     	; 0x33e <GetKeypadKey+0x84>
     2f8:	30 9b       	sbis	0x06, 0	; 6
     2fa:	23 c0       	rjmp	.+70     	; 0x342 <GetKeypadKey+0x88>
     2fc:	8f ee       	ldi	r24, 0xEF	; 239
     2fe:	88 b9       	out	0x08, r24	; 8
     300:	00 00       	nop
     302:	33 9b       	sbis	0x06, 3	; 6
     304:	20 c0       	rjmp	.+64     	; 0x346 <GetKeypadKey+0x8c>
     306:	32 9b       	sbis	0x06, 2	; 6
     308:	20 c0       	rjmp	.+64     	; 0x34a <GetKeypadKey+0x90>
     30a:	31 9b       	sbis	0x06, 1	; 6
     30c:	20 c0       	rjmp	.+64     	; 0x34e <GetKeypadKey+0x94>
     30e:	30 9b       	sbis	0x06, 0	; 6
     310:	20 c0       	rjmp	.+64     	; 0x352 <GetKeypadKey+0x98>
     312:	80 e0       	ldi	r24, 0x00	; 0
     314:	08 95       	ret
     316:	81 e3       	ldi	r24, 0x31	; 49
     318:	08 95       	ret
     31a:	82 e3       	ldi	r24, 0x32	; 50
     31c:	08 95       	ret
     31e:	83 e3       	ldi	r24, 0x33	; 51
     320:	08 95       	ret
     322:	81 e4       	ldi	r24, 0x41	; 65
     324:	08 95       	ret
     326:	84 e3       	ldi	r24, 0x34	; 52
     328:	08 95       	ret
     32a:	85 e3       	ldi	r24, 0x35	; 53
     32c:	08 95       	ret
     32e:	86 e3       	ldi	r24, 0x36	; 54
     330:	08 95       	ret
     332:	82 e4       	ldi	r24, 0x42	; 66
     334:	08 95       	ret
     336:	87 e3       	ldi	r24, 0x37	; 55
     338:	08 95       	ret
     33a:	88 e3       	ldi	r24, 0x38	; 56
     33c:	08 95       	ret
     33e:	89 e3       	ldi	r24, 0x39	; 57
     340:	08 95       	ret
     342:	83 e4       	ldi	r24, 0x43	; 67
     344:	08 95       	ret
     346:	8a e2       	ldi	r24, 0x2A	; 42
     348:	08 95       	ret
     34a:	80 e3       	ldi	r24, 0x30	; 48
     34c:	08 95       	ret
     34e:	83 e2       	ldi	r24, 0x23	; 35
     350:	08 95       	ret
     352:	84 e4       	ldi	r24, 0x44	; 68
     354:	08 95       	ret

00000356 <changeColumnA>:
     356:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <cursorPos>
     35a:	83 30       	cpi	r24, 0x03	; 3
     35c:	09 f1       	breq	.+66     	; 0x3a0 <changeColumnA+0x4a>
     35e:	28 f4       	brcc	.+10     	; 0x36a <changeColumnA+0x14>
     360:	81 30       	cpi	r24, 0x01	; 1
     362:	41 f0       	breq	.+16     	; 0x374 <changeColumnA+0x1e>
     364:	82 30       	cpi	r24, 0x02	; 2
     366:	89 f0       	breq	.+34     	; 0x38a <changeColumnA+0x34>
     368:	3c c0       	rjmp	.+120    	; 0x3e2 <changeColumnA+0x8c>
     36a:	84 30       	cpi	r24, 0x04	; 4
     36c:	21 f1       	breq	.+72     	; 0x3b6 <changeColumnA+0x60>
     36e:	85 30       	cpi	r24, 0x05	; 5
     370:	69 f1       	breq	.+90     	; 0x3cc <changeColumnA+0x76>
     372:	37 c0       	rjmp	.+110    	; 0x3e2 <changeColumnA+0x8c>
     374:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <posA>
     378:	86 30       	cpi	r24, 0x06	; 6
     37a:	19 f4       	brne	.+6      	; 0x382 <changeColumnA+0x2c>
     37c:	10 92 de 02 	sts	0x02DE, r1	; 0x8002de <posA>
     380:	32 c0       	rjmp	.+100    	; 0x3e6 <changeColumnA+0x90>
     382:	8f 5f       	subi	r24, 0xFF	; 255
     384:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <posA>
     388:	2e c0       	rjmp	.+92     	; 0x3e6 <changeColumnA+0x90>
     38a:	80 91 dd 02 	lds	r24, 0x02DD	; 0x8002dd <posB>
     38e:	86 30       	cpi	r24, 0x06	; 6
     390:	19 f4       	brne	.+6      	; 0x398 <changeColumnA+0x42>
     392:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <posB>
     396:	27 c0       	rjmp	.+78     	; 0x3e6 <changeColumnA+0x90>
     398:	8f 5f       	subi	r24, 0xFF	; 255
     39a:	80 93 dd 02 	sts	0x02DD, r24	; 0x8002dd <posB>
     39e:	23 c0       	rjmp	.+70     	; 0x3e6 <changeColumnA+0x90>
     3a0:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <posC>
     3a4:	86 30       	cpi	r24, 0x06	; 6
     3a6:	19 f4       	brne	.+6      	; 0x3ae <changeColumnA+0x58>
     3a8:	10 92 dc 02 	sts	0x02DC, r1	; 0x8002dc <posC>
     3ac:	1c c0       	rjmp	.+56     	; 0x3e6 <changeColumnA+0x90>
     3ae:	8f 5f       	subi	r24, 0xFF	; 255
     3b0:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <posC>
     3b4:	18 c0       	rjmp	.+48     	; 0x3e6 <changeColumnA+0x90>
     3b6:	80 91 db 02 	lds	r24, 0x02DB	; 0x8002db <posD>
     3ba:	86 30       	cpi	r24, 0x06	; 6
     3bc:	19 f4       	brne	.+6      	; 0x3c4 <changeColumnA+0x6e>
     3be:	10 92 db 02 	sts	0x02DB, r1	; 0x8002db <posD>
     3c2:	11 c0       	rjmp	.+34     	; 0x3e6 <changeColumnA+0x90>
     3c4:	8f 5f       	subi	r24, 0xFF	; 255
     3c6:	80 93 db 02 	sts	0x02DB, r24	; 0x8002db <posD>
     3ca:	0d c0       	rjmp	.+26     	; 0x3e6 <changeColumnA+0x90>
     3cc:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <__data_end>
     3d0:	86 30       	cpi	r24, 0x06	; 6
     3d2:	19 f4       	brne	.+6      	; 0x3da <changeColumnA+0x84>
     3d4:	10 92 da 02 	sts	0x02DA, r1	; 0x8002da <__data_end>
     3d8:	06 c0       	rjmp	.+12     	; 0x3e6 <changeColumnA+0x90>
     3da:	8f 5f       	subi	r24, 0xFF	; 255
     3dc:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <__data_end>
     3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <changeColumnA+0x90>
     3e2:	86 e0       	ldi	r24, 0x06	; 6
     3e4:	18 df       	rcall	.-464    	; 0x216 <LCD_Cursor>
     3e6:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <cursorPos>
     3ea:	15 df       	rcall	.-470    	; 0x216 <LCD_Cursor>
     3ec:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <cursorPos>
     3f0:	83 30       	cpi	r24, 0x03	; 3
     3f2:	d9 f0       	breq	.+54     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     3f4:	28 f4       	brcc	.+10     	; 0x400 <__LOCK_REGION_LENGTH__>
     3f6:	81 30       	cpi	r24, 0x01	; 1
     3f8:	41 f0       	breq	.+16     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     3fa:	82 30       	cpi	r24, 0x02	; 2
     3fc:	71 f0       	breq	.+28     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     3fe:	2d c0       	rjmp	.+90     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
     400:	84 30       	cpi	r24, 0x04	; 4
     402:	d9 f0       	breq	.+54     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     404:	85 30       	cpi	r24, 0x05	; 5
     406:	09 f1       	breq	.+66     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     408:	28 c0       	rjmp	.+80     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
     40a:	e0 91 de 02 	lds	r30, 0x02DE	; 0x8002de <posA>
     40e:	f0 e0       	ldi	r31, 0x00	; 0
     410:	e4 5e       	subi	r30, 0xE4	; 228
     412:	fe 4f       	sbci	r31, 0xFE	; 254
     414:	80 81       	ld	r24, Z
     416:	16 df       	rcall	.-468    	; 0x244 <LCD_WriteData>
     418:	27 c0       	rjmp	.+78     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     41a:	e0 91 dd 02 	lds	r30, 0x02DD	; 0x8002dd <posB>
     41e:	f0 e0       	ldi	r31, 0x00	; 0
     420:	eb 5e       	subi	r30, 0xEB	; 235
     422:	fe 4f       	sbci	r31, 0xFE	; 254
     424:	80 81       	ld	r24, Z
     426:	0e df       	rcall	.-484    	; 0x244 <LCD_WriteData>
     428:	1f c0       	rjmp	.+62     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     42a:	e0 91 dc 02 	lds	r30, 0x02DC	; 0x8002dc <posC>
     42e:	f0 e0       	ldi	r31, 0x00	; 0
     430:	e2 5f       	subi	r30, 0xF2	; 242
     432:	fe 4f       	sbci	r31, 0xFE	; 254
     434:	80 81       	ld	r24, Z
     436:	06 df       	rcall	.-500    	; 0x244 <LCD_WriteData>
     438:	17 c0       	rjmp	.+46     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     43a:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <posD>
     43e:	f0 e0       	ldi	r31, 0x00	; 0
     440:	e9 5f       	subi	r30, 0xF9	; 249
     442:	fe 4f       	sbci	r31, 0xFE	; 254
     444:	80 81       	ld	r24, Z
     446:	fe de       	rcall	.-516    	; 0x244 <LCD_WriteData>
     448:	0f c0       	rjmp	.+30     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     44a:	e0 91 da 02 	lds	r30, 0x02DA	; 0x8002da <__data_end>
     44e:	f0 e0       	ldi	r31, 0x00	; 0
     450:	e0 50       	subi	r30, 0x00	; 0
     452:	ff 4f       	sbci	r31, 0xFF	; 255
     454:	80 81       	ld	r24, Z
     456:	f6 de       	rcall	.-532    	; 0x244 <LCD_WriteData>
     458:	07 c0       	rjmp	.+14     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     45a:	e0 91 de 02 	lds	r30, 0x02DE	; 0x8002de <posA>
     45e:	f0 e0       	ldi	r31, 0x00	; 0
     460:	e4 5e       	subi	r30, 0xE4	; 228
     462:	fe 4f       	sbci	r31, 0xFE	; 254
     464:	80 81       	ld	r24, Z
     466:	ee de       	rcall	.-548    	; 0x244 <LCD_WriteData>
     468:	86 e0       	ldi	r24, 0x06	; 6
     46a:	d5 ce       	rjmp	.-598    	; 0x216 <LCD_Cursor>
     46c:	08 95       	ret

0000046e <changeColumnB>:
     46e:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <cursorPos>
     472:	83 30       	cpi	r24, 0x03	; 3
     474:	19 f1       	breq	.+70     	; 0x4bc <changeColumnB+0x4e>
     476:	28 f4       	brcc	.+10     	; 0x482 <changeColumnB+0x14>
     478:	81 30       	cpi	r24, 0x01	; 1
     47a:	41 f0       	breq	.+16     	; 0x48c <changeColumnB+0x1e>
     47c:	82 30       	cpi	r24, 0x02	; 2
     47e:	91 f0       	breq	.+36     	; 0x4a4 <changeColumnB+0x36>
     480:	41 c0       	rjmp	.+130    	; 0x504 <changeColumnB+0x96>
     482:	84 30       	cpi	r24, 0x04	; 4
     484:	39 f1       	breq	.+78     	; 0x4d4 <changeColumnB+0x66>
     486:	85 30       	cpi	r24, 0x05	; 5
     488:	89 f1       	breq	.+98     	; 0x4ec <changeColumnB+0x7e>
     48a:	3c c0       	rjmp	.+120    	; 0x504 <changeColumnB+0x96>
     48c:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <posA>
     490:	81 11       	cpse	r24, r1
     492:	04 c0       	rjmp	.+8      	; 0x49c <changeColumnB+0x2e>
     494:	86 e0       	ldi	r24, 0x06	; 6
     496:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <posA>
     49a:	36 c0       	rjmp	.+108    	; 0x508 <changeColumnB+0x9a>
     49c:	81 50       	subi	r24, 0x01	; 1
     49e:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <posA>
     4a2:	32 c0       	rjmp	.+100    	; 0x508 <changeColumnB+0x9a>
     4a4:	80 91 dd 02 	lds	r24, 0x02DD	; 0x8002dd <posB>
     4a8:	81 11       	cpse	r24, r1
     4aa:	04 c0       	rjmp	.+8      	; 0x4b4 <changeColumnB+0x46>
     4ac:	86 e0       	ldi	r24, 0x06	; 6
     4ae:	80 93 dd 02 	sts	0x02DD, r24	; 0x8002dd <posB>
     4b2:	2a c0       	rjmp	.+84     	; 0x508 <changeColumnB+0x9a>
     4b4:	81 50       	subi	r24, 0x01	; 1
     4b6:	80 93 dd 02 	sts	0x02DD, r24	; 0x8002dd <posB>
     4ba:	26 c0       	rjmp	.+76     	; 0x508 <changeColumnB+0x9a>
     4bc:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <posC>
     4c0:	81 11       	cpse	r24, r1
     4c2:	04 c0       	rjmp	.+8      	; 0x4cc <changeColumnB+0x5e>
     4c4:	86 e0       	ldi	r24, 0x06	; 6
     4c6:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <posC>
     4ca:	1e c0       	rjmp	.+60     	; 0x508 <changeColumnB+0x9a>
     4cc:	81 50       	subi	r24, 0x01	; 1
     4ce:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <posC>
     4d2:	1a c0       	rjmp	.+52     	; 0x508 <changeColumnB+0x9a>
     4d4:	80 91 db 02 	lds	r24, 0x02DB	; 0x8002db <posD>
     4d8:	81 11       	cpse	r24, r1
     4da:	04 c0       	rjmp	.+8      	; 0x4e4 <changeColumnB+0x76>
     4dc:	86 e0       	ldi	r24, 0x06	; 6
     4de:	80 93 db 02 	sts	0x02DB, r24	; 0x8002db <posD>
     4e2:	12 c0       	rjmp	.+36     	; 0x508 <changeColumnB+0x9a>
     4e4:	81 50       	subi	r24, 0x01	; 1
     4e6:	80 93 db 02 	sts	0x02DB, r24	; 0x8002db <posD>
     4ea:	0e c0       	rjmp	.+28     	; 0x508 <changeColumnB+0x9a>
     4ec:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <__data_end>
     4f0:	81 11       	cpse	r24, r1
     4f2:	04 c0       	rjmp	.+8      	; 0x4fc <changeColumnB+0x8e>
     4f4:	86 e0       	ldi	r24, 0x06	; 6
     4f6:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <__data_end>
     4fa:	06 c0       	rjmp	.+12     	; 0x508 <changeColumnB+0x9a>
     4fc:	81 50       	subi	r24, 0x01	; 1
     4fe:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <__data_end>
     502:	02 c0       	rjmp	.+4      	; 0x508 <changeColumnB+0x9a>
     504:	86 e0       	ldi	r24, 0x06	; 6
     506:	87 de       	rcall	.-754    	; 0x216 <LCD_Cursor>
     508:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <cursorPos>
     50c:	84 de       	rcall	.-760    	; 0x216 <LCD_Cursor>
     50e:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <cursorPos>
     512:	83 30       	cpi	r24, 0x03	; 3
     514:	d9 f0       	breq	.+54     	; 0x54c <changeColumnB+0xde>
     516:	28 f4       	brcc	.+10     	; 0x522 <changeColumnB+0xb4>
     518:	81 30       	cpi	r24, 0x01	; 1
     51a:	41 f0       	breq	.+16     	; 0x52c <changeColumnB+0xbe>
     51c:	82 30       	cpi	r24, 0x02	; 2
     51e:	71 f0       	breq	.+28     	; 0x53c <changeColumnB+0xce>
     520:	2d c0       	rjmp	.+90     	; 0x57c <changeColumnB+0x10e>
     522:	84 30       	cpi	r24, 0x04	; 4
     524:	d9 f0       	breq	.+54     	; 0x55c <changeColumnB+0xee>
     526:	85 30       	cpi	r24, 0x05	; 5
     528:	09 f1       	breq	.+66     	; 0x56c <changeColumnB+0xfe>
     52a:	28 c0       	rjmp	.+80     	; 0x57c <changeColumnB+0x10e>
     52c:	e0 91 de 02 	lds	r30, 0x02DE	; 0x8002de <posA>
     530:	f0 e0       	ldi	r31, 0x00	; 0
     532:	e4 5e       	subi	r30, 0xE4	; 228
     534:	fe 4f       	sbci	r31, 0xFE	; 254
     536:	80 81       	ld	r24, Z
     538:	85 de       	rcall	.-758    	; 0x244 <LCD_WriteData>
     53a:	27 c0       	rjmp	.+78     	; 0x58a <changeColumnB+0x11c>
     53c:	e0 91 dd 02 	lds	r30, 0x02DD	; 0x8002dd <posB>
     540:	f0 e0       	ldi	r31, 0x00	; 0
     542:	eb 5e       	subi	r30, 0xEB	; 235
     544:	fe 4f       	sbci	r31, 0xFE	; 254
     546:	80 81       	ld	r24, Z
     548:	7d de       	rcall	.-774    	; 0x244 <LCD_WriteData>
     54a:	1f c0       	rjmp	.+62     	; 0x58a <changeColumnB+0x11c>
     54c:	e0 91 dc 02 	lds	r30, 0x02DC	; 0x8002dc <posC>
     550:	f0 e0       	ldi	r31, 0x00	; 0
     552:	e2 5f       	subi	r30, 0xF2	; 242
     554:	fe 4f       	sbci	r31, 0xFE	; 254
     556:	80 81       	ld	r24, Z
     558:	75 de       	rcall	.-790    	; 0x244 <LCD_WriteData>
     55a:	17 c0       	rjmp	.+46     	; 0x58a <changeColumnB+0x11c>
     55c:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <posD>
     560:	f0 e0       	ldi	r31, 0x00	; 0
     562:	e9 5f       	subi	r30, 0xF9	; 249
     564:	fe 4f       	sbci	r31, 0xFE	; 254
     566:	80 81       	ld	r24, Z
     568:	6d de       	rcall	.-806    	; 0x244 <LCD_WriteData>
     56a:	0f c0       	rjmp	.+30     	; 0x58a <changeColumnB+0x11c>
     56c:	e0 91 da 02 	lds	r30, 0x02DA	; 0x8002da <__data_end>
     570:	f0 e0       	ldi	r31, 0x00	; 0
     572:	e0 50       	subi	r30, 0x00	; 0
     574:	ff 4f       	sbci	r31, 0xFF	; 255
     576:	80 81       	ld	r24, Z
     578:	65 de       	rcall	.-822    	; 0x244 <LCD_WriteData>
     57a:	07 c0       	rjmp	.+14     	; 0x58a <changeColumnB+0x11c>
     57c:	e0 91 de 02 	lds	r30, 0x02DE	; 0x8002de <posA>
     580:	f0 e0       	ldi	r31, 0x00	; 0
     582:	e4 5e       	subi	r30, 0xE4	; 228
     584:	fe 4f       	sbci	r31, 0xFE	; 254
     586:	80 81       	ld	r24, Z
     588:	5d de       	rcall	.-838    	; 0x244 <LCD_WriteData>
     58a:	86 e0       	ldi	r24, 0x06	; 6
     58c:	44 ce       	rjmp	.-888    	; 0x216 <LCD_Cursor>
     58e:	08 95       	ret

00000590 <changePosRight>:
     590:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <cursorPos>
     594:	85 30       	cpi	r24, 0x05	; 5
     596:	21 f4       	brne	.+8      	; 0x5a0 <changePosRight+0x10>
     598:	81 e0       	ldi	r24, 0x01	; 1
     59a:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <cursorPos>
     59e:	08 95       	ret
     5a0:	8f 5f       	subi	r24, 0xFF	; 255
     5a2:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <cursorPos>
     5a6:	08 95       	ret

000005a8 <changePosLeft>:
     5a8:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <cursorPos>
     5ac:	81 30       	cpi	r24, 0x01	; 1
     5ae:	21 f4       	brne	.+8      	; 0x5b8 <changePosLeft+0x10>
     5b0:	85 e0       	ldi	r24, 0x05	; 5
     5b2:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <cursorPos>
     5b6:	08 95       	ret
     5b8:	81 50       	subi	r24, 0x01	; 1
     5ba:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <cursorPos>
     5be:	08 95       	ret

000005c0 <generatePuzzleOneCharacters>:
     5c0:	cf 93       	push	r28
     5c2:	df 93       	push	r29
     5c4:	cd b7       	in	r28, 0x3d	; 61
     5c6:	de b7       	in	r29, 0x3e	; 62
     5c8:	a8 97       	sbiw	r28, 0x28	; 40
     5ca:	0f b6       	in	r0, 0x3f	; 63
     5cc:	f8 94       	cli
     5ce:	de bf       	out	0x3e, r29	; 62
     5d0:	0f be       	out	0x3f, r0	; 63
     5d2:	cd bf       	out	0x3d, r28	; 61
     5d4:	88 e0       	ldi	r24, 0x08	; 8
     5d6:	e8 e2       	ldi	r30, 0x28	; 40
     5d8:	f1 e0       	ldi	r31, 0x01	; 1
     5da:	de 01       	movw	r26, r28
     5dc:	11 96       	adiw	r26, 0x01	; 1
     5de:	01 90       	ld	r0, Z+
     5e0:	0d 92       	st	X+, r0
     5e2:	8a 95       	dec	r24
     5e4:	e1 f7       	brne	.-8      	; 0x5de <generatePuzzleOneCharacters+0x1e>
     5e6:	88 e0       	ldi	r24, 0x08	; 8
     5e8:	e0 e3       	ldi	r30, 0x30	; 48
     5ea:	f1 e0       	ldi	r31, 0x01	; 1
     5ec:	de 01       	movw	r26, r28
     5ee:	19 96       	adiw	r26, 0x09	; 9
     5f0:	01 90       	ld	r0, Z+
     5f2:	0d 92       	st	X+, r0
     5f4:	8a 95       	dec	r24
     5f6:	e1 f7       	brne	.-8      	; 0x5f0 <generatePuzzleOneCharacters+0x30>
     5f8:	88 e0       	ldi	r24, 0x08	; 8
     5fa:	e8 e3       	ldi	r30, 0x38	; 56
     5fc:	f1 e0       	ldi	r31, 0x01	; 1
     5fe:	de 01       	movw	r26, r28
     600:	51 96       	adiw	r26, 0x11	; 17
     602:	01 90       	ld	r0, Z+
     604:	0d 92       	st	X+, r0
     606:	8a 95       	dec	r24
     608:	e1 f7       	brne	.-8      	; 0x602 <generatePuzzleOneCharacters+0x42>
     60a:	88 e0       	ldi	r24, 0x08	; 8
     60c:	e0 e4       	ldi	r30, 0x40	; 64
     60e:	f1 e0       	ldi	r31, 0x01	; 1
     610:	de 01       	movw	r26, r28
     612:	59 96       	adiw	r26, 0x19	; 25
     614:	01 90       	ld	r0, Z+
     616:	0d 92       	st	X+, r0
     618:	8a 95       	dec	r24
     61a:	e1 f7       	brne	.-8      	; 0x614 <generatePuzzleOneCharacters+0x54>
     61c:	88 e0       	ldi	r24, 0x08	; 8
     61e:	e8 e4       	ldi	r30, 0x48	; 72
     620:	f1 e0       	ldi	r31, 0x01	; 1
     622:	de 01       	movw	r26, r28
     624:	91 96       	adiw	r26, 0x21	; 33
     626:	01 90       	ld	r0, Z+
     628:	0d 92       	st	X+, r0
     62a:	8a 95       	dec	r24
     62c:	e1 f7       	brne	.-8      	; 0x626 <generatePuzzleOneCharacters+0x66>
     62e:	be 01       	movw	r22, r28
     630:	6f 5f       	subi	r22, 0xFF	; 255
     632:	7f 4f       	sbci	r23, 0xFF	; 255
     634:	81 e0       	ldi	r24, 0x01	; 1
     636:	28 de       	rcall	.-944    	; 0x288 <LCD_BuildChar>
     638:	be 01       	movw	r22, r28
     63a:	67 5f       	subi	r22, 0xF7	; 247
     63c:	7f 4f       	sbci	r23, 0xFF	; 255
     63e:	82 e0       	ldi	r24, 0x02	; 2
     640:	23 de       	rcall	.-954    	; 0x288 <LCD_BuildChar>
     642:	be 01       	movw	r22, r28
     644:	6f 5e       	subi	r22, 0xEF	; 239
     646:	7f 4f       	sbci	r23, 0xFF	; 255
     648:	83 e0       	ldi	r24, 0x03	; 3
     64a:	1e de       	rcall	.-964    	; 0x288 <LCD_BuildChar>
     64c:	be 01       	movw	r22, r28
     64e:	67 5e       	subi	r22, 0xE7	; 231
     650:	7f 4f       	sbci	r23, 0xFF	; 255
     652:	84 e0       	ldi	r24, 0x04	; 4
     654:	19 de       	rcall	.-974    	; 0x288 <LCD_BuildChar>
     656:	be 01       	movw	r22, r28
     658:	6f 5d       	subi	r22, 0xDF	; 223
     65a:	7f 4f       	sbci	r23, 0xFF	; 255
     65c:	85 e0       	ldi	r24, 0x05	; 5
     65e:	14 de       	rcall	.-984    	; 0x288 <LCD_BuildChar>
     660:	a8 96       	adiw	r28, 0x28	; 40
     662:	0f b6       	in	r0, 0x3f	; 63
     664:	f8 94       	cli
     666:	de bf       	out	0x3e, r29	; 62
     668:	0f be       	out	0x3f, r0	; 63
     66a:	cd bf       	out	0x3d, r28	; 61
     66c:	df 91       	pop	r29
     66e:	cf 91       	pop	r28
     670:	08 95       	ret

00000672 <generatePuzzleTwoCharacters>:
     672:	cf 93       	push	r28
     674:	df 93       	push	r29
     676:	cd b7       	in	r28, 0x3d	; 61
     678:	de b7       	in	r29, 0x3e	; 62
     67a:	c0 54       	subi	r28, 0x40	; 64
     67c:	d1 09       	sbc	r29, r1
     67e:	0f b6       	in	r0, 0x3f	; 63
     680:	f8 94       	cli
     682:	de bf       	out	0x3e, r29	; 62
     684:	0f be       	out	0x3f, r0	; 63
     686:	cd bf       	out	0x3d, r28	; 61
     688:	88 e0       	ldi	r24, 0x08	; 8
     68a:	e0 e5       	ldi	r30, 0x50	; 80
     68c:	f1 e0       	ldi	r31, 0x01	; 1
     68e:	de 01       	movw	r26, r28
     690:	11 96       	adiw	r26, 0x01	; 1
     692:	01 90       	ld	r0, Z+
     694:	0d 92       	st	X+, r0
     696:	8a 95       	dec	r24
     698:	e1 f7       	brne	.-8      	; 0x692 <generatePuzzleTwoCharacters+0x20>
     69a:	88 e0       	ldi	r24, 0x08	; 8
     69c:	e8 e5       	ldi	r30, 0x58	; 88
     69e:	f1 e0       	ldi	r31, 0x01	; 1
     6a0:	de 01       	movw	r26, r28
     6a2:	19 96       	adiw	r26, 0x09	; 9
     6a4:	01 90       	ld	r0, Z+
     6a6:	0d 92       	st	X+, r0
     6a8:	8a 95       	dec	r24
     6aa:	e1 f7       	brne	.-8      	; 0x6a4 <generatePuzzleTwoCharacters+0x32>
     6ac:	88 e0       	ldi	r24, 0x08	; 8
     6ae:	e0 e4       	ldi	r30, 0x40	; 64
     6b0:	f1 e0       	ldi	r31, 0x01	; 1
     6b2:	de 01       	movw	r26, r28
     6b4:	51 96       	adiw	r26, 0x11	; 17
     6b6:	01 90       	ld	r0, Z+
     6b8:	0d 92       	st	X+, r0
     6ba:	8a 95       	dec	r24
     6bc:	e1 f7       	brne	.-8      	; 0x6b6 <generatePuzzleTwoCharacters+0x44>
     6be:	88 e0       	ldi	r24, 0x08	; 8
     6c0:	e8 e4       	ldi	r30, 0x48	; 72
     6c2:	f1 e0       	ldi	r31, 0x01	; 1
     6c4:	de 01       	movw	r26, r28
     6c6:	59 96       	adiw	r26, 0x19	; 25
     6c8:	01 90       	ld	r0, Z+
     6ca:	0d 92       	st	X+, r0
     6cc:	8a 95       	dec	r24
     6ce:	e1 f7       	brne	.-8      	; 0x6c8 <generatePuzzleTwoCharacters+0x56>
     6d0:	88 e0       	ldi	r24, 0x08	; 8
     6d2:	e0 e6       	ldi	r30, 0x60	; 96
     6d4:	f1 e0       	ldi	r31, 0x01	; 1
     6d6:	de 01       	movw	r26, r28
     6d8:	91 96       	adiw	r26, 0x21	; 33
     6da:	01 90       	ld	r0, Z+
     6dc:	0d 92       	st	X+, r0
     6de:	8a 95       	dec	r24
     6e0:	e1 f7       	brne	.-8      	; 0x6da <generatePuzzleTwoCharacters+0x68>
     6e2:	88 e0       	ldi	r24, 0x08	; 8
     6e4:	e8 e6       	ldi	r30, 0x68	; 104
     6e6:	f1 e0       	ldi	r31, 0x01	; 1
     6e8:	de 01       	movw	r26, r28
     6ea:	99 96       	adiw	r26, 0x29	; 41
     6ec:	01 90       	ld	r0, Z+
     6ee:	0d 92       	st	X+, r0
     6f0:	8a 95       	dec	r24
     6f2:	e1 f7       	brne	.-8      	; 0x6ec <generatePuzzleTwoCharacters+0x7a>
     6f4:	88 e0       	ldi	r24, 0x08	; 8
     6f6:	e0 e7       	ldi	r30, 0x70	; 112
     6f8:	f1 e0       	ldi	r31, 0x01	; 1
     6fa:	de 01       	movw	r26, r28
     6fc:	d1 96       	adiw	r26, 0x31	; 49
     6fe:	01 90       	ld	r0, Z+
     700:	0d 92       	st	X+, r0
     702:	8a 95       	dec	r24
     704:	e1 f7       	brne	.-8      	; 0x6fe <generatePuzzleTwoCharacters+0x8c>
     706:	88 e0       	ldi	r24, 0x08	; 8
     708:	e8 e7       	ldi	r30, 0x78	; 120
     70a:	f1 e0       	ldi	r31, 0x01	; 1
     70c:	de 01       	movw	r26, r28
     70e:	d9 96       	adiw	r26, 0x39	; 57
     710:	01 90       	ld	r0, Z+
     712:	0d 92       	st	X+, r0
     714:	8a 95       	dec	r24
     716:	e1 f7       	brne	.-8      	; 0x710 <generatePuzzleTwoCharacters+0x9e>
     718:	be 01       	movw	r22, r28
     71a:	6f 5f       	subi	r22, 0xFF	; 255
     71c:	7f 4f       	sbci	r23, 0xFF	; 255
     71e:	80 e0       	ldi	r24, 0x00	; 0
     720:	b3 dd       	rcall	.-1178   	; 0x288 <LCD_BuildChar>
     722:	be 01       	movw	r22, r28
     724:	67 5f       	subi	r22, 0xF7	; 247
     726:	7f 4f       	sbci	r23, 0xFF	; 255
     728:	81 e0       	ldi	r24, 0x01	; 1
     72a:	ae dd       	rcall	.-1188   	; 0x288 <LCD_BuildChar>
     72c:	be 01       	movw	r22, r28
     72e:	6f 5e       	subi	r22, 0xEF	; 239
     730:	7f 4f       	sbci	r23, 0xFF	; 255
     732:	82 e0       	ldi	r24, 0x02	; 2
     734:	a9 dd       	rcall	.-1198   	; 0x288 <LCD_BuildChar>
     736:	be 01       	movw	r22, r28
     738:	67 5e       	subi	r22, 0xE7	; 231
     73a:	7f 4f       	sbci	r23, 0xFF	; 255
     73c:	83 e0       	ldi	r24, 0x03	; 3
     73e:	a4 dd       	rcall	.-1208   	; 0x288 <LCD_BuildChar>
     740:	be 01       	movw	r22, r28
     742:	6f 5d       	subi	r22, 0xDF	; 223
     744:	7f 4f       	sbci	r23, 0xFF	; 255
     746:	84 e0       	ldi	r24, 0x04	; 4
     748:	9f dd       	rcall	.-1218   	; 0x288 <LCD_BuildChar>
     74a:	be 01       	movw	r22, r28
     74c:	67 5d       	subi	r22, 0xD7	; 215
     74e:	7f 4f       	sbci	r23, 0xFF	; 255
     750:	85 e0       	ldi	r24, 0x05	; 5
     752:	9a dd       	rcall	.-1228   	; 0x288 <LCD_BuildChar>
     754:	be 01       	movw	r22, r28
     756:	6f 5c       	subi	r22, 0xCF	; 207
     758:	7f 4f       	sbci	r23, 0xFF	; 255
     75a:	86 e0       	ldi	r24, 0x06	; 6
     75c:	95 dd       	rcall	.-1238   	; 0x288 <LCD_BuildChar>
     75e:	be 01       	movw	r22, r28
     760:	67 5c       	subi	r22, 0xC7	; 199
     762:	7f 4f       	sbci	r23, 0xFF	; 255
     764:	87 e0       	ldi	r24, 0x07	; 7
     766:	90 dd       	rcall	.-1248   	; 0x288 <LCD_BuildChar>
     768:	c0 5c       	subi	r28, 0xC0	; 192
     76a:	df 4f       	sbci	r29, 0xFF	; 255
     76c:	0f b6       	in	r0, 0x3f	; 63
     76e:	f8 94       	cli
     770:	de bf       	out	0x3e, r29	; 62
     772:	0f be       	out	0x3f, r0	; 63
     774:	cd bf       	out	0x3d, r28	; 61
     776:	df 91       	pop	r29
     778:	cf 91       	pop	r28
     77a:	08 95       	ret

0000077c <generatePuzzleThreeCharacters>:
     77c:	cf 93       	push	r28
     77e:	df 93       	push	r29
     780:	cd b7       	in	r28, 0x3d	; 61
     782:	de b7       	in	r29, 0x3e	; 62
     784:	c0 54       	subi	r28, 0x40	; 64
     786:	d1 09       	sbc	r29, r1
     788:	0f b6       	in	r0, 0x3f	; 63
     78a:	f8 94       	cli
     78c:	de bf       	out	0x3e, r29	; 62
     78e:	0f be       	out	0x3f, r0	; 63
     790:	cd bf       	out	0x3d, r28	; 61
     792:	88 e0       	ldi	r24, 0x08	; 8
     794:	e0 e5       	ldi	r30, 0x50	; 80
     796:	f1 e0       	ldi	r31, 0x01	; 1
     798:	de 01       	movw	r26, r28
     79a:	11 96       	adiw	r26, 0x01	; 1
     79c:	01 90       	ld	r0, Z+
     79e:	0d 92       	st	X+, r0
     7a0:	8a 95       	dec	r24
     7a2:	e1 f7       	brne	.-8      	; 0x79c <generatePuzzleThreeCharacters+0x20>
     7a4:	88 e0       	ldi	r24, 0x08	; 8
     7a6:	e8 e3       	ldi	r30, 0x38	; 56
     7a8:	f1 e0       	ldi	r31, 0x01	; 1
     7aa:	de 01       	movw	r26, r28
     7ac:	19 96       	adiw	r26, 0x09	; 9
     7ae:	01 90       	ld	r0, Z+
     7b0:	0d 92       	st	X+, r0
     7b2:	8a 95       	dec	r24
     7b4:	e1 f7       	brne	.-8      	; 0x7ae <generatePuzzleThreeCharacters+0x32>
     7b6:	88 e0       	ldi	r24, 0x08	; 8
     7b8:	e0 e8       	ldi	r30, 0x80	; 128
     7ba:	f1 e0       	ldi	r31, 0x01	; 1
     7bc:	de 01       	movw	r26, r28
     7be:	51 96       	adiw	r26, 0x11	; 17
     7c0:	01 90       	ld	r0, Z+
     7c2:	0d 92       	st	X+, r0
     7c4:	8a 95       	dec	r24
     7c6:	e1 f7       	brne	.-8      	; 0x7c0 <generatePuzzleThreeCharacters+0x44>
     7c8:	88 e0       	ldi	r24, 0x08	; 8
     7ca:	e8 e4       	ldi	r30, 0x48	; 72
     7cc:	f1 e0       	ldi	r31, 0x01	; 1
     7ce:	de 01       	movw	r26, r28
     7d0:	59 96       	adiw	r26, 0x19	; 25
     7d2:	01 90       	ld	r0, Z+
     7d4:	0d 92       	st	X+, r0
     7d6:	8a 95       	dec	r24
     7d8:	e1 f7       	brne	.-8      	; 0x7d2 <generatePuzzleThreeCharacters+0x56>
     7da:	88 e0       	ldi	r24, 0x08	; 8
     7dc:	e8 e8       	ldi	r30, 0x88	; 136
     7de:	f1 e0       	ldi	r31, 0x01	; 1
     7e0:	de 01       	movw	r26, r28
     7e2:	91 96       	adiw	r26, 0x21	; 33
     7e4:	01 90       	ld	r0, Z+
     7e6:	0d 92       	st	X+, r0
     7e8:	8a 95       	dec	r24
     7ea:	e1 f7       	brne	.-8      	; 0x7e4 <generatePuzzleThreeCharacters+0x68>
     7ec:	88 e0       	ldi	r24, 0x08	; 8
     7ee:	e0 e9       	ldi	r30, 0x90	; 144
     7f0:	f1 e0       	ldi	r31, 0x01	; 1
     7f2:	de 01       	movw	r26, r28
     7f4:	99 96       	adiw	r26, 0x29	; 41
     7f6:	01 90       	ld	r0, Z+
     7f8:	0d 92       	st	X+, r0
     7fa:	8a 95       	dec	r24
     7fc:	e1 f7       	brne	.-8      	; 0x7f6 <generatePuzzleThreeCharacters+0x7a>
     7fe:	88 e0       	ldi	r24, 0x08	; 8
     800:	e8 e9       	ldi	r30, 0x98	; 152
     802:	f1 e0       	ldi	r31, 0x01	; 1
     804:	de 01       	movw	r26, r28
     806:	d1 96       	adiw	r26, 0x31	; 49
     808:	01 90       	ld	r0, Z+
     80a:	0d 92       	st	X+, r0
     80c:	8a 95       	dec	r24
     80e:	e1 f7       	brne	.-8      	; 0x808 <generatePuzzleThreeCharacters+0x8c>
     810:	88 e0       	ldi	r24, 0x08	; 8
     812:	e0 ea       	ldi	r30, 0xA0	; 160
     814:	f1 e0       	ldi	r31, 0x01	; 1
     816:	de 01       	movw	r26, r28
     818:	d9 96       	adiw	r26, 0x39	; 57
     81a:	01 90       	ld	r0, Z+
     81c:	0d 92       	st	X+, r0
     81e:	8a 95       	dec	r24
     820:	e1 f7       	brne	.-8      	; 0x81a <generatePuzzleThreeCharacters+0x9e>
     822:	be 01       	movw	r22, r28
     824:	6f 5f       	subi	r22, 0xFF	; 255
     826:	7f 4f       	sbci	r23, 0xFF	; 255
     828:	80 e0       	ldi	r24, 0x00	; 0
     82a:	2e dd       	rcall	.-1444   	; 0x288 <LCD_BuildChar>
     82c:	be 01       	movw	r22, r28
     82e:	67 5f       	subi	r22, 0xF7	; 247
     830:	7f 4f       	sbci	r23, 0xFF	; 255
     832:	81 e0       	ldi	r24, 0x01	; 1
     834:	29 dd       	rcall	.-1454   	; 0x288 <LCD_BuildChar>
     836:	be 01       	movw	r22, r28
     838:	6f 5e       	subi	r22, 0xEF	; 239
     83a:	7f 4f       	sbci	r23, 0xFF	; 255
     83c:	82 e0       	ldi	r24, 0x02	; 2
     83e:	24 dd       	rcall	.-1464   	; 0x288 <LCD_BuildChar>
     840:	be 01       	movw	r22, r28
     842:	67 5e       	subi	r22, 0xE7	; 231
     844:	7f 4f       	sbci	r23, 0xFF	; 255
     846:	83 e0       	ldi	r24, 0x03	; 3
     848:	1f dd       	rcall	.-1474   	; 0x288 <LCD_BuildChar>
     84a:	be 01       	movw	r22, r28
     84c:	6f 5d       	subi	r22, 0xDF	; 223
     84e:	7f 4f       	sbci	r23, 0xFF	; 255
     850:	84 e0       	ldi	r24, 0x04	; 4
     852:	1a dd       	rcall	.-1484   	; 0x288 <LCD_BuildChar>
     854:	be 01       	movw	r22, r28
     856:	67 5d       	subi	r22, 0xD7	; 215
     858:	7f 4f       	sbci	r23, 0xFF	; 255
     85a:	85 e0       	ldi	r24, 0x05	; 5
     85c:	15 dd       	rcall	.-1494   	; 0x288 <LCD_BuildChar>
     85e:	be 01       	movw	r22, r28
     860:	6f 5c       	subi	r22, 0xCF	; 207
     862:	7f 4f       	sbci	r23, 0xFF	; 255
     864:	86 e0       	ldi	r24, 0x06	; 6
     866:	10 dd       	rcall	.-1504   	; 0x288 <LCD_BuildChar>
     868:	be 01       	movw	r22, r28
     86a:	67 5c       	subi	r22, 0xC7	; 199
     86c:	7f 4f       	sbci	r23, 0xFF	; 255
     86e:	87 e0       	ldi	r24, 0x07	; 7
     870:	0b dd       	rcall	.-1514   	; 0x288 <LCD_BuildChar>
     872:	c0 5c       	subi	r28, 0xC0	; 192
     874:	df 4f       	sbci	r29, 0xFF	; 255
     876:	0f b6       	in	r0, 0x3f	; 63
     878:	f8 94       	cli
     87a:	de bf       	out	0x3e, r29	; 62
     87c:	0f be       	out	0x3f, r0	; 63
     87e:	cd bf       	out	0x3d, r28	; 61
     880:	df 91       	pop	r29
     882:	cf 91       	pop	r28
     884:	08 95       	ret

00000886 <generatePuzzleFourCharacters>:
     886:	cf 93       	push	r28
     888:	df 93       	push	r29
     88a:	cd b7       	in	r28, 0x3d	; 61
     88c:	de b7       	in	r29, 0x3e	; 62
     88e:	a8 97       	sbiw	r28, 0x28	; 40
     890:	0f b6       	in	r0, 0x3f	; 63
     892:	f8 94       	cli
     894:	de bf       	out	0x3e, r29	; 62
     896:	0f be       	out	0x3f, r0	; 63
     898:	cd bf       	out	0x3d, r28	; 61
     89a:	88 e0       	ldi	r24, 0x08	; 8
     89c:	e0 e5       	ldi	r30, 0x50	; 80
     89e:	f1 e0       	ldi	r31, 0x01	; 1
     8a0:	de 01       	movw	r26, r28
     8a2:	11 96       	adiw	r26, 0x01	; 1
     8a4:	01 90       	ld	r0, Z+
     8a6:	0d 92       	st	X+, r0
     8a8:	8a 95       	dec	r24
     8aa:	e1 f7       	brne	.-8      	; 0x8a4 <generatePuzzleFourCharacters+0x1e>
     8ac:	88 e0       	ldi	r24, 0x08	; 8
     8ae:	e8 e3       	ldi	r30, 0x38	; 56
     8b0:	f1 e0       	ldi	r31, 0x01	; 1
     8b2:	de 01       	movw	r26, r28
     8b4:	19 96       	adiw	r26, 0x09	; 9
     8b6:	01 90       	ld	r0, Z+
     8b8:	0d 92       	st	X+, r0
     8ba:	8a 95       	dec	r24
     8bc:	e1 f7       	brne	.-8      	; 0x8b6 <generatePuzzleFourCharacters+0x30>
     8be:	88 e0       	ldi	r24, 0x08	; 8
     8c0:	e0 e4       	ldi	r30, 0x40	; 64
     8c2:	f1 e0       	ldi	r31, 0x01	; 1
     8c4:	de 01       	movw	r26, r28
     8c6:	51 96       	adiw	r26, 0x11	; 17
     8c8:	01 90       	ld	r0, Z+
     8ca:	0d 92       	st	X+, r0
     8cc:	8a 95       	dec	r24
     8ce:	e1 f7       	brne	.-8      	; 0x8c8 <generatePuzzleFourCharacters+0x42>
     8d0:	88 e0       	ldi	r24, 0x08	; 8
     8d2:	e8 ea       	ldi	r30, 0xA8	; 168
     8d4:	f1 e0       	ldi	r31, 0x01	; 1
     8d6:	de 01       	movw	r26, r28
     8d8:	59 96       	adiw	r26, 0x19	; 25
     8da:	01 90       	ld	r0, Z+
     8dc:	0d 92       	st	X+, r0
     8de:	8a 95       	dec	r24
     8e0:	e1 f7       	brne	.-8      	; 0x8da <generatePuzzleFourCharacters+0x54>
     8e2:	88 e0       	ldi	r24, 0x08	; 8
     8e4:	e0 eb       	ldi	r30, 0xB0	; 176
     8e6:	f1 e0       	ldi	r31, 0x01	; 1
     8e8:	de 01       	movw	r26, r28
     8ea:	91 96       	adiw	r26, 0x21	; 33
     8ec:	01 90       	ld	r0, Z+
     8ee:	0d 92       	st	X+, r0
     8f0:	8a 95       	dec	r24
     8f2:	e1 f7       	brne	.-8      	; 0x8ec <generatePuzzleFourCharacters+0x66>
     8f4:	be 01       	movw	r22, r28
     8f6:	6f 5f       	subi	r22, 0xFF	; 255
     8f8:	7f 4f       	sbci	r23, 0xFF	; 255
     8fa:	80 e0       	ldi	r24, 0x00	; 0
     8fc:	c5 dc       	rcall	.-1654   	; 0x288 <LCD_BuildChar>
     8fe:	be 01       	movw	r22, r28
     900:	67 5f       	subi	r22, 0xF7	; 247
     902:	7f 4f       	sbci	r23, 0xFF	; 255
     904:	81 e0       	ldi	r24, 0x01	; 1
     906:	c0 dc       	rcall	.-1664   	; 0x288 <LCD_BuildChar>
     908:	be 01       	movw	r22, r28
     90a:	6f 5e       	subi	r22, 0xEF	; 239
     90c:	7f 4f       	sbci	r23, 0xFF	; 255
     90e:	82 e0       	ldi	r24, 0x02	; 2
     910:	bb dc       	rcall	.-1674   	; 0x288 <LCD_BuildChar>
     912:	be 01       	movw	r22, r28
     914:	67 5e       	subi	r22, 0xE7	; 231
     916:	7f 4f       	sbci	r23, 0xFF	; 255
     918:	83 e0       	ldi	r24, 0x03	; 3
     91a:	b6 dc       	rcall	.-1684   	; 0x288 <LCD_BuildChar>
     91c:	be 01       	movw	r22, r28
     91e:	6f 5d       	subi	r22, 0xDF	; 223
     920:	7f 4f       	sbci	r23, 0xFF	; 255
     922:	84 e0       	ldi	r24, 0x04	; 4
     924:	b1 dc       	rcall	.-1694   	; 0x288 <LCD_BuildChar>
     926:	a8 96       	adiw	r28, 0x28	; 40
     928:	0f b6       	in	r0, 0x3f	; 63
     92a:	f8 94       	cli
     92c:	de bf       	out	0x3e, r29	; 62
     92e:	0f be       	out	0x3f, r0	; 63
     930:	cd bf       	out	0x3d, r28	; 61
     932:	df 91       	pop	r29
     934:	cf 91       	pop	r28
     936:	08 95       	ret

00000938 <generateMenuCharacters>:
     938:	cf 93       	push	r28
     93a:	df 93       	push	r29
     93c:	cd b7       	in	r28, 0x3d	; 61
     93e:	de b7       	in	r29, 0x3e	; 62
     940:	a8 97       	sbiw	r28, 0x28	; 40
     942:	0f b6       	in	r0, 0x3f	; 63
     944:	f8 94       	cli
     946:	de bf       	out	0x3e, r29	; 62
     948:	0f be       	out	0x3f, r0	; 63
     94a:	cd bf       	out	0x3d, r28	; 61
     94c:	88 e0       	ldi	r24, 0x08	; 8
     94e:	e8 eb       	ldi	r30, 0xB8	; 184
     950:	f1 e0       	ldi	r31, 0x01	; 1
     952:	de 01       	movw	r26, r28
     954:	11 96       	adiw	r26, 0x01	; 1
     956:	01 90       	ld	r0, Z+
     958:	0d 92       	st	X+, r0
     95a:	8a 95       	dec	r24
     95c:	e1 f7       	brne	.-8      	; 0x956 <generateMenuCharacters+0x1e>
     95e:	88 e0       	ldi	r24, 0x08	; 8
     960:	e0 ec       	ldi	r30, 0xC0	; 192
     962:	f1 e0       	ldi	r31, 0x01	; 1
     964:	de 01       	movw	r26, r28
     966:	19 96       	adiw	r26, 0x09	; 9
     968:	01 90       	ld	r0, Z+
     96a:	0d 92       	st	X+, r0
     96c:	8a 95       	dec	r24
     96e:	e1 f7       	brne	.-8      	; 0x968 <generateMenuCharacters+0x30>
     970:	88 e0       	ldi	r24, 0x08	; 8
     972:	e8 ec       	ldi	r30, 0xC8	; 200
     974:	f1 e0       	ldi	r31, 0x01	; 1
     976:	de 01       	movw	r26, r28
     978:	51 96       	adiw	r26, 0x11	; 17
     97a:	01 90       	ld	r0, Z+
     97c:	0d 92       	st	X+, r0
     97e:	8a 95       	dec	r24
     980:	e1 f7       	brne	.-8      	; 0x97a <generateMenuCharacters+0x42>
     982:	88 e0       	ldi	r24, 0x08	; 8
     984:	e0 ed       	ldi	r30, 0xD0	; 208
     986:	f1 e0       	ldi	r31, 0x01	; 1
     988:	de 01       	movw	r26, r28
     98a:	59 96       	adiw	r26, 0x19	; 25
     98c:	01 90       	ld	r0, Z+
     98e:	0d 92       	st	X+, r0
     990:	8a 95       	dec	r24
     992:	e1 f7       	brne	.-8      	; 0x98c <generateMenuCharacters+0x54>
     994:	88 e0       	ldi	r24, 0x08	; 8
     996:	e8 ed       	ldi	r30, 0xD8	; 216
     998:	f1 e0       	ldi	r31, 0x01	; 1
     99a:	de 01       	movw	r26, r28
     99c:	91 96       	adiw	r26, 0x21	; 33
     99e:	01 90       	ld	r0, Z+
     9a0:	0d 92       	st	X+, r0
     9a2:	8a 95       	dec	r24
     9a4:	e1 f7       	brne	.-8      	; 0x99e <generateMenuCharacters+0x66>
     9a6:	be 01       	movw	r22, r28
     9a8:	6f 5f       	subi	r22, 0xFF	; 255
     9aa:	7f 4f       	sbci	r23, 0xFF	; 255
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	6c dc       	rcall	.-1832   	; 0x288 <LCD_BuildChar>
     9b0:	be 01       	movw	r22, r28
     9b2:	67 5f       	subi	r22, 0xF7	; 247
     9b4:	7f 4f       	sbci	r23, 0xFF	; 255
     9b6:	82 e0       	ldi	r24, 0x02	; 2
     9b8:	67 dc       	rcall	.-1842   	; 0x288 <LCD_BuildChar>
     9ba:	be 01       	movw	r22, r28
     9bc:	6f 5e       	subi	r22, 0xEF	; 239
     9be:	7f 4f       	sbci	r23, 0xFF	; 255
     9c0:	83 e0       	ldi	r24, 0x03	; 3
     9c2:	62 dc       	rcall	.-1852   	; 0x288 <LCD_BuildChar>
     9c4:	be 01       	movw	r22, r28
     9c6:	67 5e       	subi	r22, 0xE7	; 231
     9c8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ca:	84 e0       	ldi	r24, 0x04	; 4
     9cc:	5d dc       	rcall	.-1862   	; 0x288 <LCD_BuildChar>
     9ce:	be 01       	movw	r22, r28
     9d0:	6f 5d       	subi	r22, 0xDF	; 223
     9d2:	7f 4f       	sbci	r23, 0xFF	; 255
     9d4:	85 e0       	ldi	r24, 0x05	; 5
     9d6:	58 dc       	rcall	.-1872   	; 0x288 <LCD_BuildChar>
     9d8:	a8 96       	adiw	r28, 0x28	; 40
     9da:	0f b6       	in	r0, 0x3f	; 63
     9dc:	f8 94       	cli
     9de:	de bf       	out	0x3e, r29	; 62
     9e0:	0f be       	out	0x3f, r0	; 63
     9e2:	cd bf       	out	0x3d, r28	; 61
     9e4:	df 91       	pop	r29
     9e6:	cf 91       	pop	r28
     9e8:	08 95       	ret

000009ea <displayStartScreen>:
     9ea:	a6 df       	rcall	.-180    	; 0x938 <generateMenuCharacters>
     9ec:	66 ef       	ldi	r22, 0xF6	; 246
     9ee:	71 e0       	ldi	r23, 0x01	; 1
     9f0:	81 e0       	ldi	r24, 0x01	; 1
     9f2:	31 dc       	rcall	.-1950   	; 0x256 <LCD_DisplayString>
     9f4:	8c e0       	ldi	r24, 0x0C	; 12
     9f6:	0f dc       	rcall	.-2018   	; 0x216 <LCD_Cursor>
     9f8:	83 e0       	ldi	r24, 0x03	; 3
     9fa:	24 dc       	rcall	.-1976   	; 0x244 <LCD_WriteData>
     9fc:	8d e0       	ldi	r24, 0x0D	; 13
     9fe:	0b dc       	rcall	.-2026   	; 0x216 <LCD_Cursor>
     a00:	84 e0       	ldi	r24, 0x04	; 4
     a02:	20 dc       	rcall	.-1984   	; 0x244 <LCD_WriteData>
     a04:	8e e0       	ldi	r24, 0x0E	; 14
     a06:	07 dc       	rcall	.-2034   	; 0x216 <LCD_Cursor>
     a08:	85 e0       	ldi	r24, 0x05	; 5
     a0a:	1c dc       	rcall	.-1992   	; 0x244 <LCD_WriteData>
     a0c:	8c e1       	ldi	r24, 0x1C	; 28
     a0e:	03 dc       	rcall	.-2042   	; 0x216 <LCD_Cursor>
     a10:	81 e0       	ldi	r24, 0x01	; 1
     a12:	18 dc       	rcall	.-2000   	; 0x244 <LCD_WriteData>
     a14:	8d e1       	ldi	r24, 0x1D	; 29
     a16:	ff db       	rcall	.-2050   	; 0x216 <LCD_Cursor>
     a18:	82 e0       	ldi	r24, 0x02	; 2
     a1a:	14 cc       	rjmp	.-2008   	; 0x244 <LCD_WriteData>
     a1c:	08 95       	ret

00000a1e <wordLockPuzzle>:
     a1e:	f8 db       	rcall	.-2064   	; 0x210 <LCD_ClearScreen>
     a20:	cf dd       	rcall	.-1122   	; 0x5c0 <generatePuzzleOneCharacters>
     a22:	6e e0       	ldi	r22, 0x0E	; 14
     a24:	72 e0       	ldi	r23, 0x02	; 2
     a26:	81 e0       	ldi	r24, 0x01	; 1
     a28:	16 dc       	rcall	.-2004   	; 0x256 <LCD_DisplayString>
     a2a:	8d e1       	ldi	r24, 0x1D	; 29
     a2c:	f4 db       	rcall	.-2072   	; 0x216 <LCD_Cursor>
     a2e:	82 e0       	ldi	r24, 0x02	; 2
     a30:	09 dc       	rcall	.-2030   	; 0x244 <LCD_WriteData>
     a32:	8e e1       	ldi	r24, 0x1E	; 30
     a34:	f0 db       	rcall	.-2080   	; 0x216 <LCD_Cursor>
     a36:	83 e0       	ldi	r24, 0x03	; 3
     a38:	05 dc       	rcall	.-2038   	; 0x244 <LCD_WriteData>
     a3a:	8f e1       	ldi	r24, 0x1F	; 31
     a3c:	ec db       	rcall	.-2088   	; 0x216 <LCD_Cursor>
     a3e:	84 e0       	ldi	r24, 0x04	; 4
     a40:	01 dc       	rcall	.-2046   	; 0x244 <LCD_WriteData>
     a42:	80 e2       	ldi	r24, 0x20	; 32
     a44:	e8 db       	rcall	.-2096   	; 0x216 <LCD_Cursor>
     a46:	85 e0       	ldi	r24, 0x05	; 5
     a48:	fd db       	rcall	.-2054   	; 0x244 <LCD_WriteData>
     a4a:	19 99       	sbic	0x03, 1	; 3
     a4c:	46 c0       	rjmp	.+140    	; 0xada <wordLockPuzzle+0xbc>
     a4e:	35 dc       	rcall	.-1942   	; 0x2ba <GetKeypadKey>
     a50:	82 34       	cpi	r24, 0x42	; 66
     a52:	79 f0       	breq	.+30     	; 0xa72 <wordLockPuzzle+0x54>
     a54:	18 f4       	brcc	.+6      	; 0xa5c <wordLockPuzzle+0x3e>
     a56:	81 34       	cpi	r24, 0x41	; 65
     a58:	31 f0       	breq	.+12     	; 0xa66 <wordLockPuzzle+0x48>
     a5a:	11 c0       	rjmp	.+34     	; 0xa7e <wordLockPuzzle+0x60>
     a5c:	83 34       	cpi	r24, 0x43	; 67
     a5e:	59 f0       	breq	.+22     	; 0xa76 <wordLockPuzzle+0x58>
     a60:	84 34       	cpi	r24, 0x44	; 68
     a62:	59 f0       	breq	.+22     	; 0xa7a <wordLockPuzzle+0x5c>
     a64:	0c c0       	rjmp	.+24     	; 0xa7e <wordLockPuzzle+0x60>
     a66:	77 dc       	rcall	.-1810   	; 0x356 <changeColumnA>
     a68:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
     a6c:	88 23       	and	r24, r24
     a6e:	51 f0       	breq	.+20     	; 0xa84 <wordLockPuzzle+0x66>
     a70:	13 c0       	rjmp	.+38     	; 0xa98 <wordLockPuzzle+0x7a>
     a72:	fd dc       	rcall	.-1542   	; 0x46e <changeColumnB>
     a74:	f9 cf       	rjmp	.-14     	; 0xa68 <wordLockPuzzle+0x4a>
     a76:	8c dd       	rcall	.-1256   	; 0x590 <changePosRight>
     a78:	f7 cf       	rjmp	.-18     	; 0xa68 <wordLockPuzzle+0x4a>
     a7a:	96 dd       	rcall	.-1236   	; 0x5a8 <changePosLeft>
     a7c:	f5 cf       	rjmp	.-22     	; 0xa68 <wordLockPuzzle+0x4a>
     a7e:	86 e0       	ldi	r24, 0x06	; 6
     a80:	ca db       	rcall	.-2156   	; 0x216 <LCD_Cursor>
     a82:	f2 cf       	rjmp	.-28     	; 0xa68 <wordLockPuzzle+0x4a>
     a84:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <cursorPos>
     a88:	80 5f       	subi	r24, 0xF0	; 240
     a8a:	c5 db       	rcall	.-2166   	; 0x216 <LCD_Cursor>
     a8c:	81 e0       	ldi	r24, 0x01	; 1
     a8e:	da db       	rcall	.-2124   	; 0x244 <LCD_WriteData>
     a90:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
     a94:	88 23       	and	r24, r24
     a96:	b1 f3       	breq	.-20     	; 0xa84 <wordLockPuzzle+0x66>
     a98:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <cursorPos>
     a9c:	80 5f       	subi	r24, 0xF0	; 240
     a9e:	bb db       	rcall	.-2186   	; 0x216 <LCD_Cursor>
     aa0:	80 e2       	ldi	r24, 0x20	; 32
     aa2:	d0 db       	rcall	.-2144   	; 0x244 <LCD_WriteData>
     aa4:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
     aa8:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <posA>
     aac:	84 30       	cpi	r24, 0x04	; 4
     aae:	69 f6       	brne	.-102    	; 0xa4a <wordLockPuzzle+0x2c>
     ab0:	80 91 dd 02 	lds	r24, 0x02DD	; 0x8002dd <posB>
     ab4:	84 30       	cpi	r24, 0x04	; 4
     ab6:	09 f0       	breq	.+2      	; 0xaba <wordLockPuzzle+0x9c>
     ab8:	c8 cf       	rjmp	.-112    	; 0xa4a <wordLockPuzzle+0x2c>
     aba:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <posC>
     abe:	81 11       	cpse	r24, r1
     ac0:	c4 cf       	rjmp	.-120    	; 0xa4a <wordLockPuzzle+0x2c>
     ac2:	80 91 db 02 	lds	r24, 0x02DB	; 0x8002db <posD>
     ac6:	86 30       	cpi	r24, 0x06	; 6
     ac8:	09 f0       	breq	.+2      	; 0xacc <wordLockPuzzle+0xae>
     aca:	bf cf       	rjmp	.-130    	; 0xa4a <wordLockPuzzle+0x2c>
     acc:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <__data_end>
     ad0:	82 30       	cpi	r24, 0x02	; 2
     ad2:	09 f0       	breq	.+2      	; 0xad6 <wordLockPuzzle+0xb8>
     ad4:	ba cf       	rjmp	.-140    	; 0xa4a <wordLockPuzzle+0x2c>
     ad6:	81 e0       	ldi	r24, 0x01	; 1
     ad8:	08 95       	ret
     ada:	80 e0       	ldi	r24, 0x00	; 0
     adc:	08 95       	ret

00000ade <simonSaysPuzzle>:
     ade:	cf 93       	push	r28
     ae0:	97 db       	rcall	.-2258   	; 0x210 <LCD_ClearScreen>
     ae2:	c7 dd       	rcall	.-1138   	; 0x672 <generatePuzzleTwoCharacters>
     ae4:	8d e1       	ldi	r24, 0x1D	; 29
     ae6:	97 db       	rcall	.-2258   	; 0x216 <LCD_Cursor>
     ae8:	80 e0       	ldi	r24, 0x00	; 0
     aea:	ac db       	rcall	.-2216   	; 0x244 <LCD_WriteData>
     aec:	8e e1       	ldi	r24, 0x1E	; 30
     aee:	93 db       	rcall	.-2266   	; 0x216 <LCD_Cursor>
     af0:	81 e0       	ldi	r24, 0x01	; 1
     af2:	a8 db       	rcall	.-2224   	; 0x244 <LCD_WriteData>
     af4:	8f e1       	ldi	r24, 0x1F	; 31
     af6:	8f db       	rcall	.-2274   	; 0x216 <LCD_Cursor>
     af8:	82 e0       	ldi	r24, 0x02	; 2
     afa:	a4 db       	rcall	.-2232   	; 0x244 <LCD_WriteData>
     afc:	80 e2       	ldi	r24, 0x20	; 32
     afe:	8b db       	rcall	.-2282   	; 0x216 <LCD_Cursor>
     b00:	83 e0       	ldi	r24, 0x03	; 3
     b02:	a0 db       	rcall	.-2240   	; 0x244 <LCD_WriteData>
     b04:	c0 e0       	ldi	r28, 0x00	; 0
     b06:	19 99       	sbic	0x03, 1	; 3
     b08:	8c c1       	rjmp	.+792    	; 0xe22 <simonSaysPuzzle+0x344>
     b0a:	8d e1       	ldi	r24, 0x1D	; 29
     b0c:	84 db       	rcall	.-2296   	; 0x216 <LCD_Cursor>
     b0e:	80 e0       	ldi	r24, 0x00	; 0
     b10:	99 db       	rcall	.-2254   	; 0x244 <LCD_WriteData>
     b12:	8e e1       	ldi	r24, 0x1E	; 30
     b14:	80 db       	rcall	.-2304   	; 0x216 <LCD_Cursor>
     b16:	81 e0       	ldi	r24, 0x01	; 1
     b18:	95 db       	rcall	.-2262   	; 0x244 <LCD_WriteData>
     b1a:	8f e1       	ldi	r24, 0x1F	; 31
     b1c:	7c db       	rcall	.-2312   	; 0x216 <LCD_Cursor>
     b1e:	82 e0       	ldi	r24, 0x02	; 2
     b20:	91 db       	rcall	.-2270   	; 0x244 <LCD_WriteData>
     b22:	80 e2       	ldi	r24, 0x20	; 32
     b24:	78 db       	rcall	.-2320   	; 0x216 <LCD_Cursor>
     b26:	83 e0       	ldi	r24, 0x03	; 3
     b28:	8d db       	rcall	.-2278   	; 0x244 <LCD_WriteData>
     b2a:	81 e0       	ldi	r24, 0x01	; 1
     b2c:	74 db       	rcall	.-2328   	; 0x216 <LCD_Cursor>
     b2e:	85 e0       	ldi	r24, 0x05	; 5
     b30:	89 db       	rcall	.-2286   	; 0x244 <LCD_WriteData>
     b32:	c3 db       	rcall	.-2170   	; 0x2ba <GetKeypadKey>
     b34:	82 33       	cpi	r24, 0x32	; 50
     b36:	71 f0       	breq	.+28     	; 0xb54 <simonSaysPuzzle+0x76>
     b38:	18 f4       	brcc	.+6      	; 0xb40 <simonSaysPuzzle+0x62>
     b3a:	81 33       	cpi	r24, 0x31	; 49
     b3c:	31 f0       	breq	.+12     	; 0xb4a <simonSaysPuzzle+0x6c>
     b3e:	1a c0       	rjmp	.+52     	; 0xb74 <simonSaysPuzzle+0x96>
     b40:	83 33       	cpi	r24, 0x33	; 51
     b42:	69 f0       	breq	.+26     	; 0xb5e <simonSaysPuzzle+0x80>
     b44:	84 33       	cpi	r24, 0x34	; 52
     b46:	81 f0       	breq	.+32     	; 0xb68 <simonSaysPuzzle+0x8a>
     b48:	15 c0       	rjmp	.+42     	; 0xb74 <simonSaysPuzzle+0x96>
     b4a:	81 e1       	ldi	r24, 0x11	; 17
     b4c:	64 db       	rcall	.-2360   	; 0x216 <LCD_Cursor>
     b4e:	84 e0       	ldi	r24, 0x04	; 4
     b50:	79 db       	rcall	.-2318   	; 0x244 <LCD_WriteData>
     b52:	75 c1       	rjmp	.+746    	; 0xe3e <simonSaysPuzzle+0x360>
     b54:	81 e1       	ldi	r24, 0x11	; 17
     b56:	5f db       	rcall	.-2370   	; 0x216 <LCD_Cursor>
     b58:	85 e0       	ldi	r24, 0x05	; 5
     b5a:	74 db       	rcall	.-2328   	; 0x244 <LCD_WriteData>
     b5c:	70 c1       	rjmp	.+736    	; 0xe3e <simonSaysPuzzle+0x360>
     b5e:	81 e1       	ldi	r24, 0x11	; 17
     b60:	5a db       	rcall	.-2380   	; 0x216 <LCD_Cursor>
     b62:	86 e0       	ldi	r24, 0x06	; 6
     b64:	6f db       	rcall	.-2338   	; 0x244 <LCD_WriteData>
     b66:	6b c1       	rjmp	.+726    	; 0xe3e <simonSaysPuzzle+0x360>
     b68:	81 e1       	ldi	r24, 0x11	; 17
     b6a:	55 db       	rcall	.-2390   	; 0x216 <LCD_Cursor>
     b6c:	87 e0       	ldi	r24, 0x07	; 7
     b6e:	6a db       	rcall	.-2348   	; 0x244 <LCD_WriteData>
     b70:	94 e0       	ldi	r25, 0x04	; 4
     b72:	03 c0       	rjmp	.+6      	; 0xb7a <simonSaysPuzzle+0x9c>
     b74:	81 e0       	ldi	r24, 0x01	; 1
     b76:	4f db       	rcall	.-2402   	; 0x216 <LCD_Cursor>
     b78:	13 c0       	rjmp	.+38     	; 0xba0 <simonSaysPuzzle+0xc2>
     b7a:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
     b7e:	88 23       	and	r24, r24
     b80:	e1 f3       	breq	.-8      	; 0xb7a <simonSaysPuzzle+0x9c>
     b82:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
     b86:	91 50       	subi	r25, 0x01	; 1
     b88:	c1 f7       	brne	.-16     	; 0xb7a <simonSaysPuzzle+0x9c>
     b8a:	94 e0       	ldi	r25, 0x04	; 4
     b8c:	0d c0       	rjmp	.+26     	; 0xba8 <simonSaysPuzzle+0xca>
     b8e:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
     b92:	88 23       	and	r24, r24
     b94:	e1 f3       	breq	.-8      	; 0xb8e <simonSaysPuzzle+0xb0>
     b96:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
     b9a:	91 50       	subi	r25, 0x01	; 1
     b9c:	c1 f7       	brne	.-16     	; 0xb8e <simonSaysPuzzle+0xb0>
     b9e:	38 db       	rcall	.-2448   	; 0x210 <LCD_ClearScreen>
     ba0:	c3 30       	cpi	r28, 0x03	; 3
     ba2:	09 f0       	breq	.+2      	; 0xba6 <simonSaysPuzzle+0xc8>
     ba4:	b0 cf       	rjmp	.-160    	; 0xb06 <simonSaysPuzzle+0x28>
     ba6:	3f c1       	rjmp	.+638    	; 0xe26 <simonSaysPuzzle+0x348>
     ba8:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
     bac:	88 23       	and	r24, r24
     bae:	e1 f3       	breq	.-8      	; 0xba8 <simonSaysPuzzle+0xca>
     bb0:	91 50       	subi	r25, 0x01	; 1
     bb2:	d1 f7       	brne	.-12     	; 0xba8 <simonSaysPuzzle+0xca>
     bb4:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
     bb8:	19 99       	sbic	0x03, 1	; 3
     bba:	37 c1       	rjmp	.+622    	; 0xe2a <simonSaysPuzzle+0x34c>
     bbc:	8d e1       	ldi	r24, 0x1D	; 29
     bbe:	2b db       	rcall	.-2474   	; 0x216 <LCD_Cursor>
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	40 db       	rcall	.-2432   	; 0x244 <LCD_WriteData>
     bc4:	8e e1       	ldi	r24, 0x1E	; 30
     bc6:	27 db       	rcall	.-2482   	; 0x216 <LCD_Cursor>
     bc8:	81 e0       	ldi	r24, 0x01	; 1
     bca:	3c db       	rcall	.-2440   	; 0x244 <LCD_WriteData>
     bcc:	8f e1       	ldi	r24, 0x1F	; 31
     bce:	23 db       	rcall	.-2490   	; 0x216 <LCD_Cursor>
     bd0:	82 e0       	ldi	r24, 0x02	; 2
     bd2:	38 db       	rcall	.-2448   	; 0x244 <LCD_WriteData>
     bd4:	80 e2       	ldi	r24, 0x20	; 32
     bd6:	1f db       	rcall	.-2498   	; 0x216 <LCD_Cursor>
     bd8:	83 e0       	ldi	r24, 0x03	; 3
     bda:	34 db       	rcall	.-2456   	; 0x244 <LCD_WriteData>
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	1b db       	rcall	.-2506   	; 0x216 <LCD_Cursor>
     be0:	85 e0       	ldi	r24, 0x05	; 5
     be2:	30 db       	rcall	.-2464   	; 0x244 <LCD_WriteData>
     be4:	81 e1       	ldi	r24, 0x11	; 17
     be6:	17 db       	rcall	.-2514   	; 0x216 <LCD_Cursor>
     be8:	87 e0       	ldi	r24, 0x07	; 7
     bea:	2c db       	rcall	.-2472   	; 0x244 <LCD_WriteData>
     bec:	82 e0       	ldi	r24, 0x02	; 2
     bee:	13 db       	rcall	.-2522   	; 0x216 <LCD_Cursor>
     bf0:	84 e0       	ldi	r24, 0x04	; 4
     bf2:	28 db       	rcall	.-2480   	; 0x244 <LCD_WriteData>
     bf4:	62 db       	rcall	.-2364   	; 0x2ba <GetKeypadKey>
     bf6:	82 33       	cpi	r24, 0x32	; 50
     bf8:	71 f0       	breq	.+28     	; 0xc16 <simonSaysPuzzle+0x138>
     bfa:	18 f4       	brcc	.+6      	; 0xc02 <simonSaysPuzzle+0x124>
     bfc:	81 33       	cpi	r24, 0x31	; 49
     bfe:	31 f0       	breq	.+12     	; 0xc0c <simonSaysPuzzle+0x12e>
     c00:	1a c0       	rjmp	.+52     	; 0xc36 <simonSaysPuzzle+0x158>
     c02:	83 33       	cpi	r24, 0x33	; 51
     c04:	71 f0       	breq	.+28     	; 0xc22 <simonSaysPuzzle+0x144>
     c06:	84 33       	cpi	r24, 0x34	; 52
     c08:	89 f0       	breq	.+34     	; 0xc2c <simonSaysPuzzle+0x14e>
     c0a:	15 c0       	rjmp	.+42     	; 0xc36 <simonSaysPuzzle+0x158>
     c0c:	82 e1       	ldi	r24, 0x12	; 18
     c0e:	03 db       	rcall	.-2554   	; 0x216 <LCD_Cursor>
     c10:	84 e0       	ldi	r24, 0x04	; 4
     c12:	18 db       	rcall	.-2512   	; 0x244 <LCD_WriteData>
     c14:	1b c1       	rjmp	.+566    	; 0xe4c <simonSaysPuzzle+0x36e>
     c16:	82 e1       	ldi	r24, 0x12	; 18
     c18:	fe da       	rcall	.-2564   	; 0x216 <LCD_Cursor>
     c1a:	85 e0       	ldi	r24, 0x05	; 5
     c1c:	13 db       	rcall	.-2522   	; 0x244 <LCD_WriteData>
     c1e:	94 e0       	ldi	r25, 0x04	; 4
     c20:	0d c0       	rjmp	.+26     	; 0xc3c <simonSaysPuzzle+0x15e>
     c22:	82 e1       	ldi	r24, 0x12	; 18
     c24:	f8 da       	rcall	.-2576   	; 0x216 <LCD_Cursor>
     c26:	86 e0       	ldi	r24, 0x06	; 6
     c28:	0d db       	rcall	.-2534   	; 0x244 <LCD_WriteData>
     c2a:	10 c1       	rjmp	.+544    	; 0xe4c <simonSaysPuzzle+0x36e>
     c2c:	82 e1       	ldi	r24, 0x12	; 18
     c2e:	f3 da       	rcall	.-2586   	; 0x216 <LCD_Cursor>
     c30:	87 e0       	ldi	r24, 0x07	; 7
     c32:	08 db       	rcall	.-2544   	; 0x244 <LCD_WriteData>
     c34:	0b c1       	rjmp	.+534    	; 0xe4c <simonSaysPuzzle+0x36e>
     c36:	81 e0       	ldi	r24, 0x01	; 1
     c38:	ee da       	rcall	.-2596   	; 0x216 <LCD_Cursor>
     c3a:	13 c0       	rjmp	.+38     	; 0xc62 <simonSaysPuzzle+0x184>
     c3c:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
     c40:	88 23       	and	r24, r24
     c42:	e1 f3       	breq	.-8      	; 0xc3c <simonSaysPuzzle+0x15e>
     c44:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
     c48:	91 50       	subi	r25, 0x01	; 1
     c4a:	c1 f7       	brne	.-16     	; 0xc3c <simonSaysPuzzle+0x15e>
     c4c:	94 e0       	ldi	r25, 0x04	; 4
     c4e:	0d c0       	rjmp	.+26     	; 0xc6a <simonSaysPuzzle+0x18c>
     c50:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
     c54:	88 23       	and	r24, r24
     c56:	e1 f3       	breq	.-8      	; 0xc50 <simonSaysPuzzle+0x172>
     c58:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
     c5c:	91 50       	subi	r25, 0x01	; 1
     c5e:	c1 f7       	brne	.-16     	; 0xc50 <simonSaysPuzzle+0x172>
     c60:	d7 da       	rcall	.-2642   	; 0x210 <LCD_ClearScreen>
     c62:	c3 30       	cpi	r28, 0x03	; 3
     c64:	09 f0       	breq	.+2      	; 0xc68 <simonSaysPuzzle+0x18a>
     c66:	a8 cf       	rjmp	.-176    	; 0xbb8 <simonSaysPuzzle+0xda>
     c68:	e2 c0       	rjmp	.+452    	; 0xe2e <simonSaysPuzzle+0x350>
     c6a:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
     c6e:	88 23       	and	r24, r24
     c70:	e1 f3       	breq	.-8      	; 0xc6a <simonSaysPuzzle+0x18c>
     c72:	91 50       	subi	r25, 0x01	; 1
     c74:	d1 f7       	brne	.-12     	; 0xc6a <simonSaysPuzzle+0x18c>
     c76:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
     c7a:	19 99       	sbic	0x03, 1	; 3
     c7c:	da c0       	rjmp	.+436    	; 0xe32 <simonSaysPuzzle+0x354>
     c7e:	8d e1       	ldi	r24, 0x1D	; 29
     c80:	ca da       	rcall	.-2668   	; 0x216 <LCD_Cursor>
     c82:	80 e0       	ldi	r24, 0x00	; 0
     c84:	df da       	rcall	.-2626   	; 0x244 <LCD_WriteData>
     c86:	8e e1       	ldi	r24, 0x1E	; 30
     c88:	c6 da       	rcall	.-2676   	; 0x216 <LCD_Cursor>
     c8a:	81 e0       	ldi	r24, 0x01	; 1
     c8c:	db da       	rcall	.-2634   	; 0x244 <LCD_WriteData>
     c8e:	8f e1       	ldi	r24, 0x1F	; 31
     c90:	c2 da       	rcall	.-2684   	; 0x216 <LCD_Cursor>
     c92:	82 e0       	ldi	r24, 0x02	; 2
     c94:	d7 da       	rcall	.-2642   	; 0x244 <LCD_WriteData>
     c96:	80 e2       	ldi	r24, 0x20	; 32
     c98:	be da       	rcall	.-2692   	; 0x216 <LCD_Cursor>
     c9a:	83 e0       	ldi	r24, 0x03	; 3
     c9c:	d3 da       	rcall	.-2650   	; 0x244 <LCD_WriteData>
     c9e:	81 e0       	ldi	r24, 0x01	; 1
     ca0:	ba da       	rcall	.-2700   	; 0x216 <LCD_Cursor>
     ca2:	85 e0       	ldi	r24, 0x05	; 5
     ca4:	cf da       	rcall	.-2658   	; 0x244 <LCD_WriteData>
     ca6:	81 e1       	ldi	r24, 0x11	; 17
     ca8:	b6 da       	rcall	.-2708   	; 0x216 <LCD_Cursor>
     caa:	87 e0       	ldi	r24, 0x07	; 7
     cac:	cb da       	rcall	.-2666   	; 0x244 <LCD_WriteData>
     cae:	82 e0       	ldi	r24, 0x02	; 2
     cb0:	b2 da       	rcall	.-2716   	; 0x216 <LCD_Cursor>
     cb2:	84 e0       	ldi	r24, 0x04	; 4
     cb4:	c7 da       	rcall	.-2674   	; 0x244 <LCD_WriteData>
     cb6:	82 e1       	ldi	r24, 0x12	; 18
     cb8:	ae da       	rcall	.-2724   	; 0x216 <LCD_Cursor>
     cba:	85 e0       	ldi	r24, 0x05	; 5
     cbc:	c3 da       	rcall	.-2682   	; 0x244 <LCD_WriteData>
     cbe:	83 e0       	ldi	r24, 0x03	; 3
     cc0:	aa da       	rcall	.-2732   	; 0x216 <LCD_Cursor>
     cc2:	87 e0       	ldi	r24, 0x07	; 7
     cc4:	bf da       	rcall	.-2690   	; 0x244 <LCD_WriteData>
     cc6:	f9 da       	rcall	.-2574   	; 0x2ba <GetKeypadKey>
     cc8:	82 33       	cpi	r24, 0x32	; 50
     cca:	71 f0       	breq	.+28     	; 0xce8 <simonSaysPuzzle+0x20a>
     ccc:	18 f4       	brcc	.+6      	; 0xcd4 <simonSaysPuzzle+0x1f6>
     cce:	81 33       	cpi	r24, 0x31	; 49
     cd0:	31 f0       	breq	.+12     	; 0xcde <simonSaysPuzzle+0x200>
     cd2:	1a c0       	rjmp	.+52     	; 0xd08 <simonSaysPuzzle+0x22a>
     cd4:	83 33       	cpi	r24, 0x33	; 51
     cd6:	69 f0       	breq	.+26     	; 0xcf2 <simonSaysPuzzle+0x214>
     cd8:	84 33       	cpi	r24, 0x34	; 52
     cda:	89 f0       	breq	.+34     	; 0xcfe <simonSaysPuzzle+0x220>
     cdc:	15 c0       	rjmp	.+42     	; 0xd08 <simonSaysPuzzle+0x22a>
     cde:	83 e1       	ldi	r24, 0x13	; 19
     ce0:	9a da       	rcall	.-2764   	; 0x216 <LCD_Cursor>
     ce2:	84 e0       	ldi	r24, 0x04	; 4
     ce4:	af da       	rcall	.-2722   	; 0x244 <LCD_WriteData>
     ce6:	b9 c0       	rjmp	.+370    	; 0xe5a <simonSaysPuzzle+0x37c>
     ce8:	83 e1       	ldi	r24, 0x13	; 19
     cea:	95 da       	rcall	.-2774   	; 0x216 <LCD_Cursor>
     cec:	85 e0       	ldi	r24, 0x05	; 5
     cee:	aa da       	rcall	.-2732   	; 0x244 <LCD_WriteData>
     cf0:	b4 c0       	rjmp	.+360    	; 0xe5a <simonSaysPuzzle+0x37c>
     cf2:	83 e1       	ldi	r24, 0x13	; 19
     cf4:	90 da       	rcall	.-2784   	; 0x216 <LCD_Cursor>
     cf6:	86 e0       	ldi	r24, 0x06	; 6
     cf8:	a5 da       	rcall	.-2742   	; 0x244 <LCD_WriteData>
     cfa:	84 e0       	ldi	r24, 0x04	; 4
     cfc:	08 c0       	rjmp	.+16     	; 0xd0e <simonSaysPuzzle+0x230>
     cfe:	83 e1       	ldi	r24, 0x13	; 19
     d00:	8a da       	rcall	.-2796   	; 0x216 <LCD_Cursor>
     d02:	87 e0       	ldi	r24, 0x07	; 7
     d04:	9f da       	rcall	.-2754   	; 0x244 <LCD_WriteData>
     d06:	a9 c0       	rjmp	.+338    	; 0xe5a <simonSaysPuzzle+0x37c>
     d08:	81 e0       	ldi	r24, 0x01	; 1
     d0a:	85 da       	rcall	.-2806   	; 0x216 <LCD_Cursor>
     d0c:	13 c0       	rjmp	.+38     	; 0xd34 <simonSaysPuzzle+0x256>
     d0e:	90 91 e3 02 	lds	r25, 0x02E3	; 0x8002e3 <TimerFlag>
     d12:	99 23       	and	r25, r25
     d14:	e1 f3       	breq	.-8      	; 0xd0e <simonSaysPuzzle+0x230>
     d16:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
     d1a:	81 50       	subi	r24, 0x01	; 1
     d1c:	c1 f7       	brne	.-16     	; 0xd0e <simonSaysPuzzle+0x230>
     d1e:	84 e0       	ldi	r24, 0x04	; 4
     d20:	0d c0       	rjmp	.+26     	; 0xd3c <simonSaysPuzzle+0x25e>
     d22:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
     d26:	88 23       	and	r24, r24
     d28:	e1 f3       	breq	.-8      	; 0xd22 <simonSaysPuzzle+0x244>
     d2a:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
     d2e:	91 50       	subi	r25, 0x01	; 1
     d30:	c1 f7       	brne	.-16     	; 0xd22 <simonSaysPuzzle+0x244>
     d32:	6e da       	rcall	.-2852   	; 0x210 <LCD_ClearScreen>
     d34:	c3 30       	cpi	r28, 0x03	; 3
     d36:	09 f0       	breq	.+2      	; 0xd3a <simonSaysPuzzle+0x25c>
     d38:	a0 cf       	rjmp	.-192    	; 0xc7a <simonSaysPuzzle+0x19c>
     d3a:	7d c0       	rjmp	.+250    	; 0xe36 <simonSaysPuzzle+0x358>
     d3c:	90 91 e3 02 	lds	r25, 0x02E3	; 0x8002e3 <TimerFlag>
     d40:	99 23       	and	r25, r25
     d42:	e1 f3       	breq	.-8      	; 0xd3c <simonSaysPuzzle+0x25e>
     d44:	81 50       	subi	r24, 0x01	; 1
     d46:	d1 f7       	brne	.-12     	; 0xd3c <simonSaysPuzzle+0x25e>
     d48:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
     d4c:	19 99       	sbic	0x03, 1	; 3
     d4e:	75 c0       	rjmp	.+234    	; 0xe3a <simonSaysPuzzle+0x35c>
     d50:	8d e1       	ldi	r24, 0x1D	; 29
     d52:	61 da       	rcall	.-2878   	; 0x216 <LCD_Cursor>
     d54:	80 e0       	ldi	r24, 0x00	; 0
     d56:	76 da       	rcall	.-2836   	; 0x244 <LCD_WriteData>
     d58:	8e e1       	ldi	r24, 0x1E	; 30
     d5a:	5d da       	rcall	.-2886   	; 0x216 <LCD_Cursor>
     d5c:	81 e0       	ldi	r24, 0x01	; 1
     d5e:	72 da       	rcall	.-2844   	; 0x244 <LCD_WriteData>
     d60:	8f e1       	ldi	r24, 0x1F	; 31
     d62:	59 da       	rcall	.-2894   	; 0x216 <LCD_Cursor>
     d64:	82 e0       	ldi	r24, 0x02	; 2
     d66:	6e da       	rcall	.-2852   	; 0x244 <LCD_WriteData>
     d68:	80 e2       	ldi	r24, 0x20	; 32
     d6a:	55 da       	rcall	.-2902   	; 0x216 <LCD_Cursor>
     d6c:	83 e0       	ldi	r24, 0x03	; 3
     d6e:	6a da       	rcall	.-2860   	; 0x244 <LCD_WriteData>
     d70:	81 e0       	ldi	r24, 0x01	; 1
     d72:	51 da       	rcall	.-2910   	; 0x216 <LCD_Cursor>
     d74:	85 e0       	ldi	r24, 0x05	; 5
     d76:	66 da       	rcall	.-2868   	; 0x244 <LCD_WriteData>
     d78:	81 e1       	ldi	r24, 0x11	; 17
     d7a:	4d da       	rcall	.-2918   	; 0x216 <LCD_Cursor>
     d7c:	87 e0       	ldi	r24, 0x07	; 7
     d7e:	62 da       	rcall	.-2876   	; 0x244 <LCD_WriteData>
     d80:	82 e0       	ldi	r24, 0x02	; 2
     d82:	49 da       	rcall	.-2926   	; 0x216 <LCD_Cursor>
     d84:	84 e0       	ldi	r24, 0x04	; 4
     d86:	5e da       	rcall	.-2884   	; 0x244 <LCD_WriteData>
     d88:	82 e1       	ldi	r24, 0x12	; 18
     d8a:	45 da       	rcall	.-2934   	; 0x216 <LCD_Cursor>
     d8c:	85 e0       	ldi	r24, 0x05	; 5
     d8e:	5a da       	rcall	.-2892   	; 0x244 <LCD_WriteData>
     d90:	83 e0       	ldi	r24, 0x03	; 3
     d92:	41 da       	rcall	.-2942   	; 0x216 <LCD_Cursor>
     d94:	87 e0       	ldi	r24, 0x07	; 7
     d96:	56 da       	rcall	.-2900   	; 0x244 <LCD_WriteData>
     d98:	83 e1       	ldi	r24, 0x13	; 19
     d9a:	3d da       	rcall	.-2950   	; 0x216 <LCD_Cursor>
     d9c:	86 e0       	ldi	r24, 0x06	; 6
     d9e:	52 da       	rcall	.-2908   	; 0x244 <LCD_WriteData>
     da0:	84 e0       	ldi	r24, 0x04	; 4
     da2:	39 da       	rcall	.-2958   	; 0x216 <LCD_Cursor>
     da4:	86 e0       	ldi	r24, 0x06	; 6
     da6:	4e da       	rcall	.-2916   	; 0x244 <LCD_WriteData>
     da8:	88 da       	rcall	.-2800   	; 0x2ba <GetKeypadKey>
     daa:	82 33       	cpi	r24, 0x32	; 50
     dac:	79 f0       	breq	.+30     	; 0xdcc <simonSaysPuzzle+0x2ee>
     dae:	18 f4       	brcc	.+6      	; 0xdb6 <simonSaysPuzzle+0x2d8>
     db0:	81 33       	cpi	r24, 0x31	; 49
     db2:	31 f0       	breq	.+12     	; 0xdc0 <simonSaysPuzzle+0x2e2>
     db4:	1a c0       	rjmp	.+52     	; 0xdea <simonSaysPuzzle+0x30c>
     db6:	83 33       	cpi	r24, 0x33	; 51
     db8:	71 f0       	breq	.+28     	; 0xdd6 <simonSaysPuzzle+0x2f8>
     dba:	84 33       	cpi	r24, 0x34	; 52
     dbc:	89 f0       	breq	.+34     	; 0xde0 <simonSaysPuzzle+0x302>
     dbe:	15 c0       	rjmp	.+42     	; 0xdea <simonSaysPuzzle+0x30c>
     dc0:	84 e1       	ldi	r24, 0x14	; 20
     dc2:	29 da       	rcall	.-2990   	; 0x216 <LCD_Cursor>
     dc4:	84 e0       	ldi	r24, 0x04	; 4
     dc6:	3e da       	rcall	.-2948   	; 0x244 <LCD_WriteData>
     dc8:	84 e0       	ldi	r24, 0x04	; 4
     dca:	12 c0       	rjmp	.+36     	; 0xdf0 <simonSaysPuzzle+0x312>
     dcc:	84 e1       	ldi	r24, 0x14	; 20
     dce:	23 da       	rcall	.-3002   	; 0x216 <LCD_Cursor>
     dd0:	85 e0       	ldi	r24, 0x05	; 5
     dd2:	38 da       	rcall	.-2960   	; 0x244 <LCD_WriteData>
     dd4:	49 c0       	rjmp	.+146    	; 0xe68 <simonSaysPuzzle+0x38a>
     dd6:	84 e1       	ldi	r24, 0x14	; 20
     dd8:	1e da       	rcall	.-3012   	; 0x216 <LCD_Cursor>
     dda:	86 e0       	ldi	r24, 0x06	; 6
     ddc:	33 da       	rcall	.-2970   	; 0x244 <LCD_WriteData>
     dde:	44 c0       	rjmp	.+136    	; 0xe68 <simonSaysPuzzle+0x38a>
     de0:	84 e1       	ldi	r24, 0x14	; 20
     de2:	19 da       	rcall	.-3022   	; 0x216 <LCD_Cursor>
     de4:	87 e0       	ldi	r24, 0x07	; 7
     de6:	2e da       	rcall	.-2980   	; 0x244 <LCD_WriteData>
     de8:	3f c0       	rjmp	.+126    	; 0xe68 <simonSaysPuzzle+0x38a>
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	14 da       	rcall	.-3032   	; 0x216 <LCD_Cursor>
     dee:	14 c0       	rjmp	.+40     	; 0xe18 <simonSaysPuzzle+0x33a>
     df0:	90 91 e3 02 	lds	r25, 0x02E3	; 0x8002e3 <TimerFlag>
     df4:	99 23       	and	r25, r25
     df6:	e1 f3       	breq	.-8      	; 0xdf0 <simonSaysPuzzle+0x312>
     df8:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
     dfc:	81 50       	subi	r24, 0x01	; 1
     dfe:	c1 f7       	brne	.-16     	; 0xdf0 <simonSaysPuzzle+0x312>
     e00:	81 e0       	ldi	r24, 0x01	; 1
     e02:	38 c0       	rjmp	.+112    	; 0xe74 <simonSaysPuzzle+0x396>
     e04:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
     e08:	88 23       	and	r24, r24
     e0a:	e1 f3       	breq	.-8      	; 0xe04 <simonSaysPuzzle+0x326>
     e0c:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
     e10:	91 50       	subi	r25, 0x01	; 1
     e12:	c1 f7       	brne	.-16     	; 0xe04 <simonSaysPuzzle+0x326>
     e14:	cf 5f       	subi	r28, 0xFF	; 255
     e16:	fc d9       	rcall	.-3080   	; 0x210 <LCD_ClearScreen>
     e18:	c3 30       	cpi	r28, 0x03	; 3
     e1a:	09 f0       	breq	.+2      	; 0xe1e <simonSaysPuzzle+0x340>
     e1c:	97 cf       	rjmp	.-210    	; 0xd4c <simonSaysPuzzle+0x26e>
     e1e:	80 e0       	ldi	r24, 0x00	; 0
     e20:	29 c0       	rjmp	.+82     	; 0xe74 <simonSaysPuzzle+0x396>
     e22:	80 e0       	ldi	r24, 0x00	; 0
     e24:	27 c0       	rjmp	.+78     	; 0xe74 <simonSaysPuzzle+0x396>
     e26:	80 e0       	ldi	r24, 0x00	; 0
     e28:	25 c0       	rjmp	.+74     	; 0xe74 <simonSaysPuzzle+0x396>
     e2a:	80 e0       	ldi	r24, 0x00	; 0
     e2c:	23 c0       	rjmp	.+70     	; 0xe74 <simonSaysPuzzle+0x396>
     e2e:	80 e0       	ldi	r24, 0x00	; 0
     e30:	21 c0       	rjmp	.+66     	; 0xe74 <simonSaysPuzzle+0x396>
     e32:	80 e0       	ldi	r24, 0x00	; 0
     e34:	1f c0       	rjmp	.+62     	; 0xe74 <simonSaysPuzzle+0x396>
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	1d c0       	rjmp	.+58     	; 0xe74 <simonSaysPuzzle+0x396>
     e3a:	80 e0       	ldi	r24, 0x00	; 0
     e3c:	1b c0       	rjmp	.+54     	; 0xe74 <simonSaysPuzzle+0x396>
     e3e:	64 e1       	ldi	r22, 0x14	; 20
     e40:	72 e0       	ldi	r23, 0x02	; 2
     e42:	81 e0       	ldi	r24, 0x01	; 1
     e44:	08 da       	rcall	.-3056   	; 0x256 <LCD_DisplayString>
     e46:	cf 5f       	subi	r28, 0xFF	; 255
     e48:	94 e0       	ldi	r25, 0x04	; 4
     e4a:	a1 ce       	rjmp	.-702    	; 0xb8e <simonSaysPuzzle+0xb0>
     e4c:	64 e1       	ldi	r22, 0x14	; 20
     e4e:	72 e0       	ldi	r23, 0x02	; 2
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	01 da       	rcall	.-3070   	; 0x256 <LCD_DisplayString>
     e54:	cf 5f       	subi	r28, 0xFF	; 255
     e56:	94 e0       	ldi	r25, 0x04	; 4
     e58:	fb ce       	rjmp	.-522    	; 0xc50 <simonSaysPuzzle+0x172>
     e5a:	64 e1       	ldi	r22, 0x14	; 20
     e5c:	72 e0       	ldi	r23, 0x02	; 2
     e5e:	81 e0       	ldi	r24, 0x01	; 1
     e60:	fa d9       	rcall	.-3084   	; 0x256 <LCD_DisplayString>
     e62:	cf 5f       	subi	r28, 0xFF	; 255
     e64:	94 e0       	ldi	r25, 0x04	; 4
     e66:	5d cf       	rjmp	.-326    	; 0xd22 <simonSaysPuzzle+0x244>
     e68:	64 e1       	ldi	r22, 0x14	; 20
     e6a:	72 e0       	ldi	r23, 0x02	; 2
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	f3 d9       	rcall	.-3098   	; 0x256 <LCD_DisplayString>
     e70:	94 e0       	ldi	r25, 0x04	; 4
     e72:	c8 cf       	rjmp	.-112    	; 0xe04 <simonSaysPuzzle+0x326>
     e74:	cf 91       	pop	r28
     e76:	08 95       	ret

00000e78 <matchSymbolsPuzzle>:
     e78:	cf 93       	push	r28
     e7a:	df 93       	push	r29
     e7c:	c9 d9       	rcall	.-3182   	; 0x210 <LCD_ClearScreen>
     e7e:	7e dc       	rcall	.-1796   	; 0x77c <generatePuzzleThreeCharacters>
     e80:	8d e1       	ldi	r24, 0x1D	; 29
     e82:	c9 d9       	rcall	.-3182   	; 0x216 <LCD_Cursor>
     e84:	80 e0       	ldi	r24, 0x00	; 0
     e86:	de d9       	rcall	.-3140   	; 0x244 <LCD_WriteData>
     e88:	8e e1       	ldi	r24, 0x1E	; 30
     e8a:	c5 d9       	rcall	.-3190   	; 0x216 <LCD_Cursor>
     e8c:	81 e0       	ldi	r24, 0x01	; 1
     e8e:	da d9       	rcall	.-3148   	; 0x244 <LCD_WriteData>
     e90:	8f e1       	ldi	r24, 0x1F	; 31
     e92:	c1 d9       	rcall	.-3198   	; 0x216 <LCD_Cursor>
     e94:	82 e0       	ldi	r24, 0x02	; 2
     e96:	d6 d9       	rcall	.-3156   	; 0x244 <LCD_WriteData>
     e98:	80 e2       	ldi	r24, 0x20	; 32
     e9a:	bd d9       	rcall	.-3206   	; 0x216 <LCD_Cursor>
     e9c:	83 e0       	ldi	r24, 0x03	; 3
     e9e:	d2 d9       	rcall	.-3164   	; 0x244 <LCD_WriteData>
     ea0:	81 e0       	ldi	r24, 0x01	; 1
     ea2:	b9 d9       	rcall	.-3214   	; 0x216 <LCD_Cursor>
     ea4:	84 e0       	ldi	r24, 0x04	; 4
     ea6:	ce d9       	rcall	.-3172   	; 0x244 <LCD_WriteData>
     ea8:	82 e0       	ldi	r24, 0x02	; 2
     eaa:	b5 d9       	rcall	.-3222   	; 0x216 <LCD_Cursor>
     eac:	85 e0       	ldi	r24, 0x05	; 5
     eae:	ca d9       	rcall	.-3180   	; 0x244 <LCD_WriteData>
     eb0:	83 e0       	ldi	r24, 0x03	; 3
     eb2:	b1 d9       	rcall	.-3230   	; 0x216 <LCD_Cursor>
     eb4:	86 e0       	ldi	r24, 0x06	; 6
     eb6:	c6 d9       	rcall	.-3188   	; 0x244 <LCD_WriteData>
     eb8:	84 e0       	ldi	r24, 0x04	; 4
     eba:	ad d9       	rcall	.-3238   	; 0x216 <LCD_Cursor>
     ebc:	87 e0       	ldi	r24, 0x07	; 7
     ebe:	c2 d9       	rcall	.-3196   	; 0x244 <LCD_WriteData>
     ec0:	d3 e0       	ldi	r29, 0x03	; 3
     ec2:	c1 e0       	ldi	r28, 0x01	; 1
     ec4:	19 99       	sbic	0x03, 1	; 3
     ec6:	15 c0       	rjmp	.+42     	; 0xef2 <matchSymbolsPuzzle+0x7a>
     ec8:	f8 d9       	rcall	.-3088   	; 0x2ba <GetKeypadKey>
     eca:	88 23       	and	r24, r24
     ecc:	29 f0       	breq	.+10     	; 0xed8 <matchSymbolsPuzzle+0x60>
     ece:	83 33       	cpi	r24, 0x33	; 51
     ed0:	11 f0       	breq	.+4      	; 0xed6 <matchSymbolsPuzzle+0x5e>
     ed2:	8c 2f       	mov	r24, r28
     ed4:	01 c0       	rjmp	.+2      	; 0xed8 <matchSymbolsPuzzle+0x60>
     ed6:	8d 2f       	mov	r24, r29
     ed8:	90 91 e3 02 	lds	r25, 0x02E3	; 0x8002e3 <TimerFlag>
     edc:	99 23       	and	r25, r25
     ede:	e1 f3       	breq	.-8      	; 0xed8 <matchSymbolsPuzzle+0x60>
     ee0:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
     ee4:	88 23       	and	r24, r24
     ee6:	71 f3       	breq	.-36     	; 0xec4 <matchSymbolsPuzzle+0x4c>
     ee8:	91 e0       	ldi	r25, 0x01	; 1
     eea:	83 30       	cpi	r24, 0x03	; 3
     eec:	19 f0       	breq	.+6      	; 0xef4 <matchSymbolsPuzzle+0x7c>
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	01 c0       	rjmp	.+2      	; 0xef4 <matchSymbolsPuzzle+0x7c>
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	89 2f       	mov	r24, r25
     ef6:	df 91       	pop	r29
     ef8:	cf 91       	pop	r28
     efa:	08 95       	ret

00000efc <mazePuzzle>:
     efc:	bf 92       	push	r11
     efe:	cf 92       	push	r12
     f00:	df 92       	push	r13
     f02:	ef 92       	push	r14
     f04:	ff 92       	push	r15
     f06:	0f 93       	push	r16
     f08:	1f 93       	push	r17
     f0a:	cf 93       	push	r28
     f0c:	df 93       	push	r29
     f0e:	cd b7       	in	r28, 0x3d	; 61
     f10:	de b7       	in	r29, 0x3e	; 62
     f12:	66 97       	sbiw	r28, 0x16	; 22
     f14:	0f b6       	in	r0, 0x3f	; 63
     f16:	f8 94       	cli
     f18:	de bf       	out	0x3e, r29	; 62
     f1a:	0f be       	out	0x3f, r0	; 63
     f1c:	cd bf       	out	0x3d, r28	; 61
     f1e:	86 e1       	ldi	r24, 0x16	; 22
     f20:	e0 ee       	ldi	r30, 0xE0	; 224
     f22:	f1 e0       	ldi	r31, 0x01	; 1
     f24:	de 01       	movw	r26, r28
     f26:	11 96       	adiw	r26, 0x01	; 1
     f28:	01 90       	ld	r0, Z+
     f2a:	0d 92       	st	X+, r0
     f2c:	8a 95       	dec	r24
     f2e:	e1 f7       	brne	.-8      	; 0xf28 <mazePuzzle+0x2c>
     f30:	6f d9       	rcall	.-3362   	; 0x210 <LCD_ClearScreen>
     f32:	a9 dc       	rcall	.-1710   	; 0x886 <generatePuzzleFourCharacters>
     f34:	80 e1       	ldi	r24, 0x10	; 16
     f36:	6f d9       	rcall	.-3362   	; 0x216 <LCD_Cursor>
     f38:	84 e0       	ldi	r24, 0x04	; 4
     f3a:	84 d9       	rcall	.-3320   	; 0x244 <LCD_WriteData>
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	6b d9       	rcall	.-3370   	; 0x216 <LCD_Cursor>
     f40:	8f e4       	ldi	r24, 0x4F	; 79
     f42:	80 d9       	rcall	.-3328   	; 0x244 <LCD_WriteData>
     f44:	8d e1       	ldi	r24, 0x1D	; 29
     f46:	67 d9       	rcall	.-3378   	; 0x216 <LCD_Cursor>
     f48:	8f e4       	ldi	r24, 0x4F	; 79
     f4a:	7c d9       	rcall	.-3336   	; 0x244 <LCD_WriteData>
     f4c:	68 94       	set
     f4e:	ee 24       	eor	r14, r14
     f50:	e4 f8       	bld	r14, 4
     f52:	f1 2c       	mov	r15, r1
     f54:	10 e0       	ldi	r17, 0x00	; 0
     f56:	04 e0       	ldi	r16, 0x04	; 4
     f58:	0f 2e       	mov	r0, r31
     f5a:	f6 e0       	ldi	r31, 0x06	; 6
     f5c:	bf 2e       	mov	r11, r31
     f5e:	f0 2d       	mov	r31, r0
     f60:	68 94       	set
     f62:	cc 24       	eor	r12, r12
     f64:	c3 f8       	bld	r12, 3
     f66:	68 94       	set
     f68:	dd 24       	eor	r13, r13
     f6a:	d1 f8       	bld	r13, 1
     f6c:	a6 d9       	rcall	.-3252   	; 0x2ba <GetKeypadKey>
     f6e:	84 33       	cpi	r24, 0x34	; 52
     f70:	09 f4       	brne	.+2      	; 0xf74 <mazePuzzle+0x78>
     f72:	84 c0       	rjmp	.+264    	; 0x107c <mazePuzzle+0x180>
     f74:	18 f4       	brcc	.+6      	; 0xf7c <mazePuzzle+0x80>
     f76:	82 33       	cpi	r24, 0x32	; 50
     f78:	49 f0       	breq	.+18     	; 0xf8c <mazePuzzle+0x90>
     f7a:	71 c0       	rjmp	.+226    	; 0x105e <mazePuzzle+0x162>
     f7c:	86 33       	cpi	r24, 0x36	; 54
     f7e:	21 f0       	breq	.+8      	; 0xf88 <mazePuzzle+0x8c>
     f80:	88 33       	cpi	r24, 0x38	; 56
     f82:	09 f4       	brne	.+2      	; 0xf86 <mazePuzzle+0x8a>
     f84:	7d c0       	rjmp	.+250    	; 0x1080 <mazePuzzle+0x184>
     f86:	6b c0       	rjmp	.+214    	; 0x105e <mazePuzzle+0x162>
     f88:	9b 2d       	mov	r25, r11
     f8a:	01 c0       	rjmp	.+2      	; 0xf8e <mazePuzzle+0x92>
     f8c:	9d 2d       	mov	r25, r13
     f8e:	e1 e0       	ldi	r30, 0x01	; 1
     f90:	f0 e0       	ldi	r31, 0x00	; 0
     f92:	ec 0f       	add	r30, r28
     f94:	fd 1f       	adc	r31, r29
     f96:	e1 0f       	add	r30, r17
     f98:	f1 1d       	adc	r31, r1
     f9a:	80 81       	ld	r24, Z
     f9c:	89 13       	cpse	r24, r25
     f9e:	6a c0       	rjmp	.+212    	; 0x1074 <mazePuzzle+0x178>
     fa0:	84 30       	cpi	r24, 0x04	; 4
     fa2:	f9 f0       	breq	.+62     	; 0xfe2 <mazePuzzle+0xe6>
     fa4:	18 f4       	brcc	.+6      	; 0xfac <mazePuzzle+0xb0>
     fa6:	82 30       	cpi	r24, 0x02	; 2
     fa8:	39 f0       	breq	.+14     	; 0xfb8 <mazePuzzle+0xbc>
     faa:	66 c0       	rjmp	.+204    	; 0x1078 <mazePuzzle+0x17c>
     fac:	86 30       	cpi	r24, 0x06	; 6
     fae:	71 f1       	breq	.+92     	; 0x100c <mazePuzzle+0x110>
     fb0:	88 30       	cpi	r24, 0x08	; 8
     fb2:	09 f4       	brne	.+2      	; 0xfb6 <mazePuzzle+0xba>
     fb4:	40 c0       	rjmp	.+128    	; 0x1036 <mazePuzzle+0x13a>
     fb6:	60 c0       	rjmp	.+192    	; 0x1078 <mazePuzzle+0x17c>
     fb8:	6a e1       	ldi	r22, 0x1A	; 26
     fba:	72 e0       	ldi	r23, 0x02	; 2
     fbc:	81 e0       	ldi	r24, 0x01	; 1
     fbe:	4b d9       	rcall	.-3434   	; 0x256 <LCD_DisplayString>
     fc0:	80 e1       	ldi	r24, 0x10	; 16
     fc2:	e8 1a       	sub	r14, r24
     fc4:	f1 08       	sbc	r15, r1
     fc6:	8e 2d       	mov	r24, r14
     fc8:	26 d9       	rcall	.-3508   	; 0x216 <LCD_Cursor>
     fca:	80 2f       	mov	r24, r16
     fcc:	3b d9       	rcall	.-3466   	; 0x244 <LCD_WriteData>
     fce:	81 e0       	ldi	r24, 0x01	; 1
     fd0:	22 d9       	rcall	.-3516   	; 0x216 <LCD_Cursor>
     fd2:	8f e4       	ldi	r24, 0x4F	; 79
     fd4:	37 d9       	rcall	.-3474   	; 0x244 <LCD_WriteData>
     fd6:	8d e1       	ldi	r24, 0x1D	; 29
     fd8:	1e d9       	rcall	.-3524   	; 0x216 <LCD_Cursor>
     fda:	8f e4       	ldi	r24, 0x4F	; 79
     fdc:	33 d9       	rcall	.-3482   	; 0x244 <LCD_WriteData>
     fde:	1f 5f       	subi	r17, 0xFF	; 255
     fe0:	3e c0       	rjmp	.+124    	; 0x105e <mazePuzzle+0x162>
     fe2:	6a e1       	ldi	r22, 0x1A	; 26
     fe4:	72 e0       	ldi	r23, 0x02	; 2
     fe6:	81 e0       	ldi	r24, 0x01	; 1
     fe8:	36 d9       	rcall	.-3476   	; 0x256 <LCD_DisplayString>
     fea:	81 e0       	ldi	r24, 0x01	; 1
     fec:	e8 1a       	sub	r14, r24
     fee:	f1 08       	sbc	r15, r1
     ff0:	8e 2d       	mov	r24, r14
     ff2:	11 d9       	rcall	.-3550   	; 0x216 <LCD_Cursor>
     ff4:	80 2f       	mov	r24, r16
     ff6:	26 d9       	rcall	.-3508   	; 0x244 <LCD_WriteData>
     ff8:	81 e0       	ldi	r24, 0x01	; 1
     ffa:	0d d9       	rcall	.-3558   	; 0x216 <LCD_Cursor>
     ffc:	8f e4       	ldi	r24, 0x4F	; 79
     ffe:	22 d9       	rcall	.-3516   	; 0x244 <LCD_WriteData>
    1000:	8d e1       	ldi	r24, 0x1D	; 29
    1002:	09 d9       	rcall	.-3566   	; 0x216 <LCD_Cursor>
    1004:	8f e4       	ldi	r24, 0x4F	; 79
    1006:	1e d9       	rcall	.-3524   	; 0x244 <LCD_WriteData>
    1008:	1f 5f       	subi	r17, 0xFF	; 255
    100a:	29 c0       	rjmp	.+82     	; 0x105e <mazePuzzle+0x162>
    100c:	6a e1       	ldi	r22, 0x1A	; 26
    100e:	72 e0       	ldi	r23, 0x02	; 2
    1010:	81 e0       	ldi	r24, 0x01	; 1
    1012:	21 d9       	rcall	.-3518   	; 0x256 <LCD_DisplayString>
    1014:	8f ef       	ldi	r24, 0xFF	; 255
    1016:	e8 1a       	sub	r14, r24
    1018:	f8 0a       	sbc	r15, r24
    101a:	8e 2d       	mov	r24, r14
    101c:	fc d8       	rcall	.-3592   	; 0x216 <LCD_Cursor>
    101e:	80 2f       	mov	r24, r16
    1020:	11 d9       	rcall	.-3550   	; 0x244 <LCD_WriteData>
    1022:	81 e0       	ldi	r24, 0x01	; 1
    1024:	f8 d8       	rcall	.-3600   	; 0x216 <LCD_Cursor>
    1026:	8f e4       	ldi	r24, 0x4F	; 79
    1028:	0d d9       	rcall	.-3558   	; 0x244 <LCD_WriteData>
    102a:	8d e1       	ldi	r24, 0x1D	; 29
    102c:	f4 d8       	rcall	.-3608   	; 0x216 <LCD_Cursor>
    102e:	8f e4       	ldi	r24, 0x4F	; 79
    1030:	09 d9       	rcall	.-3566   	; 0x244 <LCD_WriteData>
    1032:	1f 5f       	subi	r17, 0xFF	; 255
    1034:	14 c0       	rjmp	.+40     	; 0x105e <mazePuzzle+0x162>
    1036:	6a e1       	ldi	r22, 0x1A	; 26
    1038:	72 e0       	ldi	r23, 0x02	; 2
    103a:	81 e0       	ldi	r24, 0x01	; 1
    103c:	0c d9       	rcall	.-3560   	; 0x256 <LCD_DisplayString>
    103e:	80 e1       	ldi	r24, 0x10	; 16
    1040:	e8 0e       	add	r14, r24
    1042:	f1 1c       	adc	r15, r1
    1044:	8e 2d       	mov	r24, r14
    1046:	e7 d8       	rcall	.-3634   	; 0x216 <LCD_Cursor>
    1048:	80 2f       	mov	r24, r16
    104a:	fc d8       	rcall	.-3592   	; 0x244 <LCD_WriteData>
    104c:	81 e0       	ldi	r24, 0x01	; 1
    104e:	e3 d8       	rcall	.-3642   	; 0x216 <LCD_Cursor>
    1050:	8f e4       	ldi	r24, 0x4F	; 79
    1052:	f8 d8       	rcall	.-3600   	; 0x244 <LCD_WriteData>
    1054:	8d e1       	ldi	r24, 0x1D	; 29
    1056:	df d8       	rcall	.-3650   	; 0x216 <LCD_Cursor>
    1058:	8f e4       	ldi	r24, 0x4F	; 79
    105a:	f4 d8       	rcall	.-3608   	; 0x244 <LCD_WriteData>
    105c:	1f 5f       	subi	r17, 0xFF	; 255
    105e:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
    1062:	88 23       	and	r24, r24
    1064:	e1 f3       	breq	.-8      	; 0x105e <mazePuzzle+0x162>
    1066:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
    106a:	16 31       	cpi	r17, 0x16	; 22
    106c:	09 f0       	breq	.+2      	; 0x1070 <mazePuzzle+0x174>
    106e:	7e cf       	rjmp	.-260    	; 0xf6c <mazePuzzle+0x70>
    1070:	81 e0       	ldi	r24, 0x01	; 1
    1072:	08 c0       	rjmp	.+16     	; 0x1084 <mazePuzzle+0x188>
    1074:	80 e0       	ldi	r24, 0x00	; 0
    1076:	06 c0       	rjmp	.+12     	; 0x1084 <mazePuzzle+0x188>
    1078:	80 e0       	ldi	r24, 0x00	; 0
    107a:	04 c0       	rjmp	.+8      	; 0x1084 <mazePuzzle+0x188>
    107c:	90 2f       	mov	r25, r16
    107e:	87 cf       	rjmp	.-242    	; 0xf8e <mazePuzzle+0x92>
    1080:	9c 2d       	mov	r25, r12
    1082:	85 cf       	rjmp	.-246    	; 0xf8e <mazePuzzle+0x92>
    1084:	66 96       	adiw	r28, 0x16	; 22
    1086:	0f b6       	in	r0, 0x3f	; 63
    1088:	f8 94       	cli
    108a:	de bf       	out	0x3e, r29	; 62
    108c:	0f be       	out	0x3f, r0	; 63
    108e:	cd bf       	out	0x3d, r28	; 61
    1090:	df 91       	pop	r29
    1092:	cf 91       	pop	r28
    1094:	1f 91       	pop	r17
    1096:	0f 91       	pop	r16
    1098:	ff 90       	pop	r15
    109a:	ef 90       	pop	r14
    109c:	df 90       	pop	r13
    109e:	cf 90       	pop	r12
    10a0:	bf 90       	pop	r11
    10a2:	08 95       	ret

000010a4 <updateEEPROM>:
}
void updateEEPROM(){
	uint8_t DataValue;
	DataValue = eeprom_read_byte(0);
    10a4:	80 e0       	ldi	r24, 0x00	; 0
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	36 d1       	rcall	.+620    	; 0x1316 <eeprom_read_byte>

	//DataValue = DataValue + 1;
	
	eeprom_update_byte(0,DataValue + 1);
    10aa:	61 e0       	ldi	r22, 0x01	; 1
    10ac:	68 0f       	add	r22, r24
    10ae:	80 e0       	ldi	r24, 0x00	; 0
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	39 c1       	rjmp	.+626    	; 0x1326 <eeprom_update_byte>
    10b4:	08 95       	ret

000010b6 <getDefuses>:
}
void getDefuses(){
	uint8_t Data;
	Data = eeprom_read_byte(0);
    10b6:	80 e0       	ldi	r24, 0x00	; 0
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	2d d1       	rcall	.+602    	; 0x1316 <eeprom_read_byte>
	
	switch(Data){
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	85 31       	cpi	r24, 0x15	; 21
    10c0:	91 05       	cpc	r25, r1
    10c2:	08 f0       	brcs	.+2      	; 0x10c6 <getDefuses+0x10>
    10c4:	6d c0       	rjmp	.+218    	; 0x11a0 <getDefuses+0xea>
    10c6:	fc 01       	movw	r30, r24
    10c8:	ea 5b       	subi	r30, 0xBA	; 186
    10ca:	ff 4f       	sbci	r31, 0xFF	; 255
    10cc:	1b c1       	rjmp	.+566    	; 0x1304 <__tablejump2__>
		case 0:
			LCD_Cursor(16);
    10ce:	80 e1       	ldi	r24, 0x10	; 16
    10d0:	a2 d8       	rcall	.-3772   	; 0x216 <LCD_Cursor>
			LCD_WriteData('0');
    10d2:	80 e3       	ldi	r24, 0x30	; 48
    10d4:	b7 c8       	rjmp	.-3730   	; 0x244 <LCD_WriteData>
			break;
		case 1:
			LCD_Cursor(16);
    10d6:	08 95       	ret
    10d8:	80 e1       	ldi	r24, 0x10	; 16
			LCD_WriteData('1');
    10da:	9d d8       	rcall	.-3782   	; 0x216 <LCD_Cursor>
    10dc:	81 e3       	ldi	r24, 0x31	; 49
			break;
    10de:	b2 c8       	rjmp	.-3740   	; 0x244 <LCD_WriteData>
		case 2:
			LCD_Cursor(16);
    10e0:	08 95       	ret
    10e2:	80 e1       	ldi	r24, 0x10	; 16
			LCD_WriteData('2');
    10e4:	98 d8       	rcall	.-3792   	; 0x216 <LCD_Cursor>
    10e6:	82 e3       	ldi	r24, 0x32	; 50
			break;
    10e8:	ad c8       	rjmp	.-3750   	; 0x244 <LCD_WriteData>
		case 3:
			LCD_Cursor(16);
    10ea:	08 95       	ret
    10ec:	80 e1       	ldi	r24, 0x10	; 16
			LCD_WriteData('3');
    10ee:	93 d8       	rcall	.-3802   	; 0x216 <LCD_Cursor>
    10f0:	83 e3       	ldi	r24, 0x33	; 51
			break;
    10f2:	a8 c8       	rjmp	.-3760   	; 0x244 <LCD_WriteData>
		case 4:
			LCD_Cursor(16);
    10f4:	08 95       	ret
    10f6:	80 e1       	ldi	r24, 0x10	; 16
			LCD_WriteData('4');
    10f8:	8e d8       	rcall	.-3812   	; 0x216 <LCD_Cursor>
    10fa:	84 e3       	ldi	r24, 0x34	; 52
			break;
		case 5:
			LCD_Cursor(16);
    10fc:	a3 c8       	rjmp	.-3770   	; 0x244 <LCD_WriteData>
    10fe:	08 95       	ret
			LCD_WriteData('5');
    1100:	80 e1       	ldi	r24, 0x10	; 16
    1102:	89 d8       	rcall	.-3822   	; 0x216 <LCD_Cursor>
			break;
		case 6:
			LCD_Cursor(16);
    1104:	85 e3       	ldi	r24, 0x35	; 53
    1106:	9e c8       	rjmp	.-3780   	; 0x244 <LCD_WriteData>
			LCD_WriteData('6');
    1108:	08 95       	ret
    110a:	80 e1       	ldi	r24, 0x10	; 16
			break;
    110c:	84 d8       	rcall	.-3832   	; 0x216 <LCD_Cursor>
		case 7:
			LCD_Cursor(16);
    110e:	86 e3       	ldi	r24, 0x36	; 54
    1110:	99 c8       	rjmp	.-3790   	; 0x244 <LCD_WriteData>
			LCD_WriteData('7');
    1112:	08 95       	ret
    1114:	80 e1       	ldi	r24, 0x10	; 16
			break;
    1116:	7f d8       	rcall	.-3842   	; 0x216 <LCD_Cursor>
		case 8:
			LCD_Cursor(16);
    1118:	87 e3       	ldi	r24, 0x37	; 55
    111a:	94 c8       	rjmp	.-3800   	; 0x244 <LCD_WriteData>
			LCD_WriteData('8');
    111c:	08 95       	ret
    111e:	80 e1       	ldi	r24, 0x10	; 16
			break;
    1120:	7a d8       	rcall	.-3852   	; 0x216 <LCD_Cursor>
		case 9:
			LCD_Cursor(16);
    1122:	88 e3       	ldi	r24, 0x38	; 56
    1124:	8f c8       	rjmp	.-3810   	; 0x244 <LCD_WriteData>
			LCD_WriteData('9');
    1126:	08 95       	ret
    1128:	80 e1       	ldi	r24, 0x10	; 16
			break;
		case 10:
			LCD_Cursor(15);
    112a:	75 d8       	rcall	.-3862   	; 0x216 <LCD_Cursor>
    112c:	89 e3       	ldi	r24, 0x39	; 57
			LCD_WriteData('10');
    112e:	8a c8       	rjmp	.-3820   	; 0x244 <LCD_WriteData>
    1130:	08 95       	ret
			break;
		case 11:
			LCD_Cursor(15);
    1132:	8f e0       	ldi	r24, 0x0F	; 15
    1134:	70 d8       	rcall	.-3872   	; 0x216 <LCD_Cursor>
			LCD_WriteData('11');
    1136:	80 e3       	ldi	r24, 0x30	; 48
    1138:	85 c8       	rjmp	.-3830   	; 0x244 <LCD_WriteData>
			break;
    113a:	08 95       	ret
		case 12:
			LCD_Cursor(15);
    113c:	8f e0       	ldi	r24, 0x0F	; 15
    113e:	6b d8       	rcall	.-3882   	; 0x216 <LCD_Cursor>
			LCD_WriteData('12');
    1140:	81 e3       	ldi	r24, 0x31	; 49
    1142:	80 c8       	rjmp	.-3840   	; 0x244 <LCD_WriteData>
			break;
    1144:	08 95       	ret
		case 13:
			LCD_Cursor(15);
    1146:	8f e0       	ldi	r24, 0x0F	; 15
    1148:	66 d8       	rcall	.-3892   	; 0x216 <LCD_Cursor>
			LCD_WriteData('13');
    114a:	82 e3       	ldi	r24, 0x32	; 50
    114c:	7b c8       	rjmp	.-3850   	; 0x244 <LCD_WriteData>
			break;
    114e:	08 95       	ret
		case 14:
			LCD_Cursor(15);
    1150:	8f e0       	ldi	r24, 0x0F	; 15
    1152:	61 d8       	rcall	.-3902   	; 0x216 <LCD_Cursor>
			LCD_WriteData('14');
    1154:	83 e3       	ldi	r24, 0x33	; 51
    1156:	76 c8       	rjmp	.-3860   	; 0x244 <LCD_WriteData>
			break;
    1158:	08 95       	ret
		case 15:
			LCD_Cursor(15);
    115a:	8f e0       	ldi	r24, 0x0F	; 15
    115c:	5c d8       	rcall	.-3912   	; 0x216 <LCD_Cursor>
    115e:	84 e3       	ldi	r24, 0x34	; 52
			LCD_WriteData('15');
    1160:	71 c8       	rjmp	.-3870   	; 0x244 <LCD_WriteData>
    1162:	08 95       	ret
			break;
    1164:	8f e0       	ldi	r24, 0x0F	; 15
		case 16:
			LCD_Cursor(15);
    1166:	57 d8       	rcall	.-3922   	; 0x216 <LCD_Cursor>
    1168:	85 e3       	ldi	r24, 0x35	; 53
    116a:	6c c8       	rjmp	.-3880   	; 0x244 <LCD_WriteData>
			LCD_WriteData('16');
    116c:	08 95       	ret
    116e:	8f e0       	ldi	r24, 0x0F	; 15
    1170:	52 d8       	rcall	.-3932   	; 0x216 <LCD_Cursor>
			break;
    1172:	86 e3       	ldi	r24, 0x36	; 54
		case 17:
			LCD_Cursor(15);
    1174:	67 c8       	rjmp	.-3890   	; 0x244 <LCD_WriteData>
    1176:	08 95       	ret
    1178:	8f e0       	ldi	r24, 0x0F	; 15
			LCD_WriteData('17');
    117a:	4d d8       	rcall	.-3942   	; 0x216 <LCD_Cursor>
    117c:	87 e3       	ldi	r24, 0x37	; 55
    117e:	62 c8       	rjmp	.-3900   	; 0x244 <LCD_WriteData>
			break;
    1180:	08 95       	ret
		case 18:
			LCD_Cursor(15);
    1182:	8f e0       	ldi	r24, 0x0F	; 15
    1184:	48 d8       	rcall	.-3952   	; 0x216 <LCD_Cursor>
    1186:	88 e3       	ldi	r24, 0x38	; 56
			LCD_WriteData('18');
    1188:	5d c8       	rjmp	.-3910   	; 0x244 <LCD_WriteData>
    118a:	08 95       	ret
    118c:	8f e0       	ldi	r24, 0x0F	; 15
			break;
    118e:	43 d8       	rcall	.-3962   	; 0x216 <LCD_Cursor>
		case 19:
			LCD_Cursor(15);
    1190:	89 e3       	ldi	r24, 0x39	; 57
    1192:	58 c8       	rjmp	.-3920   	; 0x244 <LCD_WriteData>
    1194:	08 95       	ret
			LCD_WriteData('19');
    1196:	8f e0       	ldi	r24, 0x0F	; 15
    1198:	3e d8       	rcall	.-3972   	; 0x216 <LCD_Cursor>
    119a:	80 e3       	ldi	r24, 0x30	; 48
			break;
    119c:	53 c8       	rjmp	.-3930   	; 0x244 <LCD_WriteData>
		case 20:
			LCD_Cursor(15);
    119e:	08 95       	ret
    11a0:	60 e0       	ldi	r22, 0x00	; 0
    11a2:	80 e0       	ldi	r24, 0x00	; 0
			LCD_WriteData('20');
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	bf d0       	rcall	.+382    	; 0x1326 <eeprom_update_byte>
    11a8:	80 e1       	ldi	r24, 0x10	; 16
			break;
    11aa:	35 d8       	rcall	.-3990   	; 0x216 <LCD_Cursor>
		default:
			eeprom_update_byte(0,0);
    11ac:	80 e3       	ldi	r24, 0x30	; 48
    11ae:	4a c8       	rjmp	.-3948   	; 0x244 <LCD_WriteData>
    11b0:	08 95       	ret

000011b2 <main>:
    11b2:	8f ef       	ldi	r24, 0xFF	; 255
			LCD_Cursor(16);
    11b4:	81 b9       	out	0x01, r24	; 1
    11b6:	12 b8       	out	0x02, r1	; 2
    11b8:	9c e0       	ldi	r25, 0x0C	; 12
			LCD_WriteData('0');
    11ba:	94 b9       	out	0x04, r25	; 4
    11bc:	93 ef       	ldi	r25, 0xF3	; 243
    11be:	95 b9       	out	0x05, r25	; 5
    11c0:	90 ef       	ldi	r25, 0xF0	; 240
}
int main(void)
{
	DDRA = 0xFF; PORTA = 0x00;
	DDRB = 0x0C; PORTB = 0xF3;
	DDRC = 0xF0; PORTC = 0x0F;
    11c2:	97 b9       	out	0x07, r25	; 7
    11c4:	9f e0       	ldi	r25, 0x0F	; 15
    11c6:	98 b9       	out	0x08, r25	; 8
	DDRD = 0xFF; PORTD = 0x00;
    11c8:	8a b9       	out	0x0a, r24	; 10
    11ca:	1b b8       	out	0x0b, r1	; 11
	unsigned char checkPuzzle = 0x00;
	TimerOn();
    11cc:	0e 94 8c 00 	call	0x118	; 0x118 <TimerOn>
	TimerSet(300);
    11d0:	6c e2       	ldi	r22, 0x2C	; 44
    11d2:	71 e0       	ldi	r23, 0x01	; 1
    11d4:	80 e0       	ldi	r24, 0x00	; 0
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	0e 94 7b 00 	call	0xf6	; 0xf6 <TimerSet>
	LCD_init();
    11dc:	24 d8       	rcall	.-4024   	; 0x226 <LCD_init>
	LCD_WriteCommand(0x0C);
    11de:	8c e0       	ldi	r24, 0x0C	; 12
    11e0:	0e d8       	rcall	.-4068   	; 0x1fe <LCD_WriteCommand>
	displayStartScreen();
    11e2:	03 dc       	rcall	.-2042   	; 0x9ea <displayStartScreen>
	while(1){ //START GAME
		unsigned char startButton = ~PINB & 0x01;
		if(startButton){
    11e4:	18 99       	sbic	0x03, 0	; 3
    11e6:	fe cf       	rjmp	.-4      	; 0x11e4 <main+0x32>
			break;
		}
	}
	while (1) 
    {
		LCD_ClearScreen();
    11e8:	13 d8       	rcall	.-4058   	; 0x210 <LCD_ClearScreen>
		checkPuzzle = wordLockPuzzle();
    11ea:	19 dc       	rcall	.-1998   	; 0xa1e <wordLockPuzzle>
			if(checkPuzzle == 1){
    11ec:	81 30       	cpi	r24, 0x01	; 1
    11ee:	31 f4       	brne	.+12     	; 0x11fc <main+0x4a>
				LCD_DisplayString(1, "STEP 1 COMPLETE Press to Proceed");
    11f0:	6b e2       	ldi	r22, 0x2B	; 43
    11f2:	72 e0       	ldi	r23, 0x02	; 2
    11f4:	30 d8       	rcall	.-4000   	; 0x256 <LCD_DisplayString>
    11f6:	18 99       	sbic	0x03, 0	; 3
				while(1){
					unsigned char startButton = ~PINB & 0x01;
					if(startButton){
    11f8:	fe cf       	rjmp	.-4      	; 0x11f6 <main+0x44>
    11fa:	10 c0       	rjmp	.+32     	; 0x121c <main+0x6a>
						break;
					}
				}
			}
			if(checkPuzzle == 0){
    11fc:	81 11       	cpse	r24, r1
    11fe:	39 c0       	rjmp	.+114    	; 0x1272 <main+0xc0>
				LCD_DisplayString(1, "    *KABOOM*        YOU LOSE");
    1200:	6c e4       	ldi	r22, 0x4C	; 76
    1202:	72 e0       	ldi	r23, 0x02	; 2
    1204:	81 e0       	ldi	r24, 0x01	; 1
    1206:	27 d8       	rcall	.-4018   	; 0x256 <LCD_DisplayString>
    1208:	98 e0       	ldi	r25, 0x08	; 8
    120a:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
				for(unsigned char i = 0; i < 8; ++i){
					while(!TimerFlag){	}
    120e:	88 23       	and	r24, r24
    1210:	e1 f3       	breq	.-8      	; 0x120a <main+0x58>
    1212:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
					TimerFlag = 0;
    1216:	91 50       	subi	r25, 0x01	; 1
    1218:	c1 f7       	brne	.-16     	; 0x120a <main+0x58>
					}
				}
			}
			if(checkPuzzle == 0){
				LCD_DisplayString(1, "    *KABOOM*        YOU LOSE");
				for(unsigned char i = 0; i < 8; ++i){
    121a:	67 c0       	rjmp	.+206    	; 0x12ea <main+0x138>
    121c:	0e 94 08 01 	call	0x210	; 0x210 <LCD_ClearScreen>
				}
				break;
			}
		if(checkPuzzle == 1){
			LCD_ClearScreen();
			checkPuzzle = simonSaysPuzzle();
    1220:	5e dc       	rcall	.-1860   	; 0xade <simonSaysPuzzle>
		}
			if(checkPuzzle == 1){
    1222:	81 30       	cpi	r24, 0x01	; 1
    1224:	31 f4       	brne	.+12     	; 0x1232 <main+0x80>
				LCD_DisplayString(1, "STEP 2 COMPLETE Press to Proceed");
    1226:	69 e6       	ldi	r22, 0x69	; 105
    1228:	72 e0       	ldi	r23, 0x02	; 2
    122a:	15 d8       	rcall	.-4054   	; 0x256 <LCD_DisplayString>
				while(1){
					unsigned char startButton = ~PINB & 0x01;
					if(startButton){
    122c:	18 99       	sbic	0x03, 0	; 3
    122e:	fe cf       	rjmp	.-4      	; 0x122c <main+0x7a>
    1230:	13 c0       	rjmp	.+38     	; 0x1258 <main+0xa6>
						break;
					}
				}
			}
			if(checkPuzzle == 0){
    1232:	81 11       	cpse	r24, r1
    1234:	0e c0       	rjmp	.+28     	; 0x1252 <main+0xa0>
				LCD_DisplayString(1, "    *KABOOM*        YOU LOSE");
    1236:	6c e4       	ldi	r22, 0x4C	; 76
    1238:	72 e0       	ldi	r23, 0x02	; 2
    123a:	81 e0       	ldi	r24, 0x01	; 1
    123c:	0c d8       	rcall	.-4072   	; 0x256 <LCD_DisplayString>
    123e:	98 e0       	ldi	r25, 0x08	; 8
    1240:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
				for(unsigned char i = 0; i < 8; ++i){
					while(!TimerFlag){	}
    1244:	88 23       	and	r24, r24
    1246:	e1 f3       	breq	.-8      	; 0x1240 <main+0x8e>
    1248:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
					TimerFlag = 0;
    124c:	91 50       	subi	r25, 0x01	; 1
    124e:	c1 f7       	brne	.-16     	; 0x1240 <main+0x8e>
					}
				}
			}
			if(checkPuzzle == 0){
				LCD_DisplayString(1, "    *KABOOM*        YOU LOSE");
				for(unsigned char i = 0; i < 8; ++i){
    1250:	4c c0       	rjmp	.+152    	; 0x12ea <main+0x138>
    1252:	81 30       	cpi	r24, 0x01	; 1
					while(!TimerFlag){	}
					TimerFlag = 0;
				}
				break;
			} 
		if(checkPuzzle == 1){
    1254:	09 f0       	breq	.+2      	; 0x1258 <main+0xa6>
    1256:	c8 cf       	rjmp	.-112    	; 0x11e8 <main+0x36>
			LCD_ClearScreen();
    1258:	0e 94 08 01 	call	0x210	; 0x210 <LCD_ClearScreen>
			checkPuzzle = matchSymbolsPuzzle();
    125c:	0d de       	rcall	.-998    	; 0xe78 <matchSymbolsPuzzle>
    125e:	81 30       	cpi	r24, 0x01	; 1
		}
			if(checkPuzzle == 1){
    1260:	09 f0       	breq	.+2      	; 0x1264 <main+0xb2>
    1262:	40 c0       	rjmp	.+128    	; 0x12e4 <main+0x132>
    1264:	6a e8       	ldi	r22, 0x8A	; 138
				LCD_DisplayString(1, "STEP 3 COMPLETE Press to Proceed");
    1266:	72 e0       	ldi	r23, 0x02	; 2
    1268:	0e 94 2b 01 	call	0x256	; 0x256 <LCD_DisplayString>
    126c:	18 99       	sbic	0x03, 0	; 3
				while(1){
					unsigned char startButton = ~PINB & 0x01;
					if(startButton){
    126e:	fe cf       	rjmp	.-4      	; 0x126c <main+0xba>
    1270:	14 c0       	rjmp	.+40     	; 0x129a <main+0xe8>
    1272:	81 11       	cpse	r24, r1
						break;
					}
				}
			}
			if(checkPuzzle == 0){
    1274:	0f c0       	rjmp	.+30     	; 0x1294 <main+0xe2>
    1276:	6c e4       	ldi	r22, 0x4C	; 76
				LCD_DisplayString(1, "    *KABOOM*        YOU LOSE");
    1278:	72 e0       	ldi	r23, 0x02	; 2
    127a:	81 e0       	ldi	r24, 0x01	; 1
    127c:	0e 94 2b 01 	call	0x256	; 0x256 <LCD_DisplayString>
    1280:	98 e0       	ldi	r25, 0x08	; 8
    1282:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
				for(unsigned char i = 0; i < 8; ++i){
					while(!TimerFlag){	}
    1286:	88 23       	and	r24, r24
    1288:	e1 f3       	breq	.-8      	; 0x1282 <main+0xd0>
    128a:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
					TimerFlag = 0;
    128e:	91 50       	subi	r25, 0x01	; 1
    1290:	c1 f7       	brne	.-16     	; 0x1282 <main+0xd0>
					}
				}
			}
			if(checkPuzzle == 0){
				LCD_DisplayString(1, "    *KABOOM*        YOU LOSE");
				for(unsigned char i = 0; i < 8; ++i){
    1292:	2b c0       	rjmp	.+86     	; 0x12ea <main+0x138>
    1294:	81 30       	cpi	r24, 0x01	; 1
					while(!TimerFlag){	}
					TimerFlag = 0;
				}
				break;
			}
		if(checkPuzzle == 1){
    1296:	09 f0       	breq	.+2      	; 0x129a <main+0xe8>
    1298:	a7 cf       	rjmp	.-178    	; 0x11e8 <main+0x36>
			LCD_ClearScreen();
    129a:	0e 94 08 01 	call	0x210	; 0x210 <LCD_ClearScreen>
			checkPuzzle = mazePuzzle();
    129e:	2e de       	rcall	.-932    	; 0xefc <mazePuzzle>
    12a0:	81 30       	cpi	r24, 0x01	; 1
		}
			if(checkPuzzle == 1){
    12a2:	79 f4       	brne	.+30     	; 0x12c2 <main+0x110>
    12a4:	6b ea       	ldi	r22, 0xAB	; 171
				LCD_DisplayString(1, "MODULES COMPLETE  BOMB DEFUSED");
    12a6:	72 e0       	ldi	r23, 0x02	; 2
    12a8:	0e 94 2b 01 	call	0x256	; 0x256 <LCD_DisplayString>
    12ac:	98 e0       	ldi	r25, 0x08	; 8
    12ae:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
				for(unsigned char i = 0; i < 8; ++i){
					while(!TimerFlag){	}
    12b2:	88 23       	and	r24, r24
    12b4:	e1 f3       	breq	.-8      	; 0x12ae <main+0xfc>
					TimerFlag = 0;
    12b6:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
    12ba:	91 50       	subi	r25, 0x01	; 1
			LCD_ClearScreen();
			checkPuzzle = mazePuzzle();
		}
			if(checkPuzzle == 1){
				LCD_DisplayString(1, "MODULES COMPLETE  BOMB DEFUSED");
				for(unsigned char i = 0; i < 8; ++i){
    12bc:	c1 f7       	brne	.-16     	; 0x12ae <main+0xfc>
					while(!TimerFlag){	}
					TimerFlag = 0;
				}
				updateEEPROM();
    12be:	f2 de       	rcall	.-540    	; 0x10a4 <updateEEPROM>
    12c0:	14 c0       	rjmp	.+40     	; 0x12ea <main+0x138>
				break;
    12c2:	81 11       	cpse	r24, r1
			}
			if(checkPuzzle == 0){
    12c4:	91 cf       	rjmp	.-222    	; 0x11e8 <main+0x36>
    12c6:	6c e4       	ldi	r22, 0x4C	; 76
				LCD_DisplayString(1, "    *KABOOM*        YOU LOSE");
    12c8:	72 e0       	ldi	r23, 0x02	; 2
    12ca:	81 e0       	ldi	r24, 0x01	; 1
    12cc:	0e 94 2b 01 	call	0x256	; 0x256 <LCD_DisplayString>
    12d0:	98 e0       	ldi	r25, 0x08	; 8
    12d2:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <TimerFlag>
				for(unsigned char i = 0; i < 8; ++i){
					while(!TimerFlag){	}
    12d6:	88 23       	and	r24, r24
    12d8:	e1 f3       	breq	.-8      	; 0x12d2 <main+0x120>
    12da:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <TimerFlag>
					TimerFlag = 0;
    12de:	91 50       	subi	r25, 0x01	; 1
    12e0:	c1 f7       	brne	.-16     	; 0x12d2 <main+0x120>
				updateEEPROM();
				break;
			}
			if(checkPuzzle == 0){
				LCD_DisplayString(1, "    *KABOOM*        YOU LOSE");
				for(unsigned char i = 0; i < 8; ++i){
    12e2:	03 c0       	rjmp	.+6      	; 0x12ea <main+0x138>
    12e4:	81 11       	cpse	r24, r1
					if(startButton){
						break;
					}
				}
			}
			if(checkPuzzle == 0){
    12e6:	80 cf       	rjmp	.-256    	; 0x11e8 <main+0x36>
    12e8:	c6 cf       	rjmp	.-116    	; 0x1276 <main+0xc4>
    12ea:	0e 94 08 01 	call	0x210	; 0x210 <LCD_ClearScreen>
					TimerFlag = 0;
				}
				break;
			} 
    }
	LCD_ClearScreen();
    12ee:	8f ef       	ldi	r24, 0xFF	; 255
	//LCD_DisplayString(1, "                                ");
	PORTA = 0xFF;
    12f0:	82 b9       	out	0x02, r24	; 2
	LCD_DisplayString(1, "BOMBS DEFUSED:");
    12f2:	6a ec       	ldi	r22, 0xCA	; 202
    12f4:	72 e0       	ldi	r23, 0x02	; 2
    12f6:	81 e0       	ldi	r24, 0x01	; 1
    12f8:	0e 94 2b 01 	call	0x256	; 0x256 <LCD_DisplayString>
	/*resetEEPROM();
	updateEEPROM(); */
	getDefuses();
    12fc:	dc de       	rcall	.-584    	; 0x10b6 <getDefuses>
    12fe:	80 e0       	ldi	r24, 0x00	; 0
}
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	08 95       	ret

00001304 <__tablejump2__>:
    1304:	ee 0f       	add	r30, r30
    1306:	ff 1f       	adc	r31, r31
    1308:	00 24       	eor	r0, r0
    130a:	00 1c       	adc	r0, r0
    130c:	0b be       	out	0x3b, r0	; 59
    130e:	07 90       	elpm	r0, Z+
    1310:	f6 91       	elpm	r31, Z
    1312:	e0 2d       	mov	r30, r0
    1314:	09 94       	ijmp

00001316 <eeprom_read_byte>:
    1316:	f9 99       	sbic	0x1f, 1	; 31
    1318:	fe cf       	rjmp	.-4      	; 0x1316 <eeprom_read_byte>
    131a:	92 bd       	out	0x22, r25	; 34
    131c:	81 bd       	out	0x21, r24	; 33
    131e:	f8 9a       	sbi	0x1f, 0	; 31
    1320:	99 27       	eor	r25, r25
    1322:	80 b5       	in	r24, 0x20	; 32
    1324:	08 95       	ret

00001326 <eeprom_update_byte>:
    1326:	26 2f       	mov	r18, r22

00001328 <eeprom_update_r18>:
    1328:	f9 99       	sbic	0x1f, 1	; 31
    132a:	fe cf       	rjmp	.-4      	; 0x1328 <eeprom_update_r18>
    132c:	92 bd       	out	0x22, r25	; 34
    132e:	81 bd       	out	0x21, r24	; 33
    1330:	f8 9a       	sbi	0x1f, 0	; 31
    1332:	01 97       	sbiw	r24, 0x01	; 1
    1334:	00 b4       	in	r0, 0x20	; 32
    1336:	02 16       	cp	r0, r18
    1338:	39 f0       	breq	.+14     	; 0x1348 <eeprom_update_r18+0x20>
    133a:	1f ba       	out	0x1f, r1	; 31
    133c:	20 bd       	out	0x20, r18	; 32
    133e:	0f b6       	in	r0, 0x3f	; 63
    1340:	f8 94       	cli
    1342:	fa 9a       	sbi	0x1f, 2	; 31
    1344:	f9 9a       	sbi	0x1f, 1	; 31
    1346:	0f be       	out	0x3f, r0	; 63
    1348:	08 95       	ret

0000134a <_exit>:
    134a:	f8 94       	cli

0000134c <__stop_program>:
    134c:	ff cf       	rjmp	.-2      	; 0x134c <__stop_program>
